###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       18/Jun/2018  09:30:04
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\app\driver\src\gpio.c
#    Command line =  
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\app\driver\src\gpio.c
#        -D LPLD_K60 -lCN
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\RAM\List -lB
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\RAM\List -o
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\RAM\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\ -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\CPU\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\common\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\LPLD\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\LPLD\HW\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\FatFs\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\FatFs\option\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\USB\common\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\USB\driver\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\USB\descriptor\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\USB\class\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\control\inc\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\control\src\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\debug\inc\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\debug\src\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\device\inc\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\device\src\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\driver\inc\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\driver\src\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\signal\inc\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\signal\src\
#        -I D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\system\
#        -Ol -I "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\"
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\RAM\List\gpio.lst
#    Object file  =  
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\RAM\Obj\gpio.o
#
###############################################################################

D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\app\driver\src\gpio.c
      1          #include "gpio.h"
      2          

   \                                 In section .text, align 4, keep-with-next
      3          void GPIO_Init(GPIO_Type *PTx, uint32 GPIO_Pinx, uint8 Dir, uint8 Level)
      4          {
   \                     GPIO_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
      5            static GPIO_InitTypeDef gpio_init_struct;
      6            
      7            switch(Dir)
   \   00000002   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000004   0x2A00             CMP      R2,#+0
   \   00000006   0xD002             BEQ.N    ??GPIO_Init_0
   \   00000008   0x2A01             CMP      R2,#+1
   \   0000000A   0xD017             BEQ.N    ??GPIO_Init_1
   \   0000000C   0xE02C             B.N      ??GPIO_Init_2
      8            {
      9                case DIR_INPUT:
     10                  gpio_init_struct.GPIO_PTx = PTx;
   \                     ??GPIO_Init_0: (+1)
   \   0000000E   0x4A17             LDR.N    R2,??GPIO_Init_3
   \   00000010   0x6010             STR      R0,[R2, #+0]
     11                  gpio_init_struct.GPIO_Pins = GPIO_Pinx;                  //注意：初始化时得用GPIO_Pinx，而LPLD_GPIO_Output_b中直接用x
   \   00000012   0x4816             LDR.N    R0,??GPIO_Init_3
   \   00000014   0x6041             STR      R1,[R0, #+4]
     12                  gpio_init_struct.GPIO_Dir = DIR_INPUT;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x4914             LDR.N    R1,??GPIO_Init_3
   \   0000001A   0x7308             STRB     R0,[R1, #+12]
     13                  gpio_init_struct.GPIO_Output = OUTPUT_L;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x4913             LDR.N    R1,??GPIO_Init_3
   \   00000020   0x7348             STRB     R0,[R1, #+13]
     14                  gpio_init_struct.GPIO_PinControl = IRQC_DIS;             //内部(上/下)拉|不产生中断
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x4911             LDR.N    R1,??GPIO_Init_3
   \   00000026   0x6088             STR      R0,[R1, #+8]
     15                  LPLD_GPIO_Init(gpio_init_struct);
   \   00000028   0x4910             LDR.N    R1,??GPIO_Init_3
   \   0000002A   0xB084             SUB      SP,SP,#+16
   \   0000002C   0x4668             MOV      R0,SP
   \   0000002E   0x2214             MOVS     R2,#+20
   \   00000030   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000034   0xBC0F             POP      {R0-R3}
   \   00000036   0x.... 0x....      BL       LPLD_GPIO_Init
     16                  break;
   \   0000003A   0xE015             B.N      ??GPIO_Init_4
     17                  
     18                case DIR_OUTPUT:
     19                  gpio_init_struct.GPIO_PTx = PTx;
   \                     ??GPIO_Init_1: (+1)
   \   0000003C   0x4A0B             LDR.N    R2,??GPIO_Init_3
   \   0000003E   0x6010             STR      R0,[R2, #+0]
     20                  gpio_init_struct.GPIO_Pins = GPIO_Pinx;                  //注意：初始化时得用GPIO_Pinx，而LPLD_GPIO_Output_b中直接用x
   \   00000040   0x480A             LDR.N    R0,??GPIO_Init_3
   \   00000042   0x6041             STR      R1,[R0, #+4]
     21                  gpio_init_struct.GPIO_Dir = DIR_OUTPUT;
   \   00000044   0x2001             MOVS     R0,#+1
   \   00000046   0x4909             LDR.N    R1,??GPIO_Init_3
   \   00000048   0x7308             STRB     R0,[R1, #+12]
     22                  gpio_init_struct.GPIO_Output = Level;
   \   0000004A   0x4808             LDR.N    R0,??GPIO_Init_3
   \   0000004C   0x7343             STRB     R3,[R0, #+13]
     23                  gpio_init_struct.GPIO_PinControl = IRQC_DIS;
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x4906             LDR.N    R1,??GPIO_Init_3
   \   00000052   0x6088             STR      R0,[R1, #+8]
     24                  LPLD_GPIO_Init(gpio_init_struct);
   \   00000054   0x4905             LDR.N    R1,??GPIO_Init_3
   \   00000056   0xB084             SUB      SP,SP,#+16
   \   00000058   0x4668             MOV      R0,SP
   \   0000005A   0x2214             MOVS     R2,#+20
   \   0000005C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000060   0xBC0F             POP      {R0-R3}
   \   00000062   0x.... 0x....      BL       LPLD_GPIO_Init
     25                  break;
   \   00000066   0xE7FF             B.N      ??GPIO_Init_4
     26                default :
     27                  break;
     28            }
     29          }
   \                     ??GPIO_Init_2: (+1)
   \                     ??GPIO_Init_4: (+1)
   \   00000068   0xBD01             POP      {R0,PC}          ;; return
   \   0000006A   0xBF00             Nop      
   \                     ??GPIO_Init_3:
   \   0000006C   0x........         DC32     `GPIO_Init::gpio_init_struct`

   \                                 In section .bss, align 4
   \                     `GPIO_Init::gpio_init_struct`:
   \   00000000                      DS8 20
     30          
     31          
     32          
     33          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   GPIO_Init
         8   -> LPLD_GPIO_Init
        24   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     112  GPIO_Init
      20  gpio_init_struct

 
  20 bytes in section .bss
 112 bytes in section .text
 
 112 bytes of CODE memory
  20 bytes of DATA memory

Errors: none
Warnings: none
