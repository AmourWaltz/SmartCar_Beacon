###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       18/Jun/2018  09:30:07
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\app\driver\src\PIT.c
#    Command line =  
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\app\driver\src\PIT.c -D
#        LPLD_K60 -lCN
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\RAM\List -lB
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\RAM\List -o
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\RAM\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\ -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\CPU\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\common\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\LPLD\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\LPLD\HW\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\FatFs\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\FatFs\option\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\USB\common\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\USB\driver\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\USB\descriptor\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\USB\class\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\control\inc\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\control\src\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\debug\inc\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\debug\src\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\device\inc\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\device\src\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\driver\inc\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\driver\src\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\signal\inc\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\signal\src\
#        -I D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\system\
#        -Ol -I "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\"
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\RAM\List\PIT.lst
#    Object file  =  
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\RAM\Obj\PIT.o
#
###############################################################################

D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\app\driver\src\PIT.c
      1          #include "pit.h"
      2          #include "interrupt.h"
      3          
      4          //定义PIT全局结构
      5          #ifdef PIT_0_INIT

   \                                 In section .bss, align 4
      6          	PIT_InitTypeDef struct_PIT_0;
   \                     struct_PIT_0:
   \   00000000                      DS8 20
      7          #endif
      8          
      9          #ifdef PIT_1_INIT

   \                                 In section .bss, align 4
     10          	PIT_InitTypeDef struct_PIT_1;
   \                     struct_PIT_1:
   \   00000000                      DS8 20
     11          #endif
     12          
     13          #ifdef PIT_2_INIT

   \                                 In section .bss, align 4
     14          	PIT_InitTypeDef struct_PIT_2;
   \                     struct_PIT_2:
   \   00000000                      DS8 20
     15          #endif
     16            
     17          #ifdef PIT_3_INIT

   \                                 In section .bss, align 4
     18          	PIT_InitTypeDef struct_PIT_3;
   \                     struct_PIT_3:
   \   00000000                      DS8 20
     19          #endif
     20          
     21            
     22          /*=================================*
     23           *		函数名：PIT_Init(void)
     24           *		PIT初始化
     25           *=================================*/

   \                                 In section .text, align 2, keep-with-next
     26          void PIT_Init(void)
     27          {
   \                     PIT_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     28          	static NVIC_InitTypeDef NVIC_typeDefTemp;
     29          
     30          
     31          #ifdef PIT_0_INIT
     32          	//配置PIT0参数
     33          	struct_PIT_0.PIT_Pitx = PIT0;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x....             LDR.N    R1,??DataTable4
   \   00000006   0x7008             STRB     R0,[R1, #+0]
     34          	struct_PIT_0.PIT_PeriodUs = PIT_0_PERIOD_US;     //定时周期
   \   00000008   0x2064             MOVS     R0,#+100
   \   0000000A   0x....             LDR.N    R1,??DataTable4
   \   0000000C   0x6048             STR      R0,[R1, #+4]
     35          	struct_PIT_0.PIT_Isr = PIT_0_handler;  //设置中断函数
   \   0000000E   0x.... 0x....      ADR.W    R0,PIT_0_handler
   \   00000012   0x....             LDR.N    R1,??DataTable4
   \   00000014   0x6108             STR      R0,[R1, #+16]
     36          	//初始化PIT0
     37          	LPLD_PIT_Init(struct_PIT_0);
   \   00000016   0x....             LDR.N    R1,??DataTable4
   \   00000018   0xB084             SUB      SP,SP,#+16
   \   0000001A   0x4668             MOV      R0,SP
   \   0000001C   0x2214             MOVS     R2,#+20
   \   0000001E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000022   0xBC0F             POP      {R0-R3}
   \   00000024   0x.... 0x....      BL       LPLD_PIT_Init
     38          
     39          #endif
     40          
     41          #ifdef PIT_1_INIT
     42          	//配置PIT1参数
     43          	struct_PIT_1.PIT_Pitx = PIT1;
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0x....             LDR.N    R1,??DataTable4_1
   \   0000002C   0x7008             STRB     R0,[R1, #+0]
     44          	struct_PIT_1.PIT_PeriodMs = PIT_1_PERIOD_MS;     //定时周期
   \   0000002E   0x2005             MOVS     R0,#+5
   \   00000030   0x....             LDR.N    R1,??DataTable4_1
   \   00000032   0x6088             STR      R0,[R1, #+8]
     45          	struct_PIT_1.PIT_Isr = PIT_1_handler;  //设置中断函数
   \   00000034   0x.... 0x....      ADR.W    R0,PIT_1_handler
   \   00000038   0x....             LDR.N    R1,??DataTable4_1
   \   0000003A   0x6108             STR      R0,[R1, #+16]
     46          	//初始化PIT1
     47          	LPLD_PIT_Init(struct_PIT_1);
   \   0000003C   0x....             LDR.N    R1,??DataTable4_1
   \   0000003E   0xB084             SUB      SP,SP,#+16
   \   00000040   0x4668             MOV      R0,SP
   \   00000042   0x2214             MOVS     R2,#+20
   \   00000044   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000048   0xBC0F             POP      {R0-R3}
   \   0000004A   0x.... 0x....      BL       LPLD_PIT_Init
     48          
     49          #endif
     50            
     51          #ifdef PIT_2_INIT
     52          	//配置PIT2参数
     53          	struct_PIT_2.PIT_Pitx = PIT2;
   \   0000004E   0x2002             MOVS     R0,#+2
   \   00000050   0x....             LDR.N    R1,??DataTable4_2
   \   00000052   0x7008             STRB     R0,[R1, #+0]
     54          	struct_PIT_2.PIT_PeriodS = PIT_2_PERIOD_S;     //定时周期
   \   00000054   0x2005             MOVS     R0,#+5
   \   00000056   0x....             LDR.N    R1,??DataTable4_2
   \   00000058   0x60C8             STR      R0,[R1, #+12]
     55          	struct_PIT_2.PIT_Isr = PIT_2_handler;  //设置中断函数
   \   0000005A   0x.... 0x....      ADR.W    R0,PIT_2_handler
   \   0000005E   0x....             LDR.N    R1,??DataTable4_2
   \   00000060   0x6108             STR      R0,[R1, #+16]
     56          	//初始化PIT2
     57          	LPLD_PIT_Init(struct_PIT_2);
   \   00000062   0x....             LDR.N    R1,??DataTable4_2
   \   00000064   0xB084             SUB      SP,SP,#+16
   \   00000066   0x4668             MOV      R0,SP
   \   00000068   0x2214             MOVS     R2,#+20
   \   0000006A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000006E   0xBC0F             POP      {R0-R3}
   \   00000070   0x.... 0x....      BL       LPLD_PIT_Init
     58          
     59          #endif
     60            
     61          #ifdef PIT_3_INIT
     62          	//配置PIT3参数
     63          	struct_PIT_3.PIT_Pitx = PIT3;
   \   00000074   0x2003             MOVS     R0,#+3
   \   00000076   0x....             LDR.N    R1,??DataTable4_3
   \   00000078   0x7008             STRB     R0,[R1, #+0]
     64          	struct_PIT_3.PIT_PeriodMs = PIT_3_PERIOD_MS;     //定时周期
   \   0000007A   0x2005             MOVS     R0,#+5
   \   0000007C   0x....             LDR.N    R1,??DataTable4_3
   \   0000007E   0x6088             STR      R0,[R1, #+8]
     65          	struct_PIT_3.PIT_Isr = PIT_3_handler;  //设置中断函数
   \   00000080   0x.... 0x....      ADR.W    R0,PIT_3_handler
   \   00000084   0x....             LDR.N    R1,??DataTable4_3
   \   00000086   0x6108             STR      R0,[R1, #+16]
     66          	//初始化PIT3
     67          	LPLD_PIT_Init(struct_PIT_3);
   \   00000088   0x....             LDR.N    R1,??DataTable4_3
   \   0000008A   0xB084             SUB      SP,SP,#+16
   \   0000008C   0x4668             MOV      R0,SP
   \   0000008E   0x2214             MOVS     R2,#+20
   \   00000090   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000094   0xBC0F             POP      {R0-R3}
   \   00000096   0x.... 0x....      BL       LPLD_PIT_Init
     68          
     69          #endif
     70          	
     71          	//禁用PIT
     72          	PIT_ALL_Disable();
   \   0000009A   0x.... 0x....      BL       PIT_ALL_Disable
     73          }
   \   0000009E   0xBD01             POP      {R0,PC}          ;; return
     74          
     75          /*===============================================*
     76           *		函数名：PIT_ONE_Enable(uint8 pit_num)
     77           *		使能一个PIT
     78           *===============================================*/

   \                                 In section .text, align 2, keep-with-next
     79          void PIT_ONE_Enable(uint8 pit_num)
     80          {
   \                     PIT_ONE_Enable: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     81          	switch (pit_num)
   \   00000002   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD005             BEQ.N    ??PIT_ONE_Enable_0
   \   00000008   0x2802             CMP      R0,#+2
   \   0000000A   0xD017             BEQ.N    ??PIT_ONE_Enable_1
   \   0000000C   0xD30C             BCC.N    ??PIT_ONE_Enable_2
   \   0000000E   0x2803             CMP      R0,#+3
   \   00000010   0xD01E             BEQ.N    ??PIT_ONE_Enable_3
   \   00000012   0xE027             B.N      ??PIT_ONE_Enable_4
     82          	{
     83          		#ifdef PIT_0_INIT
     84          		case PIT_0_INIT:
     85          			LPLD_PIT_EnableIrq(struct_PIT_0); 
   \                     ??PIT_ONE_Enable_0: (+1)
   \   00000014   0x....             LDR.N    R1,??DataTable4
   \   00000016   0xB084             SUB      SP,SP,#+16
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x2214             MOVS     R2,#+20
   \   0000001C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000020   0xBC0F             POP      {R0-R3}
   \   00000022   0x.... 0x....      BL       LPLD_PIT_EnableIrq
     86          			break;
   \   00000026   0xE01D             B.N      ??PIT_ONE_Enable_5
     87          		#endif
     88          
     89          		#ifdef PIT_1_INIT
     90          		case PIT_1_INIT:
     91          			LPLD_PIT_EnableIrq(struct_PIT_1); 
   \                     ??PIT_ONE_Enable_2: (+1)
   \   00000028   0x....             LDR.N    R1,??DataTable4_1
   \   0000002A   0xB084             SUB      SP,SP,#+16
   \   0000002C   0x4668             MOV      R0,SP
   \   0000002E   0x2214             MOVS     R2,#+20
   \   00000030   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000034   0xBC0F             POP      {R0-R3}
   \   00000036   0x.... 0x....      BL       LPLD_PIT_EnableIrq
     92          			break;
   \   0000003A   0xE013             B.N      ??PIT_ONE_Enable_5
     93          		#endif
     94           
     95          		#ifdef PIT_2_INIT
     96          		case PIT_2_INIT:
     97          			LPLD_PIT_EnableIrq(struct_PIT_2); 
   \                     ??PIT_ONE_Enable_1: (+1)
   \   0000003C   0x....             LDR.N    R1,??DataTable4_2
   \   0000003E   0xB084             SUB      SP,SP,#+16
   \   00000040   0x4668             MOV      R0,SP
   \   00000042   0x2214             MOVS     R2,#+20
   \   00000044   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000048   0xBC0F             POP      {R0-R3}
   \   0000004A   0x.... 0x....      BL       LPLD_PIT_EnableIrq
     98          			break;
   \   0000004E   0xE009             B.N      ??PIT_ONE_Enable_5
     99          		#endif
    100            
    101          		#ifdef PIT_3_INIT
    102          		case PIT_3_INIT:
    103          			LPLD_PIT_EnableIrq(struct_PIT_3); 
   \                     ??PIT_ONE_Enable_3: (+1)
   \   00000050   0x....             LDR.N    R1,??DataTable4_3
   \   00000052   0xB084             SUB      SP,SP,#+16
   \   00000054   0x4668             MOV      R0,SP
   \   00000056   0x2214             MOVS     R2,#+20
   \   00000058   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000005C   0xBC0F             POP      {R0-R3}
   \   0000005E   0x.... 0x....      BL       LPLD_PIT_EnableIrq
    104          			break;
   \   00000062   0xE7FF             B.N      ??PIT_ONE_Enable_5
    105          		#endif
    106          			
    107          		default: break;
    108          	}
    109          }
   \                     ??PIT_ONE_Enable_4: (+1)
   \                     ??PIT_ONE_Enable_5: (+1)
   \   00000064   0xBD01             POP      {R0,PC}          ;; return
    110          
    111          
    112          /*===============================================*
    113           *		函数名：PIT_ONE_Disable(uint8 pit_num)
    114           *		禁用一个PIT
    115           *===============================================*/

   \                                 In section .text, align 2, keep-with-next
    116          void PIT_ONE_Disable(uint8 pit_num)
    117          {
   \                     PIT_ONE_Disable: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    118          		switch (pit_num)
   \   00000002   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD005             BEQ.N    ??PIT_ONE_Disable_0
   \   00000008   0x2802             CMP      R0,#+2
   \   0000000A   0xD017             BEQ.N    ??PIT_ONE_Disable_1
   \   0000000C   0xD30C             BCC.N    ??PIT_ONE_Disable_2
   \   0000000E   0x2803             CMP      R0,#+3
   \   00000010   0xD01E             BEQ.N    ??PIT_ONE_Disable_3
   \   00000012   0xE027             B.N      ??PIT_ONE_Disable_4
    119          	{
    120          		#ifdef PIT_0_INIT
    121          		case PIT_0_INIT:
    122          			LPLD_PIT_DisableIrq(struct_PIT_0); 
   \                     ??PIT_ONE_Disable_0: (+1)
   \   00000014   0x....             LDR.N    R1,??DataTable4
   \   00000016   0xB084             SUB      SP,SP,#+16
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x2214             MOVS     R2,#+20
   \   0000001C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000020   0xBC0F             POP      {R0-R3}
   \   00000022   0x.... 0x....      BL       LPLD_PIT_DisableIrq
    123          			break;
   \   00000026   0xE01D             B.N      ??PIT_ONE_Disable_5
    124          		#endif
    125          
    126          		#ifdef PIT_1_INIT
    127          		case PIT_1_INIT:
    128          			LPLD_PIT_DisableIrq(struct_PIT_1); 
   \                     ??PIT_ONE_Disable_2: (+1)
   \   00000028   0x....             LDR.N    R1,??DataTable4_1
   \   0000002A   0xB084             SUB      SP,SP,#+16
   \   0000002C   0x4668             MOV      R0,SP
   \   0000002E   0x2214             MOVS     R2,#+20
   \   00000030   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000034   0xBC0F             POP      {R0-R3}
   \   00000036   0x.... 0x....      BL       LPLD_PIT_DisableIrq
    129          			break;
   \   0000003A   0xE013             B.N      ??PIT_ONE_Disable_5
    130          		#endif
    131           
    132          		#ifdef PIT_2_INIT
    133          		case PIT_2_INIT:
    134          			LPLD_PIT_DisableIrq(struct_PIT_2); 
   \                     ??PIT_ONE_Disable_1: (+1)
   \   0000003C   0x....             LDR.N    R1,??DataTable4_2
   \   0000003E   0xB084             SUB      SP,SP,#+16
   \   00000040   0x4668             MOV      R0,SP
   \   00000042   0x2214             MOVS     R2,#+20
   \   00000044   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000048   0xBC0F             POP      {R0-R3}
   \   0000004A   0x.... 0x....      BL       LPLD_PIT_DisableIrq
    135          			break;
   \   0000004E   0xE009             B.N      ??PIT_ONE_Disable_5
    136          		#endif
    137            
    138          		#ifdef PIT_3_INIT
    139          		case PIT_3_INIT:
    140          			LPLD_PIT_DisableIrq(struct_PIT_3); 
   \                     ??PIT_ONE_Disable_3: (+1)
   \   00000050   0x....             LDR.N    R1,??DataTable4_3
   \   00000052   0xB084             SUB      SP,SP,#+16
   \   00000054   0x4668             MOV      R0,SP
   \   00000056   0x2214             MOVS     R2,#+20
   \   00000058   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000005C   0xBC0F             POP      {R0-R3}
   \   0000005E   0x.... 0x....      BL       LPLD_PIT_DisableIrq
    141          			break;
   \   00000062   0xE7FF             B.N      ??PIT_ONE_Disable_5
    142          		#endif
    143          			
    144          		default: break;
    145          	}
    146          }
   \                     ??PIT_ONE_Disable_4: (+1)
   \                     ??PIT_ONE_Disable_5: (+1)
   \   00000064   0xBD01             POP      {R0,PC}          ;; return
    147          
    148          /*====================================*
    149           *		函数名：PIT_ALL_Enable(void)
    150           *		使能所有定义的PIT
    151           *====================================*/

   \                                 In section .text, align 2, keep-with-next
    152          void PIT_ALL_Enable(void)
    153          {
   \                     PIT_ALL_Enable: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    154          #ifdef PIT_0_INIT
    155          	LPLD_PIT_EnableIrq(struct_PIT_0); 
   \   00000002   0x....             LDR.N    R1,??DataTable4
   \   00000004   0xB084             SUB      SP,SP,#+16
   \   00000006   0x4668             MOV      R0,SP
   \   00000008   0x2214             MOVS     R2,#+20
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000000E   0xBC0F             POP      {R0-R3}
   \   00000010   0x.... 0x....      BL       LPLD_PIT_EnableIrq
    156          #endif
    157          
    158          #ifdef PIT_1_INIT
    159          	LPLD_PIT_EnableIrq(struct_PIT_1); 
   \   00000014   0x....             LDR.N    R1,??DataTable4_1
   \   00000016   0xB084             SUB      SP,SP,#+16
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x2214             MOVS     R2,#+20
   \   0000001C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000020   0xBC0F             POP      {R0-R3}
   \   00000022   0x.... 0x....      BL       LPLD_PIT_EnableIrq
    160          #endif
    161           
    162          #ifdef PIT_2_INIT
    163          	LPLD_PIT_EnableIrq(struct_PIT_2); 
   \   00000026   0x....             LDR.N    R1,??DataTable4_2
   \   00000028   0xB084             SUB      SP,SP,#+16
   \   0000002A   0x4668             MOV      R0,SP
   \   0000002C   0x2214             MOVS     R2,#+20
   \   0000002E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000032   0xBC0F             POP      {R0-R3}
   \   00000034   0x.... 0x....      BL       LPLD_PIT_EnableIrq
    164          #endif
    165            
    166          #ifdef PIT_3_INIT
    167          	LPLD_PIT_EnableIrq(struct_PIT_3);
   \   00000038   0x....             LDR.N    R1,??DataTable4_3
   \   0000003A   0xB084             SUB      SP,SP,#+16
   \   0000003C   0x4668             MOV      R0,SP
   \   0000003E   0x2214             MOVS     R2,#+20
   \   00000040   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000044   0xBC0F             POP      {R0-R3}
   \   00000046   0x.... 0x....      BL       LPLD_PIT_EnableIrq
    168          #endif
    169          }
   \   0000004A   0xBD01             POP      {R0,PC}          ;; return
    170          
    171          
    172          /*====================================*
    173           *		函数名：PIT_ALL_Disable(void)
    174           *		禁用所有定义的PIT
    175           *====================================*/

   \                                 In section .text, align 2, keep-with-next
    176          void PIT_ALL_Disable(void)
    177          {
   \                     PIT_ALL_Disable: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    178          #ifdef PIT_0_INIT
    179          	LPLD_PIT_DisableIrq(struct_PIT_0); 
   \   00000002   0x....             LDR.N    R1,??DataTable4
   \   00000004   0xB084             SUB      SP,SP,#+16
   \   00000006   0x4668             MOV      R0,SP
   \   00000008   0x2214             MOVS     R2,#+20
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000000E   0xBC0F             POP      {R0-R3}
   \   00000010   0x.... 0x....      BL       LPLD_PIT_DisableIrq
    180          #endif
    181          
    182          #ifdef PIT_1_INIT
    183          	LPLD_PIT_DisableIrq(struct_PIT_1); 
   \   00000014   0x....             LDR.N    R1,??DataTable4_1
   \   00000016   0xB084             SUB      SP,SP,#+16
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x2214             MOVS     R2,#+20
   \   0000001C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000020   0xBC0F             POP      {R0-R3}
   \   00000022   0x.... 0x....      BL       LPLD_PIT_DisableIrq
    184          #endif
    185           
    186          #ifdef PIT_2_INIT
    187          	LPLD_PIT_DisableIrq(struct_PIT_2); 
   \   00000026   0x....             LDR.N    R1,??DataTable4_2
   \   00000028   0xB084             SUB      SP,SP,#+16
   \   0000002A   0x4668             MOV      R0,SP
   \   0000002C   0x2214             MOVS     R2,#+20
   \   0000002E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000032   0xBC0F             POP      {R0-R3}
   \   00000034   0x.... 0x....      BL       LPLD_PIT_DisableIrq
    188          #endif
    189            
    190          #ifdef PIT_3_INIT
    191          	LPLD_PIT_DisableIrq(struct_PIT_3); 
   \   00000038   0x....             LDR.N    R1,??DataTable4_3
   \   0000003A   0xB084             SUB      SP,SP,#+16
   \   0000003C   0x4668             MOV      R0,SP
   \   0000003E   0x2214             MOVS     R2,#+20
   \   00000040   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000044   0xBC0F             POP      {R0-R3}
   \   00000046   0x.... 0x....      BL       LPLD_PIT_DisableIrq
    192          #endif
    193          }
   \   0000004A   0xBD01             POP      {R0,PC}          ;; return
    194          
    195          
    196          //PIT0中断
    197          #ifdef PIT_0_INIT
    198          //100us中断

   \                                 In section .text, align 4, keep-with-next
    199          void PIT_0_handler()
    200          {
   \                     PIT_0_handler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    201              PIT_Process_100us();
   \   00000002   0x.... 0x....      BL       PIT_Process_100us
    202          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    203          #endif
    204          
    205          
    206          //PIT1中断
    207          #ifdef PIT_1_INIT
    208          //1ms中断

   \                                 In section .text, align 4, keep-with-next
    209          void PIT_1_handler()
    210          {
   \                     PIT_1_handler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    211              PIT_Process_5ms();
   \   00000002   0x.... 0x....      BL       PIT_Process_5ms
    212          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    213          #endif
    214          
    215          
    216          //PIT2中断
    217          #ifdef PIT_2_INIT

   \                                 In section .text, align 4, keep-with-next
    218          void PIT_2_handler()
    219          {
   \                     PIT_2_handler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    220              PIT_Process_5s();
   \   00000002   0x.... 0x....      BL       PIT_Process_5s
    221          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    222          #endif
    223          
    224          
    225          //PIT3中断
    226          #ifdef PIT_3_INIT

   \                                 In section .text, align 4, keep-with-next
    227          void PIT_3_handler()
    228          {
   \                     PIT_3_handler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    229              PIT_Process_10us();
   \   00000002   0x.... 0x....      BL       PIT_Process_10us
    230          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     struct_PIT_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     struct_PIT_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     struct_PIT_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     struct_PIT_3
    231          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   PIT_0_handler
         8   -> PIT_Process_100us
       8   PIT_1_handler
         8   -> PIT_Process_5ms
       8   PIT_2_handler
         8   -> PIT_Process_5s
       8   PIT_3_handler
         8   -> PIT_Process_10us
      24   PIT_ALL_Disable
         8   -> LPLD_PIT_DisableIrq
        24   -> __aeabi_memcpy4
      24   PIT_ALL_Enable
         8   -> LPLD_PIT_EnableIrq
        24   -> __aeabi_memcpy4
      24   PIT_Init
         8   -> LPLD_PIT_Init
         8   -> PIT_ALL_Disable
        24   -> __aeabi_memcpy4
      24   PIT_ONE_Disable
         8   -> LPLD_PIT_DisableIrq
        24   -> __aeabi_memcpy4
      24   PIT_ONE_Enable
         8   -> LPLD_PIT_EnableIrq
        24   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       8  PIT_0_handler
       8  PIT_1_handler
       8  PIT_2_handler
       8  PIT_3_handler
      76  PIT_ALL_Disable
      76  PIT_ALL_Enable
     160  PIT_Init
     102  PIT_ONE_Disable
     102  PIT_ONE_Enable
      20  struct_PIT_0
      20  struct_PIT_1
      20  struct_PIT_2
      20  struct_PIT_3

 
  80 bytes in section .bss
 564 bytes in section .text
 
 564 bytes of CODE memory
  80 bytes of DATA memory

Errors: none
Warnings: 1
