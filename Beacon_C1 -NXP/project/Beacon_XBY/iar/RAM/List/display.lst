###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       19/Jul/2019  16:52:15
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\signal\src\display.c
#    Command line =  
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\signal\src\display.c" -D LPLD_K60 -lCN
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\RAM\List" -lB
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\RAM\List" -o
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\RAM\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\CPU\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\HW\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\DEV\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\FUNC\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\option\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\driver\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\descriptor\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\class\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\control\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\control\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\debug\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\debug\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\device\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\device\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\driver\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\driver\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\signal\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\signal\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\system\" -Ol -I "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\RAM\List\display.lst
#    Object file  =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\RAM\Obj\display.o
#
###############################################################################

D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\signal\src\display.c
      1          /*=============================================
      2              @file         display.c
      3              @brief        小车图像，图像参数，运动参数显示文件
      4              @programmer   XBY
      5          =============================================*/
      6          
      7          #include "display.h"
      8          

   \                                 In section .bss, align 1
      9          static uint8 suc_exit_test_flag = FLAG_OFF;
   \                     suc_exit_test_flag:
   \   00000000                      DS8 1
     10          
     11          /*===============================================================
     12          	@brief      图像显示页
     13          	@parameter  所属的页数
     14          	@return     根据按键左右返回需要进入的下一页页数
     15          ==================================================================*/

   \                                 In section .text, align 2, keep-with-next
     16          uint8 display_image(uint8 page_num)
     17          {
   \                     display_image: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
     18              int8  exit_flag = 0;
   \   00000004   0x2500             MOVS     R5,#+0
     19              uint8 button_value = 0;
   \   00000006   0x2000             MOVS     R0,#+0
     20          
     21              //显示信息
     22              oled_fill(0x00);
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       oled_fill
   \   0000000E   0xE7FF             B.N      ??display_image_0
     23          
     24              while(!exit_flag)
     25              {
     26                  oled_print_std_image(0);
     27                  
     28          
     29                  //读取按键值
     30          	button_value=button_scan();
     31          	
     32          #ifdef USE_INFR 
     33                  if (button_value == FIVE_DIR_NULL)//无五向按键按下则判断红外
     34                  {
     35                      button_value = get_infrared_command();
     36                      reset_infrared();
     37                      
     38                      switch(button_value)
     39                      {
     40                          case COMMAND_UP:
     41                              button_value = FIVE_DIR_UP;
     42                              break;
     43                          case COMMAND_DOWN:
     44                              button_value = FIVE_DIR_DOWN;
     45                              break;                    
     46                          case COMMAND_LEFT:
     47                              button_value = FIVE_DIR_LEFT;
     48                              break;                    
     49                          case COMMAND_RIGHT:
     50                              button_value = FIVE_DIR_RIGHT;
     51                              break;
     52                          case COMMAND_OK:
     53                              button_value = FIVE_DIR_OK;
     54                              break;     
     55                          default:
     56                              button_value = FIVE_DIR_NULL;//识别不出则认为没按下
     57                              break;                                    
     58                      }
     59                  }
     60          #endif   
     61          
     62                  switch(button_value)
     63                  {
     64                  case BT_UP_PRESS:
     65                      break;
   \                     ??display_image_1: (+1)
   \                     ??display_image_0: (+1)
   \   00000010   0xB26D             SXTB     R5,R5            ;; SignExt  R5,R5,#+24,#+24
   \   00000012   0x2D00             CMP      R5,#+0
   \   00000014   0xD122             BNE.N    ??display_image_2
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x.... 0x....      BL       oled_print_std_image
   \   0000001C   0x.... 0x....      BL       button_scan
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x2801             CMP      R0,#+1
   \   00000024   0xD0F4             BEQ.N    ??display_image_1
   \   00000026   0xD318             BCC.N    ??display_image_3
   \   00000028   0x2803             CMP      R0,#+3
   \   0000002A   0xD005             BEQ.N    ??display_image_4
   \   0000002C   0xD303             BCC.N    ??display_image_5
   \   0000002E   0x2805             CMP      R0,#+5
   \   00000030   0xD012             BEQ.N    ??display_image_6
   \   00000032   0xD309             BCC.N    ??display_image_7
   \   00000034   0xE011             B.N      ??display_image_3
     66                  case BT_DN_PRESS:
     67                      break;
   \                     ??display_image_5: (+1)
   \   00000036   0xE7EB             B.N      ??display_image_0
     68                      //左键按下向前翻页
     69                  case BT_LE_PRESS:
     70                  {
     71                      if(page_num > RUNNING_PAGE_MIN)
   \                     ??display_image_4: (+1)
   \   00000038   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003A   0x2C02             CMP      R4,#+2
   \   0000003C   0xDB01             BLT.N    ??display_image_8
     72                      {
     73                          page_num--;
   \   0000003E   0x1E64             SUBS     R4,R4,#+1
   \   00000040   0xE000             B.N      ??display_image_9
     74                      }
     75                      else//当前页是最前一页，左键按下则翻至最后一页
     76                      {
     77                          page_num = RUNNING_PAGE_MAX;
   \                     ??display_image_8: (+1)
   \   00000042   0x2407             MOVS     R4,#+7
     78                      }
     79                      //退出标志位置位
     80                      exit_flag = 1;
   \                     ??display_image_9: (+1)
   \   00000044   0x2501             MOVS     R5,#+1
     81                  }
     82                  break;
   \   00000046   0xE7E3             B.N      ??display_image_0
     83                  //右键按下向后翻页
     84                  case BT_RI_PRESS:
     85                  {
     86                      if(page_num < RUNNING_PAGE_MAX)
   \                     ??display_image_7: (+1)
   \   00000048   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004A   0x2C07             CMP      R4,#+7
   \   0000004C   0xDA01             BGE.N    ??display_image_10
     87                      {
     88                          page_num++;
   \   0000004E   0x1C64             ADDS     R4,R4,#+1
   \   00000050   0xE000             B.N      ??display_image_11
     89                      }
     90                      //当前页是最后一页，则翻至最前一页
     91                      else
     92                      {
     93                          page_num = RUNNING_PAGE_MIN;
   \                     ??display_image_10: (+1)
   \   00000052   0x2401             MOVS     R4,#+1
     94                      }
     95                      //退出标志位置位
     96                      exit_flag = 1;
   \                     ??display_image_11: (+1)
   \   00000054   0x2501             MOVS     R5,#+1
     97                  }
     98                  break;
   \   00000056   0xE7DB             B.N      ??display_image_0
     99                  case BT_OK_PRESS:
    100                      break;
   \                     ??display_image_6: (+1)
   \   00000058   0xE7DA             B.N      ??display_image_0
    101                  default:
    102                      break;
   \                     ??display_image_3: (+1)
   \   0000005A   0xE7D9             B.N      ??display_image_0
    103                  }
    104              }
    105              return page_num;
   \                     ??display_image_2: (+1)
   \   0000005C   0x0020             MOVS     R0,R4
   \   0000005E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000060   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    106          }
    107          
    108          /*===============================================================
    109          	@brief      图像参数显示页
    110          	@parameter  所属的页数
    111          	@return     根据按键左右返回需要进入的下一页页数
    112          ==================================================================*/
    113          

   \                                 In section .text, align 2, keep-with-next
    114          uint8 image1_parameter(uint8 page_num)
    115          {
   \                     image1_parameter: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    116              uint8 button_value = 0;
   \   00000004   0x2000             MOVS     R0,#+0
    117              uint8 exit_flag = 0;
   \   00000006   0x2500             MOVS     R5,#+0
    118              
    119          //    int16 databuf[4];
    120          
    121              //显示信息
    122              oled_fill(0x00);
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       oled_fill
   \   0000000E   0xE7FF             B.N      ??image1_parameter_0
    123          
    124              while(!exit_flag)
    125              {
    126                  //根据拨码值更新led灯的状态
    127                oled_display_6x8str(0,1, "center_flag:"); 
    128                oled_display_6x8str(0,2, "found_count:"); 
    129                oled_display_6x8str(0,3, "find_flag:"); 
    130                oled_display_6x8str(0,4, "image_err:"); 
    131                oled_display_6x8str(0,5, "image_area:"); 
    132                oled_display_6x8str(0,6, "image_center:"); 
    133                oled_display_6x8str(0,7, "image_line:");   
    134                  
    135                if(guc_center_flag == LEFT)
    136                {
    137                  oled_display_6x8str(80,1,"left ");
    138                }
    139                else if(guc_center_flag == RIGHT)
    140                {
    141                  oled_display_6x8str(80,1,"right");
    142                }
    143                
    144                oled_print_short(80,2,(int16)(gc_not_found_count));
    145                
    146                if(guc_find_image_flag == NOT_FOUND_IMAGE)
    147                {
    148                  oled_display_6x8str(80,3,"no ");
    149                }
    150                else if(guc_find_image_flag == FOUND_IMAGE)
    151                {
    152                  oled_display_6x8str(80,3,"yes");
    153                }      
    154                
    155                oled_print_short(80,4,(int16)(gi_image_err));
    156                oled_print_short(80,5,(int16)(gi_image_area_ave));
    157                oled_print_short(80,6,(int16)(gi_image_center_ave));   
    158                oled_print_short(80,7,(int16)(gi_image_vertical_ave)); 	
    159                
    160                
    161          //      gf_VisualScopeData[0] = gi_image_center_ave*50;
    162          //      gf_VisualScopeData[1] = 64*50;
    163          //      gf_VisualScopeData[2] = gi_image_left_ave*50;
    164          //      gf_VisualScopeData[3] = gi_image_right_ave*50;
    165          //      
    166          //      databuf[0] = gi_image_center_ave;
    167          //      databuf[1] = gi_image_area_ave;
    168          //      databuf[2] = gi_image_left_ave;
    169          //      databuf[3] = gi_image_right_ave;
    170                
    171                //VisualScope_Send(SCOPE_DATA_MODE);
    172                
    173          
    174          //      UART_Sendchar(0);  
    175          //      UART_Sendchar(databuf[0]);
    176          //      Delay();
    177          //      UART_Sendchar(1);  
    178          //      UART_Sendchar(databuf[1]);
    179          //      Delay();  
    180          //      UART_Sendchar(2);  
    181          //      UART_Sendchar(databuf[2]);
    182          //      Delay();      
    183          //      UART_Sendchar(3);  
    184          //      UART_Sendchar(databuf[3]);
    185          //      Delay();
    186                
    187                //读取按键值
    188                button_value=button_scan();
    189                  
    190          #ifdef USE_INFR 
    191                  if (button_value == FIVE_DIR_NULL)//无五向按键按下则判断红外
    192                  {
    193                      button_value = get_infrared_command();
    194                      reset_infrared();
    195                      
    196                      switch(button_value)
    197                      {
    198                          case COMMAND_UP:
    199                              button_value = FIVE_DIR_UP;
    200                              break;
    201                          case COMMAND_DOWN:
    202                              button_value = FIVE_DIR_DOWN;
    203                              break;                    
    204                          case COMMAND_LEFT:
    205                              button_value = FIVE_DIR_LEFT;
    206                              break;                    
    207                          case COMMAND_RIGHT:
    208                              button_value = FIVE_DIR_RIGHT;
    209                              break;
    210                          case COMMAND_OK:
    211                              button_value = FIVE_DIR_OK;
    212                              break;     
    213                          default:
    214                              button_value = FIVE_DIR_NULL;//识别不出则认为没按下
    215                              break;                                    
    216                      }
    217                  }
    218          #endif   
    219          
    220                  switch(button_value)
    221                  {
    222                  case BT_UP_PRESS:
    223                      break;
   \                     ??image1_parameter_1: (+1)
   \                     ??image1_parameter_0: (+1)
   \   00000010   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000012   0x2D00             CMP      R5,#+0
   \   00000014   0xF040 0x80A0      BNE.W    ??image1_parameter_2
   \   00000018   0x.... 0x....      LDR.W    R2,??DataTable6_4
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x.... 0x....      BL       oled_display_6x8str
   \   00000024   0x.... 0x....      LDR.W    R2,??DataTable6_5
   \   00000028   0x2102             MOVS     R1,#+2
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       oled_display_6x8str
   \   00000030   0x.... 0x....      LDR.W    R2,??DataTable6_6
   \   00000034   0x2103             MOVS     R1,#+3
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x.... 0x....      BL       oled_display_6x8str
   \   0000003C   0x.... 0x....      LDR.W    R2,??DataTable6_7
   \   00000040   0x2104             MOVS     R1,#+4
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      BL       oled_display_6x8str
   \   00000048   0x.... 0x....      LDR.W    R2,??DataTable6_8
   \   0000004C   0x2105             MOVS     R1,#+5
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x.... 0x....      BL       oled_display_6x8str
   \   00000054   0x.... 0x....      LDR.W    R2,??DataTable6_9
   \   00000058   0x2106             MOVS     R1,#+6
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x.... 0x....      BL       oled_display_6x8str
   \   00000060   0x.... 0x....      LDR.W    R2,??DataTable6_10
   \   00000064   0x2107             MOVS     R1,#+7
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0x.... 0x....      BL       oled_display_6x8str
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable6_11
   \   00000070   0x7800             LDRB     R0,[R0, #+0]
   \   00000072   0x2801             CMP      R0,#+1
   \   00000074   0xD106             BNE.N    ??image1_parameter_3
   \   00000076   0x.... 0x....      LDR.W    R2,??DataTable6_12
   \   0000007A   0x2101             MOVS     R1,#+1
   \   0000007C   0x2050             MOVS     R0,#+80
   \   0000007E   0x.... 0x....      BL       oled_display_6x8str
   \   00000082   0xE00A             B.N      ??image1_parameter_4
   \                     ??image1_parameter_3: (+1)
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable6_11
   \   00000088   0x7800             LDRB     R0,[R0, #+0]
   \   0000008A   0x2802             CMP      R0,#+2
   \   0000008C   0xD105             BNE.N    ??image1_parameter_4
   \   0000008E   0x.... 0x....      LDR.W    R2,??DataTable6_13
   \   00000092   0x2101             MOVS     R1,#+1
   \   00000094   0x2050             MOVS     R0,#+80
   \   00000096   0x.... 0x....      BL       oled_display_6x8str
   \                     ??image1_parameter_4: (+1)
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable6_14
   \   0000009E   0xF990 0x2000      LDRSB    R2,[R0, #+0]
   \   000000A2   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000A4   0x2102             MOVS     R1,#+2
   \   000000A6   0x2050             MOVS     R0,#+80
   \   000000A8   0x.... 0x....      BL       oled_print_short
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable6_15
   \   000000B0   0x7800             LDRB     R0,[R0, #+0]
   \   000000B2   0x2801             CMP      R0,#+1
   \   000000B4   0xD105             BNE.N    ??image1_parameter_5
   \   000000B6   0x....             ADR.N    R2,??DataTable1  ;; "no "
   \   000000B8   0x2103             MOVS     R1,#+3
   \   000000BA   0x2050             MOVS     R0,#+80
   \   000000BC   0x.... 0x....      BL       oled_display_6x8str
   \   000000C0   0xE009             B.N      ??image1_parameter_6
   \                     ??image1_parameter_5: (+1)
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable6_15
   \   000000C6   0x7800             LDRB     R0,[R0, #+0]
   \   000000C8   0x2800             CMP      R0,#+0
   \   000000CA   0xD104             BNE.N    ??image1_parameter_6
   \   000000CC   0x....             ADR.N    R2,??DataTable1_1  ;; "yes"
   \   000000CE   0x2103             MOVS     R1,#+3
   \   000000D0   0x2050             MOVS     R0,#+80
   \   000000D2   0x.... 0x....      BL       oled_display_6x8str
   \                     ??image1_parameter_6: (+1)
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable6_16
   \   000000DA   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000000DE   0x2104             MOVS     R1,#+4
   \   000000E0   0x2050             MOVS     R0,#+80
   \   000000E2   0x.... 0x....      BL       oled_print_short
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable6_17
   \   000000EA   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000000EE   0x2105             MOVS     R1,#+5
   \   000000F0   0x2050             MOVS     R0,#+80
   \   000000F2   0x.... 0x....      BL       oled_print_short
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable6_18
   \   000000FA   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000000FE   0x2106             MOVS     R1,#+6
   \   00000100   0x2050             MOVS     R0,#+80
   \   00000102   0x.... 0x....      BL       oled_print_short
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable6_19
   \   0000010A   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   0000010E   0x2107             MOVS     R1,#+7
   \   00000110   0x2050             MOVS     R0,#+80
   \   00000112   0x.... 0x....      BL       oled_print_short
   \   00000116   0x.... 0x....      BL       button_scan
   \   0000011A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000011C   0x2801             CMP      R0,#+1
   \   0000011E   0xF43F 0xAF77      BEQ.W    ??image1_parameter_1
   \   00000122   0xD318             BCC.N    ??image1_parameter_7
   \   00000124   0x2803             CMP      R0,#+3
   \   00000126   0xD005             BEQ.N    ??image1_parameter_8
   \   00000128   0xD303             BCC.N    ??image1_parameter_9
   \   0000012A   0x2805             CMP      R0,#+5
   \   0000012C   0xD012             BEQ.N    ??image1_parameter_10
   \   0000012E   0xD309             BCC.N    ??image1_parameter_11
   \   00000130   0xE011             B.N      ??image1_parameter_7
    224                  case BT_DN_PRESS:
    225                      break;
   \                     ??image1_parameter_9: (+1)
   \   00000132   0xE76D             B.N      ??image1_parameter_0
    226                      //左键按下向前翻页
    227                  case BT_LE_PRESS:
    228                  {
    229                      if(page_num > RUNNING_PAGE_MIN)
   \                     ??image1_parameter_8: (+1)
   \   00000134   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000136   0x2C02             CMP      R4,#+2
   \   00000138   0xDB01             BLT.N    ??image1_parameter_12
    230                      {
    231                          page_num--;
   \   0000013A   0x1E64             SUBS     R4,R4,#+1
   \   0000013C   0xE000             B.N      ??image1_parameter_13
    232                      }
    233                      else//当前页是最前一页，左键按下则翻至最后一页
    234                      {
    235                          page_num = RUNNING_PAGE_MAX;
   \                     ??image1_parameter_12: (+1)
   \   0000013E   0x2407             MOVS     R4,#+7
    236                      }
    237                      //退出标志位置位
    238                      exit_flag = 1;
   \                     ??image1_parameter_13: (+1)
   \   00000140   0x2501             MOVS     R5,#+1
    239                  }
    240                  break;
   \   00000142   0xE765             B.N      ??image1_parameter_0
    241                  //右键按下向后翻页
    242                  case BT_RI_PRESS:
    243                  {
    244                      if(page_num < RUNNING_PAGE_MAX)
   \                     ??image1_parameter_11: (+1)
   \   00000144   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000146   0x2C07             CMP      R4,#+7
   \   00000148   0xDA01             BGE.N    ??image1_parameter_14
    245                      {
    246                          page_num++;
   \   0000014A   0x1C64             ADDS     R4,R4,#+1
   \   0000014C   0xE000             B.N      ??image1_parameter_15
    247                      }
    248                      //当前页是最后一页，则翻至最前一页
    249                      else
    250                      {
    251                          page_num = RUNNING_PAGE_MIN;
   \                     ??image1_parameter_14: (+1)
   \   0000014E   0x2401             MOVS     R4,#+1
    252                      }
    253                      //退出标志位置位
    254                      exit_flag = 1;
   \                     ??image1_parameter_15: (+1)
   \   00000150   0x2501             MOVS     R5,#+1
    255                  }
    256                  break;
   \   00000152   0xE75D             B.N      ??image1_parameter_0
    257                  case BT_OK_PRESS:
    258                      break;
   \                     ??image1_parameter_10: (+1)
   \   00000154   0xE75C             B.N      ??image1_parameter_0
    259                  default:
    260                      break;
   \                     ??image1_parameter_7: (+1)
   \   00000156   0xE75B             B.N      ??image1_parameter_0
    261                  }
    262              }
    263              return page_num;
   \                     ??image1_parameter_2: (+1)
   \   00000158   0x0020             MOVS     R0,R4
   \   0000015A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000015C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    264          }
    265          
    266          /*===============================================================
    267          	@brief      图像参数显示页
    268          	@parameter  所属的页数
    269          	@return     根据按键左右返回需要进入的下一页页数
    270          ==================================================================*/
    271          

   \                                 In section .text, align 2, keep-with-next
    272          uint8 image2_parameter(uint8 page_num)
    273          {
   \                     image2_parameter: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    274              uint8 button_value = 0;
   \   00000004   0x2000             MOVS     R0,#+0
    275              uint8 exit_flag = 0;
   \   00000006   0x2500             MOVS     R5,#+0
    276              
    277          //    int16 databuf[4];
    278          
    279              //显示信息
    280              oled_fill(0x00);
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       oled_fill
   \   0000000E   0xE7FF             B.N      ??image2_parameter_0
    281          
    282              while(!exit_flag)
    283              {
    284                  //根据拨码值更新led灯的状态
    285                oled_display_6x8str(0,1, "image_area:"); 
    286                oled_display_6x8str(0,2, "image_center:"); 
    287                oled_display_6x8str(0,3, "image_line:"); 
    288                oled_display_6x8str(0,4, "start_line:"); 
    289                oled_display_6x8str(0,5, "end_line:"); 
    290                oled_display_6x8str(0,6, "left_value:"); 
    291                oled_display_6x8str(0,7, "right_value:");   
    292                  
    293                oled_print_short(80,1,(int16)(gi_image_area_ave));
    294                oled_print_short(80,2,(int16)(gi_image_center_ave));
    295                oled_print_short(80,3,(int16)(gi_image_vertical_ave)); 
    296                oled_print_short(80,4,(int16)(gi_image_start_ave));
    297                oled_print_short(80,5,(int16)(gi_image_end_ave));
    298                oled_print_short(80,6,(int16)(gi_image_left_ave));   
    299                oled_print_short(80,7,(int16)(gi_image_right_ave)); 
    300                
    301                //读取按键值
    302                button_value=button_scan();
    303                  
    304          #ifdef USE_INFR 
    305                  if (button_value == FIVE_DIR_NULL)//无五向按键按下则判断红外
    306                  {
    307                      button_value = get_infrared_command();
    308                      reset_infrared();
    309                      
    310                      switch(button_value)
    311                      {
    312                          case COMMAND_UP:
    313                              button_value = FIVE_DIR_UP;
    314                              break;
    315                          case COMMAND_DOWN:
    316                              button_value = FIVE_DIR_DOWN;
    317                              break;                    
    318                          case COMMAND_LEFT:
    319                              button_value = FIVE_DIR_LEFT;
    320                              break;                    
    321                          case COMMAND_RIGHT:
    322                              button_value = FIVE_DIR_RIGHT;
    323                              break;
    324                          case COMMAND_OK:
    325                              button_value = FIVE_DIR_OK;
    326                              break;     
    327                          default:
    328                              button_value = FIVE_DIR_NULL;//识别不出则认为没按下
    329                              break;                                    
    330                      }
    331                  }
    332          #endif   
    333          
    334                  switch(button_value)
    335                  {
    336                  case BT_UP_PRESS:
    337                      break;
   \                     ??image2_parameter_1: (+1)
   \                     ??image2_parameter_0: (+1)
   \   00000010   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000012   0x2D00             CMP      R5,#+0
   \   00000014   0xF040 0x8082      BNE.W    ??image2_parameter_2
   \   00000018   0x.... 0x....      LDR.W    R2,??DataTable6_8
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x.... 0x....      BL       oled_display_6x8str
   \   00000024   0x.... 0x....      LDR.W    R2,??DataTable6_9
   \   00000028   0x2102             MOVS     R1,#+2
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       oled_display_6x8str
   \   00000030   0x.... 0x....      LDR.W    R2,??DataTable6_10
   \   00000034   0x2103             MOVS     R1,#+3
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x.... 0x....      BL       oled_display_6x8str
   \   0000003C   0x.... 0x....      LDR.W    R2,??DataTable6_20
   \   00000040   0x2104             MOVS     R1,#+4
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      BL       oled_display_6x8str
   \   00000048   0x.... 0x....      LDR.W    R2,??DataTable6_21
   \   0000004C   0x2105             MOVS     R1,#+5
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x.... 0x....      BL       oled_display_6x8str
   \   00000054   0x.... 0x....      LDR.W    R2,??DataTable6_22
   \   00000058   0x2106             MOVS     R1,#+6
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x.... 0x....      BL       oled_display_6x8str
   \   00000060   0x.... 0x....      LDR.W    R2,??DataTable6_23
   \   00000064   0x2107             MOVS     R1,#+7
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0x.... 0x....      BL       oled_display_6x8str
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable6_17
   \   00000070   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000074   0x2101             MOVS     R1,#+1
   \   00000076   0x2050             MOVS     R0,#+80
   \   00000078   0x.... 0x....      BL       oled_print_short
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable6_18
   \   00000080   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000084   0x2102             MOVS     R1,#+2
   \   00000086   0x2050             MOVS     R0,#+80
   \   00000088   0x.... 0x....      BL       oled_print_short
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable6_19
   \   00000090   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000094   0x2103             MOVS     R1,#+3
   \   00000096   0x2050             MOVS     R0,#+80
   \   00000098   0x.... 0x....      BL       oled_print_short
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable6_24
   \   000000A0   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000000A4   0x2104             MOVS     R1,#+4
   \   000000A6   0x2050             MOVS     R0,#+80
   \   000000A8   0x.... 0x....      BL       oled_print_short
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable6_25
   \   000000B0   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000000B4   0x2105             MOVS     R1,#+5
   \   000000B6   0x2050             MOVS     R0,#+80
   \   000000B8   0x.... 0x....      BL       oled_print_short
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable6_26
   \   000000C0   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000000C4   0x2106             MOVS     R1,#+6
   \   000000C6   0x2050             MOVS     R0,#+80
   \   000000C8   0x.... 0x....      BL       oled_print_short
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable6_27
   \   000000D0   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000000D4   0x2107             MOVS     R1,#+7
   \   000000D6   0x2050             MOVS     R0,#+80
   \   000000D8   0x.... 0x....      BL       oled_print_short
   \   000000DC   0x.... 0x....      BL       button_scan
   \   000000E0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E2   0x2801             CMP      R0,#+1
   \   000000E4   0xD094             BEQ.N    ??image2_parameter_1
   \   000000E6   0xD318             BCC.N    ??image2_parameter_3
   \   000000E8   0x2803             CMP      R0,#+3
   \   000000EA   0xD005             BEQ.N    ??image2_parameter_4
   \   000000EC   0xD303             BCC.N    ??image2_parameter_5
   \   000000EE   0x2805             CMP      R0,#+5
   \   000000F0   0xD012             BEQ.N    ??image2_parameter_6
   \   000000F2   0xD309             BCC.N    ??image2_parameter_7
   \   000000F4   0xE011             B.N      ??image2_parameter_3
    338                  case BT_DN_PRESS:
    339                      break;
   \                     ??image2_parameter_5: (+1)
   \   000000F6   0xE78B             B.N      ??image2_parameter_0
    340                      //左键按下向前翻页
    341                  case BT_LE_PRESS:
    342                  {
    343                      if(page_num > RUNNING_PAGE_MIN)
   \                     ??image2_parameter_4: (+1)
   \   000000F8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000FA   0x2C02             CMP      R4,#+2
   \   000000FC   0xDB01             BLT.N    ??image2_parameter_8
    344                      {
    345                          page_num--;
   \   000000FE   0x1E64             SUBS     R4,R4,#+1
   \   00000100   0xE000             B.N      ??image2_parameter_9
    346                      }
    347                      else//当前页是最前一页，左键按下则翻至最后一页
    348                      {
    349                          page_num = RUNNING_PAGE_MAX;
   \                     ??image2_parameter_8: (+1)
   \   00000102   0x2407             MOVS     R4,#+7
    350                      }
    351                      //退出标志位置位
    352                      exit_flag = 1;
   \                     ??image2_parameter_9: (+1)
   \   00000104   0x2501             MOVS     R5,#+1
    353                  }
    354                  break;
   \   00000106   0xE783             B.N      ??image2_parameter_0
    355                  //右键按下向后翻页
    356                  case BT_RI_PRESS:
    357                  {
    358                      if(page_num < RUNNING_PAGE_MAX)
   \                     ??image2_parameter_7: (+1)
   \   00000108   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000010A   0x2C07             CMP      R4,#+7
   \   0000010C   0xDA01             BGE.N    ??image2_parameter_10
    359                      {
    360                          page_num++;
   \   0000010E   0x1C64             ADDS     R4,R4,#+1
   \   00000110   0xE000             B.N      ??image2_parameter_11
    361                      }
    362                      //当前页是最后一页，则翻至最前一页
    363                      else
    364                      {
    365                          page_num = RUNNING_PAGE_MIN;
   \                     ??image2_parameter_10: (+1)
   \   00000112   0x2401             MOVS     R4,#+1
    366                      }
    367                      //退出标志位置位
    368                      exit_flag = 1;
   \                     ??image2_parameter_11: (+1)
   \   00000114   0x2501             MOVS     R5,#+1
    369                  }
    370                  break;
   \   00000116   0xE77B             B.N      ??image2_parameter_0
    371                  case BT_OK_PRESS:
    372                      break;
   \                     ??image2_parameter_6: (+1)
   \   00000118   0xE77A             B.N      ??image2_parameter_0
    373                  default:
    374                      break;
   \                     ??image2_parameter_3: (+1)
   \   0000011A   0xE779             B.N      ??image2_parameter_0
    375                  }
    376              }
    377              return page_num;
   \                     ??image2_parameter_2: (+1)
   \   0000011C   0x0020             MOVS     R0,R4
   \   0000011E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000120   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    378          }
    379          
    380          /*===============================================================
    381          	@brief      超声波参数显示页
    382          	@parameter  所属的页数
    383          	@return     根据按键左右返回需要进入的下一页页数
    384          ==================================================================*/
    385          

   \                                 In section .text, align 2, keep-with-next
    386          uint8 ultrasonic_parameter(uint8 page_num)// 此处红外不能翻页
    387          {
   \                     ultrasonic_parameter: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    388              uint8 button_value = 0;
   \   00000004   0x2000             MOVS     R0,#+0
    389              uint8 exit_flag = 0;
   \   00000006   0x2500             MOVS     R5,#+0
    390          
    391              //显示信息
    392              oled_fill(0x00);
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       oled_fill
   \   0000000E   0xE7FF             B.N      ??ultrasonic_parameter_0
    393          
    394              while(!exit_flag)
    395              {
    396                  oled_display_6x8str(0,1, "front:"); 
    397                  oled_display_6x8str(0,2, "back:"); 
    398                  oled_display_6x8str(0,3, "left_f:"); 
    399                  oled_display_6x8str(0,4, "right_f:"); 
    400                  oled_display_6x8str(0,5, "left_b:"); 
    401                  oled_display_6x8str(0,6, "right_b:"); 
    402                  oled_display_6x8str(0,7, "tele_count:"); 
    403          
    404                  oled_print_short(80, 1,gi_ultrasonic_value[0]);
    405                  oled_print_short(80, 2,gi_ultrasonic_value[1]);
    406                  oled_print_short(80, 3,gi_ultrasonic_value[2]);
    407                  oled_print_short(80, 4,gi_ultrasonic_value[3]);
    408                  oled_print_short(80, 5,gi_ultrasonic_value[4]);
    409                  oled_print_short(80, 6,gi_ultrasonic_value[5]);  
    410                  oled_print_short(80, 7,gc_tele_barrier_count); 
    411                  
    412                  //读取按键值
    413                  button_value=button_scan();
    414                  
    415          #ifdef USE_INFR 
    416                  if (button_value == FIVE_DIR_NULL)//无五向按键按下则判断红外
    417                  {
    418                      button_value = get_infrared_command();
    419                      reset_infrared();
    420                      
    421                      switch(button_value)
    422                      {
    423                          case COMMAND_UP:
    424                              button_value = FIVE_DIR_UP;
    425                              break;
    426                          case COMMAND_DOWN:
    427                              button_value = FIVE_DIR_DOWN;
    428                              break;                    
    429                          case COMMAND_LEFT:
    430                              button_value = FIVE_DIR_LEFT;
    431                              break;                    
    432                          case COMMAND_RIGHT:
    433                              button_value = FIVE_DIR_RIGHT;
    434                              break;
    435                          case COMMAND_OK:
    436                              button_value = FIVE_DIR_OK;
    437                              break;     
    438                          default:
    439                              button_value = FIVE_DIR_NULL;//识别不出则认为没按下
    440                              break;                                    
    441                      }
    442                  }
    443          #endif   
    444          
    445                  switch(button_value)
    446                  {
    447                  case BT_UP_PRESS:
    448                      break;
   \                     ??ultrasonic_parameter_1: (+1)
   \                     ??ultrasonic_parameter_0: (+1)
   \   00000010   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000012   0x2D00             CMP      R5,#+0
   \   00000014   0xF040 0x8083      BNE.W    ??ultrasonic_parameter_2
   \   00000018   0x.... 0x....      LDR.W    R2,??DataTable6_28
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x.... 0x....      BL       oled_display_6x8str
   \   00000024   0x.... 0x....      LDR.W    R2,??DataTable6_29
   \   00000028   0x2102             MOVS     R1,#+2
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       oled_display_6x8str
   \   00000030   0x.... 0x....      LDR.W    R2,??DataTable6_30
   \   00000034   0x2103             MOVS     R1,#+3
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x.... 0x....      BL       oled_display_6x8str
   \   0000003C   0x.... 0x....      LDR.W    R2,??DataTable6_31
   \   00000040   0x2104             MOVS     R1,#+4
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      BL       oled_display_6x8str
   \   00000048   0x.... 0x....      LDR.W    R2,??DataTable6_32
   \   0000004C   0x2105             MOVS     R1,#+5
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x.... 0x....      BL       oled_display_6x8str
   \   00000054   0x.... 0x....      LDR.W    R2,??DataTable6_33
   \   00000058   0x2106             MOVS     R1,#+6
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x.... 0x....      BL       oled_display_6x8str
   \   00000060   0x.... 0x....      LDR.W    R2,??DataTable6_34
   \   00000064   0x2107             MOVS     R1,#+7
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0x.... 0x....      BL       oled_display_6x8str
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable6_35
   \   00000070   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000074   0x2101             MOVS     R1,#+1
   \   00000076   0x2050             MOVS     R0,#+80
   \   00000078   0x.... 0x....      BL       oled_print_short
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable6_35
   \   00000080   0xF9B0 0x2002      LDRSH    R2,[R0, #+2]
   \   00000084   0x2102             MOVS     R1,#+2
   \   00000086   0x2050             MOVS     R0,#+80
   \   00000088   0x.... 0x....      BL       oled_print_short
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable6_35
   \   00000090   0xF9B0 0x2004      LDRSH    R2,[R0, #+4]
   \   00000094   0x2103             MOVS     R1,#+3
   \   00000096   0x2050             MOVS     R0,#+80
   \   00000098   0x.... 0x....      BL       oled_print_short
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable6_35
   \   000000A0   0xF9B0 0x2006      LDRSH    R2,[R0, #+6]
   \   000000A4   0x2104             MOVS     R1,#+4
   \   000000A6   0x2050             MOVS     R0,#+80
   \   000000A8   0x.... 0x....      BL       oled_print_short
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable6_35
   \   000000B0   0xF9B0 0x2008      LDRSH    R2,[R0, #+8]
   \   000000B4   0x2105             MOVS     R1,#+5
   \   000000B6   0x2050             MOVS     R0,#+80
   \   000000B8   0x.... 0x....      BL       oled_print_short
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable6_35
   \   000000C0   0xF9B0 0x200A      LDRSH    R2,[R0, #+10]
   \   000000C4   0x2106             MOVS     R1,#+6
   \   000000C6   0x2050             MOVS     R0,#+80
   \   000000C8   0x.... 0x....      BL       oled_print_short
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable6_36
   \   000000D0   0xF990 0x2000      LDRSB    R2,[R0, #+0]
   \   000000D4   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000D6   0x2107             MOVS     R1,#+7
   \   000000D8   0x2050             MOVS     R0,#+80
   \   000000DA   0x.... 0x....      BL       oled_print_short
   \   000000DE   0x.... 0x....      BL       button_scan
   \   000000E2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E4   0x2801             CMP      R0,#+1
   \   000000E6   0xD093             BEQ.N    ??ultrasonic_parameter_1
   \   000000E8   0xD318             BCC.N    ??ultrasonic_parameter_3
   \   000000EA   0x2803             CMP      R0,#+3
   \   000000EC   0xD005             BEQ.N    ??ultrasonic_parameter_4
   \   000000EE   0xD303             BCC.N    ??ultrasonic_parameter_5
   \   000000F0   0x2805             CMP      R0,#+5
   \   000000F2   0xD012             BEQ.N    ??ultrasonic_parameter_6
   \   000000F4   0xD309             BCC.N    ??ultrasonic_parameter_7
   \   000000F6   0xE011             B.N      ??ultrasonic_parameter_3
    449                  case BT_DN_PRESS:
    450                      break;
   \                     ??ultrasonic_parameter_5: (+1)
   \   000000F8   0xE78A             B.N      ??ultrasonic_parameter_0
    451                      //左键按下向前翻页
    452                  case BT_LE_PRESS:
    453                  {
    454                      if(page_num > RUNNING_PAGE_MIN)
   \                     ??ultrasonic_parameter_4: (+1)
   \   000000FA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000FC   0x2C02             CMP      R4,#+2
   \   000000FE   0xDB01             BLT.N    ??ultrasonic_parameter_8
    455                      {
    456                          page_num--;
   \   00000100   0x1E64             SUBS     R4,R4,#+1
   \   00000102   0xE000             B.N      ??ultrasonic_parameter_9
    457                      }
    458                      else//当前页是最前一页，左键按下则翻至最后一页
    459                      {
    460                          page_num = RUNNING_PAGE_MAX;
   \                     ??ultrasonic_parameter_8: (+1)
   \   00000104   0x2407             MOVS     R4,#+7
    461                      }
    462                      //退出标志位置位
    463                      exit_flag = 1;
   \                     ??ultrasonic_parameter_9: (+1)
   \   00000106   0x2501             MOVS     R5,#+1
    464                  }
    465                  break;
   \   00000108   0xE782             B.N      ??ultrasonic_parameter_0
    466                  //右键按下向后翻页
    467                  case BT_RI_PRESS:
    468                  {
    469                      if(page_num < RUNNING_PAGE_MAX)
   \                     ??ultrasonic_parameter_7: (+1)
   \   0000010A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000010C   0x2C07             CMP      R4,#+7
   \   0000010E   0xDA01             BGE.N    ??ultrasonic_parameter_10
    470                      {
    471                          page_num++;
   \   00000110   0x1C64             ADDS     R4,R4,#+1
   \   00000112   0xE000             B.N      ??ultrasonic_parameter_11
    472                      }
    473                      //当前页是最后一页，则翻至最前一页
    474                      else
    475                      {
    476                          page_num = RUNNING_PAGE_MIN;
   \                     ??ultrasonic_parameter_10: (+1)
   \   00000114   0x2401             MOVS     R4,#+1
    477                      }
    478                      //退出标志位置位
    479                      exit_flag = 1;
   \                     ??ultrasonic_parameter_11: (+1)
   \   00000116   0x2501             MOVS     R5,#+1
    480                  }
    481                  break;
   \   00000118   0xE77A             B.N      ??ultrasonic_parameter_0
    482                  case BT_OK_PRESS:
    483                      break;
   \                     ??ultrasonic_parameter_6: (+1)
   \   0000011A   0xE779             B.N      ??ultrasonic_parameter_0
    484                  default:
    485                      break;
   \                     ??ultrasonic_parameter_3: (+1)
   \   0000011C   0xE778             B.N      ??ultrasonic_parameter_0
    486                  }
    487              }
    488              return page_num;
   \                     ??ultrasonic_parameter_2: (+1)
   \   0000011E   0x0020             MOVS     R0,R4
   \   00000120   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000122   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    489          }
    490          
    491          /*===============================================================
    492          	@brief      速度参数显示页
    493          	@parameter  所属的页数
    494          	@return     根据按键左右返回需要进入的下一页页数
    495          ==================================================================*/
    496          

   \                                 In section .text, align 2, keep-with-next
    497          uint8 speed_parameter(uint8 page_num)// 此处红外不能翻页
    498          {
   \                     speed_parameter: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    499              uint8 button_value = 0;
   \   00000004   0x2000             MOVS     R0,#+0
    500              uint8 exit_flag = 0;
   \   00000006   0x2500             MOVS     R5,#+0
    501          
    502              //显示信息
    503              oled_fill(0x00);
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       oled_fill
   \   0000000E   0xE7FF             B.N      ??speed_parameter_0
    504          
    505              while(!exit_flag)
    506              {
    507                  oled_display_6x8str(0,1, "distance:"); 
    508                  oled_display_6x8str(0,2, "speed:"); 
    509                  oled_display_6x8str(0,3, "left_speed:"); 
    510                  oled_display_6x8str(0,4, "right_speed:"); 
    511                  oled_display_6x8str(0,5, "left_count:"); 
    512                  oled_display_6x8str(0,6, "right_count:");
    513                  oled_display_6x8str(0,7, "PWM_out:");
    514          
    515                  oled_print_short(80, 1,(int16)(gl_car_running_distance/10));
    516                  oled_print_short(80, 2,(int16)(gl_speed_set));
    517                  oled_print_short(80, 3,gi_left_speed);
    518                  oled_print_short(80, 4,gi_right_speed);
    519                  oled_print_short(80, 5,(int16)gl_left_encoder_count);
    520                  oled_print_short(80, 6,(int16)gl_right_encoder_count);
    521                  oled_print_short(80, 7,(int16)gl_pwm_out);
    522                  
    523          //        gf_VisualScopeData[0] = gl_car_speed*50;
    524          //        gf_VisualScopeData[1] = gl_pwm_out*50;
    525          //        gf_VisualScopeData[2] = gl_speed_set*50;
    526          //        //gf_VisualScopeData[3] = gi_image_right_ave*50;
    527          //
    528          //        VisualScope_Send(SCOPE_DATA_MODE);
    529                  //读取按键值
    530                  button_value=button_scan();
    531                  
    532          #ifdef USE_INFR 
    533                  if (button_value == FIVE_DIR_NULL)//无五向按键按下则判断红外
    534                  {
    535                      button_value = get_infrared_command();
    536                      reset_infrared();
    537                      
    538                      switch(button_value)
    539                      {
    540                          case COMMAND_UP:
    541                              button_value = FIVE_DIR_UP;
    542                              break;
    543                          case COMMAND_DOWN:
    544                              button_value = FIVE_DIR_DOWN;
    545                              break;                    
    546                          case COMMAND_LEFT:
    547                              button_value = FIVE_DIR_LEFT;
    548                              break;                    
    549                          case COMMAND_RIGHT:
    550                              button_value = FIVE_DIR_RIGHT;
    551                              break;
    552                          case COMMAND_OK:
    553                              button_value = FIVE_DIR_OK;
    554                              break;     
    555                          default:
    556                              button_value = FIVE_DIR_NULL;//识别不出则认为没按下
    557                              break;                                    
    558                      }
    559                  }
    560          #endif   
    561          
    562                  switch(button_value)
    563                  {
    564                  case BT_UP_PRESS:
    565                      break;
   \                     ??speed_parameter_1: (+1)
   \                     ??speed_parameter_0: (+1)
   \   00000010   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000012   0x2D00             CMP      R5,#+0
   \   00000014   0xF040 0x8085      BNE.W    ??speed_parameter_2
   \   00000018   0x.... 0x....      LDR.W    R2,??DataTable6_37
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x.... 0x....      BL       oled_display_6x8str
   \   00000024   0x.... 0x....      LDR.W    R2,??DataTable6_38
   \   00000028   0x2102             MOVS     R1,#+2
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       oled_display_6x8str
   \   00000030   0x.... 0x....      LDR.W    R2,??DataTable6_39
   \   00000034   0x2103             MOVS     R1,#+3
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x.... 0x....      BL       oled_display_6x8str
   \   0000003C   0x.... 0x....      LDR.W    R2,??DataTable6_40
   \   00000040   0x2104             MOVS     R1,#+4
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      BL       oled_display_6x8str
   \   00000048   0x.... 0x....      LDR.W    R2,??DataTable6_41
   \   0000004C   0x2105             MOVS     R1,#+5
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x.... 0x....      BL       oled_display_6x8str
   \   00000054   0x.... 0x....      LDR.W    R2,??DataTable6_42
   \   00000058   0x2106             MOVS     R1,#+6
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x.... 0x....      BL       oled_display_6x8str
   \   00000060   0x.... 0x....      LDR.W    R2,??DataTable6_43
   \   00000064   0x2107             MOVS     R1,#+7
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0x.... 0x....      BL       oled_display_6x8str
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable6_44
   \   00000070   0x6800             LDR      R0,[R0, #+0]
   \   00000072   0x210A             MOVS     R1,#+10
   \   00000074   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000078   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000007A   0x2101             MOVS     R1,#+1
   \   0000007C   0x2050             MOVS     R0,#+80
   \   0000007E   0x.... 0x....      BL       oled_print_short
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable6_45
   \   00000086   0x6802             LDR      R2,[R0, #+0]
   \   00000088   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000008A   0x2102             MOVS     R1,#+2
   \   0000008C   0x2050             MOVS     R0,#+80
   \   0000008E   0x.... 0x....      BL       oled_print_short
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable6_46
   \   00000096   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   0000009A   0x2103             MOVS     R1,#+3
   \   0000009C   0x2050             MOVS     R0,#+80
   \   0000009E   0x.... 0x....      BL       oled_print_short
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable6_47
   \   000000A6   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000000AA   0x2104             MOVS     R1,#+4
   \   000000AC   0x2050             MOVS     R0,#+80
   \   000000AE   0x.... 0x....      BL       oled_print_short
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable6_48
   \   000000B6   0x6802             LDR      R2,[R0, #+0]
   \   000000B8   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000BA   0x2105             MOVS     R1,#+5
   \   000000BC   0x2050             MOVS     R0,#+80
   \   000000BE   0x.... 0x....      BL       oled_print_short
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable6_49
   \   000000C6   0x6802             LDR      R2,[R0, #+0]
   \   000000C8   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000CA   0x2106             MOVS     R1,#+6
   \   000000CC   0x2050             MOVS     R0,#+80
   \   000000CE   0x.... 0x....      BL       oled_print_short
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable6_50
   \   000000D6   0x6802             LDR      R2,[R0, #+0]
   \   000000D8   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000DA   0x2107             MOVS     R1,#+7
   \   000000DC   0x2050             MOVS     R0,#+80
   \   000000DE   0x.... 0x....      BL       oled_print_short
   \   000000E2   0x.... 0x....      BL       button_scan
   \   000000E6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E8   0x2801             CMP      R0,#+1
   \   000000EA   0xD091             BEQ.N    ??speed_parameter_1
   \   000000EC   0xD318             BCC.N    ??speed_parameter_3
   \   000000EE   0x2803             CMP      R0,#+3
   \   000000F0   0xD005             BEQ.N    ??speed_parameter_4
   \   000000F2   0xD303             BCC.N    ??speed_parameter_5
   \   000000F4   0x2805             CMP      R0,#+5
   \   000000F6   0xD012             BEQ.N    ??speed_parameter_6
   \   000000F8   0xD309             BCC.N    ??speed_parameter_7
   \   000000FA   0xE011             B.N      ??speed_parameter_3
    566                  case BT_DN_PRESS:
    567                      break;
   \                     ??speed_parameter_5: (+1)
   \   000000FC   0xE788             B.N      ??speed_parameter_0
    568                      //左键按下向前翻页
    569                  case BT_LE_PRESS:
    570                  {
    571                      if(page_num > RUNNING_PAGE_MIN)
   \                     ??speed_parameter_4: (+1)
   \   000000FE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000100   0x2C02             CMP      R4,#+2
   \   00000102   0xDB01             BLT.N    ??speed_parameter_8
    572                      {
    573                          page_num--;
   \   00000104   0x1E64             SUBS     R4,R4,#+1
   \   00000106   0xE000             B.N      ??speed_parameter_9
    574                      }
    575                      else//当前页是最前一页，左键按下则翻至最后一页
    576                      {
    577                          page_num = RUNNING_PAGE_MAX;
   \                     ??speed_parameter_8: (+1)
   \   00000108   0x2407             MOVS     R4,#+7
    578                      }
    579                      //退出标志位置位
    580                      exit_flag = 1;
   \                     ??speed_parameter_9: (+1)
   \   0000010A   0x2501             MOVS     R5,#+1
    581                  }
    582                  break;
   \   0000010C   0xE780             B.N      ??speed_parameter_0
    583                  //右键按下向后翻页
    584                  case BT_RI_PRESS:
    585                  {
    586                      if(page_num < RUNNING_PAGE_MAX)
   \                     ??speed_parameter_7: (+1)
   \   0000010E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000110   0x2C07             CMP      R4,#+7
   \   00000112   0xDA01             BGE.N    ??speed_parameter_10
    587                      {
    588                          page_num++;
   \   00000114   0x1C64             ADDS     R4,R4,#+1
   \   00000116   0xE000             B.N      ??speed_parameter_11
    589                      }
    590                      //当前页是最后一页，则翻至最前一页
    591                      else
    592                      {
    593                          page_num = RUNNING_PAGE_MIN;
   \                     ??speed_parameter_10: (+1)
   \   00000118   0x2401             MOVS     R4,#+1
    594                      }
    595                      //退出标志位置位
    596                      exit_flag = 1;
   \                     ??speed_parameter_11: (+1)
   \   0000011A   0x2501             MOVS     R5,#+1
    597                  }
    598                  break;
   \   0000011C   0xE778             B.N      ??speed_parameter_0
    599                  case BT_OK_PRESS:
    600                      break;
   \                     ??speed_parameter_6: (+1)
   \   0000011E   0xE777             B.N      ??speed_parameter_0
    601                  default:
    602                      break;
   \                     ??speed_parameter_3: (+1)
   \   00000120   0xE776             B.N      ??speed_parameter_0
    603                  }
    604              }
    605              return page_num;
   \                     ??speed_parameter_2: (+1)
   \   00000122   0x0020             MOVS     R0,R4
   \   00000124   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000126   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    606          }
    607          
    608          /*===============================================================
    609          	@brief      运动参数显示页
    610          	@parameter  所属的页数
    611          	@return     根据按键左右返回需要进入的下一页页数
    612          ==================================================================*/
    613          

   \                                 In section .text, align 2, keep-with-next
    614          uint8 running_parameter(uint8 page_num)// 此处红外不能翻页
    615          {
   \                     running_parameter: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    616              uint8 button_value = 0;
   \   00000004   0x2000             MOVS     R0,#+0
    617              uint8 exit_flag = 0;
   \   00000006   0x2500             MOVS     R5,#+0
    618          
    619              //显示信息
    620              oled_fill(0x00);
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       oled_fill
   \   0000000E   0xE7FF             B.N      ??running_parameter_0
    621          
    622              while(!exit_flag)
    623              {
    624                  oled_display_6x8str(0,1, "speed:"); 
    625                  oled_display_6x8str(0,2, "distance:"); 
    626                  oled_display_6x8str(0,3, "direction:"); 
    627                  oled_display_6x8str(0,4, "tele:"); 
    628                  oled_display_6x8str(0,5, "fps:"); 
    629                  oled_display_6x8str(0,6, "area:"); 
    630                  oled_display_6x8str(0,7, "bat:");          
    631                  
    632                  oled_print_short(80,1,(int16)(gl_car_speed));
    633                  oled_print_short(80,2,(int16)(gl_car_running_distance/100));
    634                  oled_print_short(80,3,(int16)(gl_direction_set));
    635                  oled_print_short(80,4,(int16)(gi_tele_barrier_distance));
    636                  oled_print_short(80,5,(int16)(gi_image_area_ave));
    637                  oled_print_short(80,6,(int16)(10000/gul_image_period));
    638                  oled_print_short(80,7,(int16)(ADC_Bat_Vol()*1000));
    639                  //读取按键值
    640                  button_value=button_scan();
    641                  
    642          #ifdef USE_INFR 
    643                  if (button_value == FIVE_DIR_NULL)//无五向按键按下则判断红外
    644                  {
    645                      button_value = get_infrared_command();
    646                      reset_infrared();
    647                      
    648                      switch(button_value)
    649                      {
    650                          case COMMAND_UP:
    651                              button_value = FIVE_DIR_UP;
    652                              break;
    653                          case COMMAND_DOWN:
    654                              button_value = FIVE_DIR_DOWN;
    655                              break;                    
    656                          case COMMAND_LEFT:
    657                              button_value = FIVE_DIR_LEFT;
    658                              break;                    
    659                          case COMMAND_RIGHT:
    660                              button_value = FIVE_DIR_RIGHT;
    661                              break;
    662                          case COMMAND_OK:
    663                              button_value = FIVE_DIR_OK;
    664                              break;     
    665                          default:
    666                              button_value = FIVE_DIR_NULL;//识别不出则认为没按下
    667                              break;                                    
    668                      }
    669                  }
    670          #endif   
    671          
    672                  switch(button_value)
    673                  {
    674                  case BT_UP_PRESS:
    675                      break;
   \                     ??running_parameter_1: (+1)
   \                     ??running_parameter_0: (+1)
   \   00000010   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000012   0x2D00             CMP      R5,#+0
   \   00000014   0xF040 0x808B      BNE.W    ??running_parameter_2
   \   00000018   0x.... 0x....      LDR.W    R2,??DataTable6_38
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x.... 0x....      BL       oled_display_6x8str
   \   00000024   0x.... 0x....      LDR.W    R2,??DataTable6_37
   \   00000028   0x2102             MOVS     R1,#+2
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       oled_display_6x8str
   \   00000030   0x.... 0x....      LDR.W    R2,??DataTable6_51
   \   00000034   0x2103             MOVS     R1,#+3
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x.... 0x....      BL       oled_display_6x8str
   \   0000003C   0x.... 0x....      LDR.W    R2,??DataTable6_52
   \   00000040   0x2104             MOVS     R1,#+4
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      BL       oled_display_6x8str
   \   00000048   0x.... 0x....      LDR.W    R2,??DataTable6_53
   \   0000004C   0x2105             MOVS     R1,#+5
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x.... 0x....      BL       oled_display_6x8str
   \   00000054   0x.... 0x....      LDR.W    R2,??DataTable6_54
   \   00000058   0x2106             MOVS     R1,#+6
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x.... 0x....      BL       oled_display_6x8str
   \   00000060   0x.... 0x....      LDR.W    R2,??DataTable6_55
   \   00000064   0x2107             MOVS     R1,#+7
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0x.... 0x....      BL       oled_display_6x8str
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable6_56
   \   00000070   0x6802             LDR      R2,[R0, #+0]
   \   00000072   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000074   0x2101             MOVS     R1,#+1
   \   00000076   0x2050             MOVS     R0,#+80
   \   00000078   0x.... 0x....      BL       oled_print_short
   \   0000007C   0x....             LDR.N    R0,??DataTable6_44
   \   0000007E   0x6800             LDR      R0,[R0, #+0]
   \   00000080   0x2164             MOVS     R1,#+100
   \   00000082   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000086   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000088   0x2102             MOVS     R1,#+2
   \   0000008A   0x2050             MOVS     R0,#+80
   \   0000008C   0x.... 0x....      BL       oled_print_short
   \   00000090   0x....             LDR.N    R0,??DataTable6_57
   \   00000092   0x6802             LDR      R2,[R0, #+0]
   \   00000094   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000096   0x2103             MOVS     R1,#+3
   \   00000098   0x2050             MOVS     R0,#+80
   \   0000009A   0x.... 0x....      BL       oled_print_short
   \   0000009E   0x....             LDR.N    R0,??DataTable6_58
   \   000000A0   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000000A4   0x2104             MOVS     R1,#+4
   \   000000A6   0x2050             MOVS     R0,#+80
   \   000000A8   0x.... 0x....      BL       oled_print_short
   \   000000AC   0x....             LDR.N    R0,??DataTable6_17
   \   000000AE   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000000B2   0x2105             MOVS     R1,#+5
   \   000000B4   0x2050             MOVS     R0,#+80
   \   000000B6   0x.... 0x....      BL       oled_print_short
   \   000000BA   0xF242 0x7010      MOVW     R0,#+10000
   \   000000BE   0x....             LDR.N    R1,??DataTable6_59
   \   000000C0   0x6809             LDR      R1,[R1, #+0]
   \   000000C2   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   000000C6   0x0002             MOVS     R2,R0
   \   000000C8   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000CA   0x2106             MOVS     R1,#+6
   \   000000CC   0x2050             MOVS     R0,#+80
   \   000000CE   0x.... 0x....      BL       oled_print_short
   \   000000D2   0x.... 0x....      BL       ADC_Bat_Vol
   \   000000D6   0x0001             MOVS     R1,R0
   \   000000D8   0x....             LDR.N    R0,??DataTable6_60  ;; 0x447a0000
   \   000000DA   0x.... 0x....      BL       __aeabi_fmul
   \   000000DE   0x.... 0x....      BL       __aeabi_f2iz
   \   000000E2   0x0002             MOVS     R2,R0
   \   000000E4   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000E6   0x2107             MOVS     R1,#+7
   \   000000E8   0x2050             MOVS     R0,#+80
   \   000000EA   0x.... 0x....      BL       oled_print_short
   \   000000EE   0x.... 0x....      BL       button_scan
   \   000000F2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000F4   0x2801             CMP      R0,#+1
   \   000000F6   0xD08B             BEQ.N    ??running_parameter_1
   \   000000F8   0xD318             BCC.N    ??running_parameter_3
   \   000000FA   0x2803             CMP      R0,#+3
   \   000000FC   0xD005             BEQ.N    ??running_parameter_4
   \   000000FE   0xD303             BCC.N    ??running_parameter_5
   \   00000100   0x2805             CMP      R0,#+5
   \   00000102   0xD012             BEQ.N    ??running_parameter_6
   \   00000104   0xD309             BCC.N    ??running_parameter_7
   \   00000106   0xE011             B.N      ??running_parameter_3
    676                  case BT_DN_PRESS:
    677                      break;
   \                     ??running_parameter_5: (+1)
   \   00000108   0xE782             B.N      ??running_parameter_0
    678                      //左键按下向前翻页
    679                  case BT_LE_PRESS:
    680                  {
    681                      if(page_num > RUNNING_PAGE_MIN)
   \                     ??running_parameter_4: (+1)
   \   0000010A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000010C   0x2C02             CMP      R4,#+2
   \   0000010E   0xDB01             BLT.N    ??running_parameter_8
    682                      {
    683                          page_num--;
   \   00000110   0x1E64             SUBS     R4,R4,#+1
   \   00000112   0xE000             B.N      ??running_parameter_9
    684                      }
    685                      else//当前页是最前一页，左键按下则翻至最后一页
    686                      {
    687                          page_num = RUNNING_PAGE_MAX;
   \                     ??running_parameter_8: (+1)
   \   00000114   0x2407             MOVS     R4,#+7
    688                      }
    689                      //退出标志位置位
    690                      exit_flag = 1;
   \                     ??running_parameter_9: (+1)
   \   00000116   0x2501             MOVS     R5,#+1
    691                  }
    692                  break;
   \   00000118   0xE77A             B.N      ??running_parameter_0
    693                  //右键按下向后翻页
    694                  case BT_RI_PRESS:
    695                  {
    696                      if(page_num < RUNNING_PAGE_MAX)
   \                     ??running_parameter_7: (+1)
   \   0000011A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000011C   0x2C07             CMP      R4,#+7
   \   0000011E   0xDA01             BGE.N    ??running_parameter_10
    697                      {
    698                          page_num++;
   \   00000120   0x1C64             ADDS     R4,R4,#+1
   \   00000122   0xE000             B.N      ??running_parameter_11
    699                      }
    700                      //当前页是最后一页，则翻至最前一页
    701                      else
    702                      {
    703                          page_num = RUNNING_PAGE_MIN;
   \                     ??running_parameter_10: (+1)
   \   00000124   0x2401             MOVS     R4,#+1
    704                      }
    705                      //退出标志位置位
    706                      exit_flag = 1;
   \                     ??running_parameter_11: (+1)
   \   00000126   0x2501             MOVS     R5,#+1
    707                  }
    708                  break;
   \   00000128   0xE772             B.N      ??running_parameter_0
    709                  case BT_OK_PRESS:
    710                      break;
   \                     ??running_parameter_6: (+1)
   \   0000012A   0xE771             B.N      ??running_parameter_0
    711                  default:
    712                      break;
   \                     ??running_parameter_3: (+1)
   \   0000012C   0xE770             B.N      ??running_parameter_0
    713                  }
    714              }
    715              return page_num;
   \                     ??running_parameter_2: (+1)
   \   0000012E   0x0020             MOVS     R0,R4
   \   00000130   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000132   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    716          }
    717          
    718          /*===============================================================
    719          	@brief      红外定向参数显示页
    720          	@parameter  所属的页数
    721          	@return     根据按键左右返回需要进入的下一页页数
    722          ==================================================================*/
    723          

   \                                 In section .text, align 2, keep-with-next
    724          uint8 infrared_parameter(uint8 page_num)// 此处红外不能翻页
    725          {
   \                     infrared_parameter: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    726              uint8 button_value = 0;
   \   00000004   0x2000             MOVS     R0,#+0
    727              uint8 exit_flag = 0;
   \   00000006   0x2500             MOVS     R5,#+0
    728          
    729              //显示信息
    730              oled_fill(0x00);
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       oled_fill
   \   0000000E   0xE7FF             B.N      ??infrared_parameter_0
    731          
    732              while(!exit_flag)
    733              {
    734                  oled_print_short(0, 3,(int16)guc_beacon_directional_y);
    735                  oled_print_short(0, 4,(int16)guc_beacon_directional_x);
    736                  
    737                  oled_display_6x8str(50,0, "f:"); 
    738                  oled_display_6x8str(50,1, "f_l:"); 
    739                  oled_display_6x8str(50,2, "l:"); 
    740                  oled_display_6x8str(50,3, "b_l:"); 
    741                  oled_display_6x8str(50,4, "b:"); 
    742                  oled_display_6x8str(50,5, "b_r:"); 
    743                  oled_display_6x8str(50,6, "r:");
    744                  oled_display_6x8str(50,7, "f_r:");
    745                  
    746                  oled_print_short(80, 0,(int16)guc_infrared_value[0]);
    747                  oled_print_short(80, 1,(int16)guc_infrared_value[1]);
    748                  oled_print_short(80, 2,(int16)guc_infrared_value[2]);
    749                  oled_print_short(80, 3,(int16)guc_infrared_value[3]);
    750                  oled_print_short(80, 4,(int16)guc_infrared_value[4]);
    751                  oled_print_short(80, 5,(int16)guc_infrared_value[5]);
    752                  oled_print_short(80, 6,(int16)guc_infrared_value[6]);
    753                  oled_print_short(80, 7,(int16)guc_infrared_value[7]);
    754                  
    755                  //读取按键值
    756                  button_value=button_scan();
    757                  
    758          #ifdef USE_INFR 
    759                  if (button_value == FIVE_DIR_NULL)//无五向按键按下则判断红外
    760                  {
    761                      button_value = get_infrared_command();
    762                      reset_infrared();
    763                      
    764                      switch(button_value)
    765                      {
    766                          case COMMAND_UP:
    767                              button_value = FIVE_DIR_UP;
    768                              break;
    769                          case COMMAND_DOWN:
    770                              button_value = FIVE_DIR_DOWN;
    771                              break;                    
    772                          case COMMAND_LEFT:
    773                              button_value = FIVE_DIR_LEFT;
    774                              break;                    
    775                          case COMMAND_RIGHT:
    776                              button_value = FIVE_DIR_RIGHT;
    777                              break;
    778                          case COMMAND_OK:
    779                              button_value = FIVE_DIR_OK;
    780                              break;     
    781                          default:
    782                              button_value = FIVE_DIR_NULL;//识别不出则认为没按下
    783                              break;                                    
    784                      }
    785                  }
    786          #endif   
    787          
    788                  switch(button_value)
    789                  {
    790                  case BT_UP_PRESS:
    791                      break;
   \                     ??infrared_parameter_1: (+1)
   \                     ??infrared_parameter_0: (+1)
   \   00000010   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000012   0x2D00             CMP      R5,#+0
   \   00000014   0xF040 0x8099      BNE.W    ??infrared_parameter_2
   \   00000018   0x....             LDR.N    R0,??DataTable6_61
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0x0002             MOVS     R2,R0
   \   0000001E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000020   0x2103             MOVS     R1,#+3
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x.... 0x....      BL       oled_print_short
   \   00000028   0x....             LDR.N    R0,??DataTable6_62
   \   0000002A   0x7800             LDRB     R0,[R0, #+0]
   \   0000002C   0x0002             MOVS     R2,R0
   \   0000002E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000030   0x2104             MOVS     R1,#+4
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x.... 0x....      BL       oled_print_short
   \   00000038   0x....             ADR.N    R2,??DataTable6  ;; 0x66, 0x3A, 0x00, 0x00
   \   0000003A   0x2100             MOVS     R1,#+0
   \   0000003C   0x2032             MOVS     R0,#+50
   \   0000003E   0x.... 0x....      BL       oled_display_6x8str
   \   00000042   0x....             LDR.N    R2,??DataTable6_63
   \   00000044   0x2101             MOVS     R1,#+1
   \   00000046   0x2032             MOVS     R0,#+50
   \   00000048   0x.... 0x....      BL       oled_display_6x8str
   \   0000004C   0x....             ADR.N    R2,??DataTable6_1  ;; 0x6C, 0x3A, 0x00, 0x00
   \   0000004E   0x2102             MOVS     R1,#+2
   \   00000050   0x2032             MOVS     R0,#+50
   \   00000052   0x.... 0x....      BL       oled_display_6x8str
   \   00000056   0x....             LDR.N    R2,??DataTable6_64
   \   00000058   0x2103             MOVS     R1,#+3
   \   0000005A   0x2032             MOVS     R0,#+50
   \   0000005C   0x.... 0x....      BL       oled_display_6x8str
   \   00000060   0x....             ADR.N    R2,??DataTable6_2  ;; 0x62, 0x3A, 0x00, 0x00
   \   00000062   0x2104             MOVS     R1,#+4
   \   00000064   0x2032             MOVS     R0,#+50
   \   00000066   0x.... 0x....      BL       oled_display_6x8str
   \   0000006A   0x....             LDR.N    R2,??DataTable6_65
   \   0000006C   0x2105             MOVS     R1,#+5
   \   0000006E   0x2032             MOVS     R0,#+50
   \   00000070   0x.... 0x....      BL       oled_display_6x8str
   \   00000074   0x....             ADR.N    R2,??DataTable6_3  ;; 0x72, 0x3A, 0x00, 0x00
   \   00000076   0x2106             MOVS     R1,#+6
   \   00000078   0x2032             MOVS     R0,#+50
   \   0000007A   0x.... 0x....      BL       oled_display_6x8str
   \   0000007E   0x....             LDR.N    R2,??DataTable6_66
   \   00000080   0x2107             MOVS     R1,#+7
   \   00000082   0x2032             MOVS     R0,#+50
   \   00000084   0x.... 0x....      BL       oled_display_6x8str
   \   00000088   0x....             LDR.N    R0,??DataTable6_67
   \   0000008A   0x7800             LDRB     R0,[R0, #+0]
   \   0000008C   0x0002             MOVS     R2,R0
   \   0000008E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000090   0x2100             MOVS     R1,#+0
   \   00000092   0x2050             MOVS     R0,#+80
   \   00000094   0x.... 0x....      BL       oled_print_short
   \   00000098   0x....             LDR.N    R0,??DataTable6_67
   \   0000009A   0x7840             LDRB     R0,[R0, #+1]
   \   0000009C   0x0002             MOVS     R2,R0
   \   0000009E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000A0   0x2101             MOVS     R1,#+1
   \   000000A2   0x2050             MOVS     R0,#+80
   \   000000A4   0x.... 0x....      BL       oled_print_short
   \   000000A8   0x....             LDR.N    R0,??DataTable6_67
   \   000000AA   0x7880             LDRB     R0,[R0, #+2]
   \   000000AC   0x0002             MOVS     R2,R0
   \   000000AE   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000B0   0x2102             MOVS     R1,#+2
   \   000000B2   0x2050             MOVS     R0,#+80
   \   000000B4   0x.... 0x....      BL       oled_print_short
   \   000000B8   0x....             LDR.N    R0,??DataTable6_67
   \   000000BA   0x78C0             LDRB     R0,[R0, #+3]
   \   000000BC   0x0002             MOVS     R2,R0
   \   000000BE   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000C0   0x2103             MOVS     R1,#+3
   \   000000C2   0x2050             MOVS     R0,#+80
   \   000000C4   0x.... 0x....      BL       oled_print_short
   \   000000C8   0x....             LDR.N    R0,??DataTable6_67
   \   000000CA   0x7900             LDRB     R0,[R0, #+4]
   \   000000CC   0x0002             MOVS     R2,R0
   \   000000CE   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000D0   0x2104             MOVS     R1,#+4
   \   000000D2   0x2050             MOVS     R0,#+80
   \   000000D4   0x.... 0x....      BL       oled_print_short
   \   000000D8   0x....             LDR.N    R0,??DataTable6_67
   \   000000DA   0x7940             LDRB     R0,[R0, #+5]
   \   000000DC   0x0002             MOVS     R2,R0
   \   000000DE   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000E0   0x2105             MOVS     R1,#+5
   \   000000E2   0x2050             MOVS     R0,#+80
   \   000000E4   0x.... 0x....      BL       oled_print_short
   \   000000E8   0x....             LDR.N    R0,??DataTable6_67
   \   000000EA   0x7980             LDRB     R0,[R0, #+6]
   \   000000EC   0x0002             MOVS     R2,R0
   \   000000EE   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000F0   0x2106             MOVS     R1,#+6
   \   000000F2   0x2050             MOVS     R0,#+80
   \   000000F4   0x.... 0x....      BL       oled_print_short
   \   000000F8   0x....             LDR.N    R0,??DataTable6_67
   \   000000FA   0x79C0             LDRB     R0,[R0, #+7]
   \   000000FC   0x0002             MOVS     R2,R0
   \   000000FE   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000100   0x2107             MOVS     R1,#+7
   \   00000102   0x2050             MOVS     R0,#+80
   \   00000104   0x.... 0x....      BL       oled_print_short
   \   00000108   0x.... 0x....      BL       button_scan
   \   0000010C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000010E   0x2801             CMP      R0,#+1
   \   00000110   0xF43F 0xAF7E      BEQ.W    ??infrared_parameter_1
   \   00000114   0xD318             BCC.N    ??infrared_parameter_3
   \   00000116   0x2803             CMP      R0,#+3
   \   00000118   0xD005             BEQ.N    ??infrared_parameter_4
   \   0000011A   0xD303             BCC.N    ??infrared_parameter_5
   \   0000011C   0x2805             CMP      R0,#+5
   \   0000011E   0xD012             BEQ.N    ??infrared_parameter_6
   \   00000120   0xD309             BCC.N    ??infrared_parameter_7
   \   00000122   0xE011             B.N      ??infrared_parameter_3
    792                  case BT_DN_PRESS:
    793                      break;
   \                     ??infrared_parameter_5: (+1)
   \   00000124   0xE774             B.N      ??infrared_parameter_0
    794                      //左键按下向前翻页
    795                  case BT_LE_PRESS:
    796                  {
    797                      if(page_num > RUNNING_PAGE_MIN)
   \                     ??infrared_parameter_4: (+1)
   \   00000126   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000128   0x2C02             CMP      R4,#+2
   \   0000012A   0xDB01             BLT.N    ??infrared_parameter_8
    798                      {
    799                          page_num--;
   \   0000012C   0x1E64             SUBS     R4,R4,#+1
   \   0000012E   0xE000             B.N      ??infrared_parameter_9
    800                      }
    801                      else//当前页是最前一页，左键按下则翻至最后一页
    802                      {
    803                          page_num = RUNNING_PAGE_MAX;
   \                     ??infrared_parameter_8: (+1)
   \   00000130   0x2407             MOVS     R4,#+7
    804                      }
    805                      //退出标志位置位
    806                      exit_flag = 1;
   \                     ??infrared_parameter_9: (+1)
   \   00000132   0x2501             MOVS     R5,#+1
    807                  }
    808                  break;
   \   00000134   0xE76C             B.N      ??infrared_parameter_0
    809                  //右键按下向后翻页
    810                  case BT_RI_PRESS:
    811                  {
    812                      if(page_num < RUNNING_PAGE_MAX)
   \                     ??infrared_parameter_7: (+1)
   \   00000136   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000138   0x2C07             CMP      R4,#+7
   \   0000013A   0xDA01             BGE.N    ??infrared_parameter_10
    813                      {
    814                          page_num++;
   \   0000013C   0x1C64             ADDS     R4,R4,#+1
   \   0000013E   0xE000             B.N      ??infrared_parameter_11
    815                      }
    816                      //当前页是最后一页，则翻至最前一页
    817                      else
    818                      {
    819                          page_num = RUNNING_PAGE_MIN;
   \                     ??infrared_parameter_10: (+1)
   \   00000140   0x2401             MOVS     R4,#+1
    820                      }
    821                      //退出标志位置位
    822                      exit_flag = 1;
   \                     ??infrared_parameter_11: (+1)
   \   00000142   0x2501             MOVS     R5,#+1
    823                  }
    824                  break;
   \   00000144   0xE764             B.N      ??infrared_parameter_0
    825                  case BT_OK_PRESS:
    826                      break;
   \                     ??infrared_parameter_6: (+1)
   \   00000146   0xE763             B.N      ??infrared_parameter_0
    827                  default:
    828                      break;
   \                     ??infrared_parameter_3: (+1)
   \   00000148   0xE762             B.N      ??infrared_parameter_0
    829                  }
    830              }
    831              return page_num;
   \                     ??infrared_parameter_2: (+1)
   \   0000014A   0x0020             MOVS     R0,R4
   \   0000014C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000014E   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    832          }
    833          
    834          /*===============================================================
    835          	@brief      小车运动显示函数
    836          ==================================================================*/
    837          

   \                                 In section .text, align 2, keep-with-next
    838          void Smartcar_Running()
    839          {
   \                     Smartcar_Running: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    840              uint8 page_num = TEST_PAGE_MIN;
   \   00000002   0x2001             MOVS     R0,#+1
    841          
    842              suc_exit_test_flag = FLAG_OFF;
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x....             LDR.N    R2,??DataTable6_68
   \   00000008   0x7011             STRB     R1,[R2, #+0]
   \   0000000A   0xE002             B.N      ??Smartcar_Running_0
    843              while(suc_exit_test_flag != FLAG_ON)
    844              {
    845                  //根据页数进入相应的测试
    846                  switch(page_num)
    847                  {
    848                  case 1:
    849                      page_num = display_image(1);
   \                     ??Smartcar_Running_1: (+1)
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0x.... 0x....      BL       display_image
    850                      break;
   \                     ??Smartcar_Running_0: (+1)
   \   00000012   0x....             LDR.N    R1,??DataTable6_68
   \   00000014   0x7809             LDRB     R1,[R1, #+0]
   \   00000016   0x2901             CMP      R1,#+1
   \   00000018   0xD026             BEQ.N    ??Smartcar_Running_2
   \   0000001A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001C   0x2801             CMP      R0,#+1
   \   0000001E   0xD0F5             BEQ.N    ??Smartcar_Running_1
   \   00000020   0xD321             BCC.N    ??Smartcar_Running_3
   \   00000022   0x2803             CMP      R0,#+3
   \   00000024   0xD00B             BEQ.N    ??Smartcar_Running_4
   \   00000026   0xD306             BCC.N    ??Smartcar_Running_5
   \   00000028   0x2805             CMP      R0,#+5
   \   0000002A   0xD010             BEQ.N    ??Smartcar_Running_6
   \   0000002C   0xD30B             BCC.N    ??Smartcar_Running_7
   \   0000002E   0x2807             CMP      R0,#+7
   \   00000030   0xD015             BEQ.N    ??Smartcar_Running_8
   \   00000032   0xD310             BCC.N    ??Smartcar_Running_9
   \   00000034   0xE017             B.N      ??Smartcar_Running_3
    851                  case 2:
    852                      page_num = image1_parameter(2);
   \                     ??Smartcar_Running_5: (+1)
   \   00000036   0x2002             MOVS     R0,#+2
   \   00000038   0x.... 0x....      BL       image1_parameter
    853                      break;
   \   0000003C   0xE7E9             B.N      ??Smartcar_Running_0
    854                  case 3:
    855                      page_num = image2_parameter(3);
   \                     ??Smartcar_Running_4: (+1)
   \   0000003E   0x2003             MOVS     R0,#+3
   \   00000040   0x.... 0x....      BL       image2_parameter
    856                      break;
   \   00000044   0xE7E5             B.N      ??Smartcar_Running_0
    857                  case 4:
    858                      page_num = running_parameter(4);
   \                     ??Smartcar_Running_7: (+1)
   \   00000046   0x2004             MOVS     R0,#+4
   \   00000048   0x.... 0x....      BL       running_parameter
    859                      break; 
   \   0000004C   0xE7E1             B.N      ??Smartcar_Running_0
    860                  case 5:
    861                      page_num = ultrasonic_parameter(5);
   \                     ??Smartcar_Running_6: (+1)
   \   0000004E   0x2005             MOVS     R0,#+5
   \   00000050   0x.... 0x....      BL       ultrasonic_parameter
    862                      break; 
   \   00000054   0xE7DD             B.N      ??Smartcar_Running_0
    863                  case 6:
    864                      page_num = speed_parameter(6);
   \                     ??Smartcar_Running_9: (+1)
   \   00000056   0x2006             MOVS     R0,#+6
   \   00000058   0x.... 0x....      BL       speed_parameter
    865                      break;             
   \   0000005C   0xE7D9             B.N      ??Smartcar_Running_0
    866                  case 7:
    867                      page_num = infrared_parameter(7);
   \                     ??Smartcar_Running_8: (+1)
   \   0000005E   0x2007             MOVS     R0,#+7
   \   00000060   0x.... 0x....      BL       infrared_parameter
    868                      break;                         
   \   00000064   0xE7D5             B.N      ??Smartcar_Running_0
    869                  default:
    870                      break;
   \                     ??Smartcar_Running_3: (+1)
   \   00000066   0xE7D4             B.N      ??Smartcar_Running_0
    871                  }
    872              }
    873              suc_exit_test_flag = FLAG_OFF;
   \                     ??Smartcar_Running_2: (+1)
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x....             LDR.N    R1,??DataTable6_68
   \   0000006C   0x7008             STRB     R0,[R1, #+0]
    874          
    875          }
   \   0000006E   0xBD01             POP      {R0,PC}          ;; return
    876          
    877          /*===============================================================
    878          	@brief      延时
    879          ==================================================================*/
    880          

   \                                 In section .text, align 2, keep-with-next
    881          void Delay()
    882          {
    883              unsigned int i, j;
    884          
    885              for ( i=0; i<1600; i++ )
   \                     Delay: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0xE004             B.N      ??Delay_0
    886              {
    887                  for ( j=0; j<4000; j++ )
   \                     ??Delay_1: (+1)
   \   00000004   0x1C49             ADDS     R1,R1,#+1
   \                     ??Delay_2: (+1)
   \   00000006   0xF5B1 0x6F7A      CMP      R1,#+4000
   \   0000000A   0xD3FB             BCC.N    ??Delay_1
   \   0000000C   0x1C40             ADDS     R0,R0,#+1
   \                     ??Delay_0: (+1)
   \   0000000E   0xF5B0 0x6FC8      CMP      R0,#+1600
   \   00000012   0xD201             BCS.N    ??Delay_3
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0xE7F6             B.N      ??Delay_2
    888                  {
    889                      
    890                  }
    891              }
    892          }
   \                     ??Delay_3: (+1)
   \   00000018   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x6E 0x6F          DC8      "no "
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x79 0x65          DC8      "yes"
   \              0x73 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x66 0x3A          DC8      0x66, 0x3A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x6C 0x3A          DC8      0x6C, 0x3A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x62 0x3A          DC8      0x62, 0x3A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x72 0x3A          DC8      0x72, 0x3A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \   00000000   0x........         DC32     guc_center_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_14:
   \   00000000   0x........         DC32     gc_not_found_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_15:
   \   00000000   0x........         DC32     guc_find_image_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_16:
   \   00000000   0x........         DC32     gi_image_err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_17:
   \   00000000   0x........         DC32     gi_image_area_ave

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_18:
   \   00000000   0x........         DC32     gi_image_center_ave

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_19:
   \   00000000   0x........         DC32     gi_image_vertical_ave

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_20:
   \   00000000   0x........         DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_21:
   \   00000000   0x........         DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_22:
   \   00000000   0x........         DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_23:
   \   00000000   0x........         DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_24:
   \   00000000   0x........         DC32     gi_image_start_ave

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_25:
   \   00000000   0x........         DC32     gi_image_end_ave

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_26:
   \   00000000   0x........         DC32     gi_image_left_ave

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_27:
   \   00000000   0x........         DC32     gi_image_right_ave

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_28:
   \   00000000   0x........         DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_29:
   \   00000000   0x........         DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_30:
   \   00000000   0x........         DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_31:
   \   00000000   0x........         DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_32:
   \   00000000   0x........         DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_33:
   \   00000000   0x........         DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_34:
   \   00000000   0x........         DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_35:
   \   00000000   0x........         DC32     gi_ultrasonic_value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_36:
   \   00000000   0x........         DC32     gc_tele_barrier_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_37:
   \   00000000   0x........         DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_38:
   \   00000000   0x........         DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_39:
   \   00000000   0x........         DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_40:
   \   00000000   0x........         DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_41:
   \   00000000   0x........         DC32     ?_26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_42:
   \   00000000   0x........         DC32     ?_27

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_43:
   \   00000000   0x........         DC32     ?_28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_44:
   \   00000000   0x........         DC32     gl_car_running_distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_45:
   \   00000000   0x........         DC32     gl_speed_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_46:
   \   00000000   0x........         DC32     gi_left_speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_47:
   \   00000000   0x........         DC32     gi_right_speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_48:
   \   00000000   0x........         DC32     gl_left_encoder_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_49:
   \   00000000   0x........         DC32     gl_right_encoder_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_50:
   \   00000000   0x........         DC32     gl_pwm_out

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_51:
   \   00000000   0x........         DC32     ?_29

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_52:
   \   00000000   0x........         DC32     ?_30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_53:
   \   00000000   0x........         DC32     ?_31

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_54:
   \   00000000   0x........         DC32     ?_32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_55:
   \   00000000   0x........         DC32     ?_33

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_56:
   \   00000000   0x........         DC32     gl_car_speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_57:
   \   00000000   0x........         DC32     gl_direction_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_58:
   \   00000000   0x........         DC32     gi_tele_barrier_distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_59:
   \   00000000   0x........         DC32     gul_image_period

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_60:
   \   00000000   0x447A0000         DC32     0x447a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_61:
   \   00000000   0x........         DC32     guc_beacon_directional_y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_62:
   \   00000000   0x........         DC32     guc_beacon_directional_x

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_63:
   \   00000000   0x........         DC32     ?_35

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_64:
   \   00000000   0x........         DC32     ?_37

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_65:
   \   00000000   0x........         DC32     ?_39

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_66:
   \   00000000   0x........         DC32     ?_41

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_67:
   \   00000000   0x........         DC32     guc_infrared_value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_68:
   \   00000000   0x........         DC32     suc_exit_test_flag

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x63 0x65          DC8 "center_flag:"
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x5F 0x66    
   \              0x6C 0x61    
   \              0x67 0x3A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x66 0x6F          DC8 "found_count:"
   \              0x75 0x6E    
   \              0x64 0x5F    
   \              0x63 0x6F    
   \              0x75 0x6E    
   \              0x74 0x3A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x66 0x69          DC8 "find_flag:"
   \              0x6E 0x64    
   \              0x5F 0x66    
   \              0x6C 0x61    
   \              0x67 0x3A    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x69 0x6D          DC8 "image_err:"
   \              0x61 0x67    
   \              0x65 0x5F    
   \              0x65 0x72    
   \              0x72 0x3A    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x69 0x6D          DC8 "image_area:"
   \              0x61 0x67    
   \              0x65 0x5F    
   \              0x61 0x72    
   \              0x65 0x61    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x69 0x6D          DC8 "image_center:"
   \              0x61 0x67    
   \              0x65 0x5F    
   \              0x63 0x65    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x3A 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x69 0x6D          DC8 "image_line:"
   \              0x61 0x67    
   \              0x65 0x5F    
   \              0x6C 0x69    
   \              0x6E 0x65    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x6C 0x65          DC8 "left "
   \              0x66 0x74    
   \              0x20 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x72 0x69          DC8 "right"
   \              0x67 0x68    
   \              0x74 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x6E 0x6F          DC8 "no "
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x79 0x65          DC8 "yes"
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x73 0x74          DC8 "start_line:"
   \              0x61 0x72    
   \              0x74 0x5F    
   \              0x6C 0x69    
   \              0x6E 0x65    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_12:
   \   00000000   0x65 0x6E          DC8 "end_line:"
   \              0x64 0x5F    
   \              0x6C 0x69    
   \              0x6E 0x65    
   \              0x3A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_13:
   \   00000000   0x6C 0x65          DC8 "left_value:"
   \              0x66 0x74    
   \              0x5F 0x76    
   \              0x61 0x6C    
   \              0x75 0x65    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_14:
   \   00000000   0x72 0x69          DC8 "right_value:"
   \              0x67 0x68    
   \              0x74 0x5F    
   \              0x76 0x61    
   \              0x6C 0x75    
   \              0x65 0x3A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_15:
   \   00000000   0x66 0x72          DC8 "front:"
   \              0x6F 0x6E    
   \              0x74 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_16:
   \   00000000   0x62 0x61          DC8 "back:"
   \              0x63 0x6B    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_17:
   \   00000000   0x6C 0x65          DC8 "left_f:"
   \              0x66 0x74    
   \              0x5F 0x66    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_18:
   \   00000000   0x72 0x69          DC8 "right_f:"
   \              0x67 0x68    
   \              0x74 0x5F    
   \              0x66 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_19:
   \   00000000   0x6C 0x65          DC8 "left_b:"
   \              0x66 0x74    
   \              0x5F 0x62    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_20:
   \   00000000   0x72 0x69          DC8 "right_b:"
   \              0x67 0x68    
   \              0x74 0x5F    
   \              0x62 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_21:
   \   00000000   0x74 0x65          DC8 "tele_count:"
   \              0x6C 0x65    
   \              0x5F 0x63    
   \              0x6F 0x75    
   \              0x6E 0x74    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_22:
   \   00000000   0x64 0x69          DC8 "distance:"
   \              0x73 0x74    
   \              0x61 0x6E    
   \              0x63 0x65    
   \              0x3A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_23:
   \   00000000   0x73 0x70          DC8 "speed:"
   \              0x65 0x65    
   \              0x64 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_24:
   \   00000000   0x6C 0x65          DC8 "left_speed:"
   \              0x66 0x74    
   \              0x5F 0x73    
   \              0x70 0x65    
   \              0x65 0x64    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_25:
   \   00000000   0x72 0x69          DC8 "right_speed:"
   \              0x67 0x68    
   \              0x74 0x5F    
   \              0x73 0x70    
   \              0x65 0x65    
   \              0x64 0x3A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_26:
   \   00000000   0x6C 0x65          DC8 "left_count:"
   \              0x66 0x74    
   \              0x5F 0x63    
   \              0x6F 0x75    
   \              0x6E 0x74    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_27:
   \   00000000   0x72 0x69          DC8 "right_count:"
   \              0x67 0x68    
   \              0x74 0x5F    
   \              0x63 0x6F    
   \              0x75 0x6E    
   \              0x74 0x3A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_28:
   \   00000000   0x50 0x57          DC8 "PWM_out:"
   \              0x4D 0x5F    
   \              0x6F 0x75    
   \              0x74 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_29:
   \   00000000   0x64 0x69          DC8 "direction:"
   \              0x72 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x3A    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_30:
   \   00000000   0x74 0x65          DC8 "tele:"
   \              0x6C 0x65    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_31:
   \   00000000   0x66 0x70          DC8 "fps:"
   \              0x73 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_32:
   \   00000000   0x61 0x72          DC8 "area:"
   \              0x65 0x61    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_33:
   \   00000000   0x62 0x61          DC8 "bat:"
   \              0x74 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x66 0x3A          DC8 "f:"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_35:
   \   00000000   0x66 0x5F          DC8 "f_l:"
   \              0x6C 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x6C 0x3A          DC8 "l:"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_37:
   \   00000000   0x62 0x5F          DC8 "b_l:"
   \              0x6C 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x62 0x3A          DC8 "b:"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_39:
   \   00000000   0x62 0x5F          DC8 "b_r:"
   \              0x72 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x72 0x3A          DC8 "r:"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_41:
   \   00000000   0x66 0x5F          DC8 "f_r:"
   \              0x72 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Delay
       8   Smartcar_Running
         8   -> display_image
         8   -> image1_parameter
         8   -> image2_parameter
         8   -> infrared_parameter
         8   -> running_parameter
         8   -> speed_parameter
         8   -> ultrasonic_parameter
      16   display_image
        16   -> button_scan
        16   -> oled_fill
        16   -> oled_print_std_image
      16   image1_parameter
        16   -> button_scan
        16   -> oled_display_6x8str
        16   -> oled_fill
        16   -> oled_print_short
      16   image2_parameter
        16   -> button_scan
        16   -> oled_display_6x8str
        16   -> oled_fill
        16   -> oled_print_short
      16   infrared_parameter
        16   -> button_scan
        16   -> oled_display_6x8str
        16   -> oled_fill
        16   -> oled_print_short
      16   running_parameter
        16   -> ADC_Bat_Vol
        16   -> __aeabi_f2iz
        16   -> __aeabi_fmul
        16   -> button_scan
        16   -> oled_display_6x8str
        16   -> oled_fill
        16   -> oled_print_short
      16   speed_parameter
        16   -> button_scan
        16   -> oled_display_6x8str
        16   -> oled_fill
        16   -> oled_print_short
      16   ultrasonic_parameter
        16   -> button_scan
        16   -> oled_display_6x8str
        16   -> oled_fill
        16   -> oled_print_short


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_14
       4  ??DataTable6_15
       4  ??DataTable6_16
       4  ??DataTable6_17
       4  ??DataTable6_18
       4  ??DataTable6_19
       4  ??DataTable6_2
       4  ??DataTable6_20
       4  ??DataTable6_21
       4  ??DataTable6_22
       4  ??DataTable6_23
       4  ??DataTable6_24
       4  ??DataTable6_25
       4  ??DataTable6_26
       4  ??DataTable6_27
       4  ??DataTable6_28
       4  ??DataTable6_29
       4  ??DataTable6_3
       4  ??DataTable6_30
       4  ??DataTable6_31
       4  ??DataTable6_32
       4  ??DataTable6_33
       4  ??DataTable6_34
       4  ??DataTable6_35
       4  ??DataTable6_36
       4  ??DataTable6_37
       4  ??DataTable6_38
       4  ??DataTable6_39
       4  ??DataTable6_4
       4  ??DataTable6_40
       4  ??DataTable6_41
       4  ??DataTable6_42
       4  ??DataTable6_43
       4  ??DataTable6_44
       4  ??DataTable6_45
       4  ??DataTable6_46
       4  ??DataTable6_47
       4  ??DataTable6_48
       4  ??DataTable6_49
       4  ??DataTable6_5
       4  ??DataTable6_50
       4  ??DataTable6_51
       4  ??DataTable6_52
       4  ??DataTable6_53
       4  ??DataTable6_54
       4  ??DataTable6_55
       4  ??DataTable6_56
       4  ??DataTable6_57
       4  ??DataTable6_58
       4  ??DataTable6_59
       4  ??DataTable6_6
       4  ??DataTable6_60
       4  ??DataTable6_61
       4  ??DataTable6_62
       4  ??DataTable6_63
       4  ??DataTable6_64
       4  ??DataTable6_65
       4  ??DataTable6_66
       4  ??DataTable6_67
       4  ??DataTable6_68
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
      16  ?_0
      16  ?_1
       4  ?_10
      12  ?_11
      12  ?_12
      12  ?_13
      16  ?_14
       8  ?_15
       8  ?_16
       8  ?_17
      12  ?_18
       8  ?_19
      12  ?_2
      12  ?_20
      12  ?_21
      12  ?_22
       8  ?_23
      12  ?_24
      16  ?_25
      12  ?_26
      16  ?_27
      12  ?_28
      12  ?_29
      12  ?_3
       8  ?_30
       8  ?_31
       8  ?_32
       8  ?_33
       4  ?_34
       8  ?_35
       4  ?_36
       8  ?_37
       4  ?_38
       8  ?_39
      12  ?_4
       4  ?_40
       8  ?_41
      16  ?_5
      12  ?_6
       8  ?_7
       8  ?_8
       4  ?_9
      26  Delay
     112  Smartcar_Running
      98  display_image
     350  image1_parameter
     290  image2_parameter
     336  infrared_parameter
     308  running_parameter
     296  speed_parameter
       1  suc_exit_test_flag
     292  ultrasonic_parameter

 
     1 byte  in section .bss
   420 bytes in section .rodata
 2 392 bytes in section .text
 
 2 392 bytes of CODE  memory
   420 bytes of CONST memory
     1 byte  of DATA  memory

Errors: none
Warnings: none
