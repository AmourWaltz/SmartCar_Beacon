###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       19/Jul/2019  16:52:18
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\debug\src\oled.c
#    Command line =  
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\debug\src\oled.c" -D LPLD_K60 -lCN
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\RAM\List" -lB
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\RAM\List" -o
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\RAM\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\CPU\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\HW\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\DEV\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\FUNC\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\option\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\driver\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\descriptor\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\class\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\control\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\control\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\debug\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\debug\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\device\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\device\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\driver\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\driver\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\signal\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\signal\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\system\" -Ol -I "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\RAM\List\oled.lst
#    Object file  =  
#        D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\RAM\Obj\oled.o
#
###############################################################################

D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\debug\src\oled.c
      1          #include "oled.h"
      2          #include "include.h"
      3          /**
      4           *    6x8字体库
      5           * */

   \                                 In section .rodata, align 4
      6          const uint8 F6x8[][6] =
   \                     F6x8:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000045   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000005C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000073   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000008A   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000A1   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000B8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x2F    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000CE   0x07 0x00          DC8 7, 0, 7, 0, 0, 20, 127, 20, 127, 20, 0, 36, 42, 127, 42, 18, 0, 98
   \              0x07 0x00    
   \              0x00 0x14    
   \              0x7F 0x14    
   \              0x7F 0x14    
   \              0x00 0x24    
   \              0x2A 0x7F    
   \              0x2A 0x12    
   \              0x00 0x62    
   \   000000E0   0x64 0x08          DC8 100, 8, 19, 35, 0, 54, 73, 85, 34, 80, 0, 0, 5, 3, 0, 0, 0, 0, 28
   \              0x13 0x23    
   \              0x00 0x36    
   \              0x49 0x55    
   \              0x22 0x50    
   \              0x00 0x00    
   \              0x05 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x1C         
   \   000000F3   0x22 0x41          DC8 34, 65, 0, 0, 0, 65, 34, 28, 0, 0, 20, 8, 62, 8, 20, 0, 8, 8, 62, 8
   \              0x00 0x00    
   \              0x00 0x41    
   \              0x22 0x1C    
   \              0x00 0x00    
   \              0x14 0x08    
   \              0x3E 0x08    
   \              0x14 0x00    
   \              0x08 0x08    
   \              0x3E 0x08    
   \   00000107   0x08 0x00          DC8 8, 0, 0, 0, 160, 96, 0, 0, 8, 8, 8, 8, 8, 0, 0, 96, 96, 0, 0, 0, 32
   \              0x00 0x00    
   \              0xA0 0x60    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x08 0x00    
   \              0x00 0x60    
   \              0x60 0x00    
   \              0x00 0x00    
   \              0x20         
   \   0000011C   0x10 0x08          DC8 16, 8, 4, 2, 0, 62, 81, 73, 69, 62, 0, 0, 66, 127, 64, 0, 0, 66, 97
   \              0x04 0x02    
   \              0x00 0x3E    
   \              0x51 0x49    
   \              0x45 0x3E    
   \              0x00 0x00    
   \              0x42 0x7F    
   \              0x40 0x00    
   \              0x00 0x42    
   \              0x61         
   \   0000012F   0x51 0x49          DC8 81, 73, 70, 0, 33, 65, 69, 75, 49, 0, 24, 20, 18, 127, 16, 0, 39
   \              0x46 0x00    
   \              0x21 0x41    
   \              0x45 0x4B    
   \              0x31 0x00    
   \              0x18 0x14    
   \              0x12 0x7F    
   \              0x10 0x00    
   \              0x27         
   \   00000140   0x45 0x45          DC8 69, 69, 69, 57, 0, 60, 74, 73, 73, 48, 0, 1, 113, 9, 5, 3, 0, 54
   \              0x45 0x39    
   \              0x00 0x3C    
   \              0x4A 0x49    
   \              0x49 0x30    
   \              0x00 0x01    
   \              0x71 0x09    
   \              0x05 0x03    
   \              0x00 0x36    
   \   00000152   0x49 0x49          DC8 73, 73, 73, 54, 0, 6, 73, 73, 41, 30, 0, 0, 54, 54, 0, 0, 0, 0, 86
   \              0x49 0x36    
   \              0x00 0x06    
   \              0x49 0x49    
   \              0x29 0x1E    
   \              0x00 0x00    
   \              0x36 0x36    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x56         
   \   00000165   0x36 0x00          DC8 54, 0, 0, 0, 8, 20, 34, 65, 0, 0, 20, 20, 20, 20, 20, 0, 0, 65, 34
   \              0x00 0x00    
   \              0x08 0x14    
   \              0x22 0x41    
   \              0x00 0x00    
   \              0x14 0x14    
   \              0x14 0x14    
   \              0x14 0x00    
   \              0x00 0x41    
   \              0x22         
   \   00000178   0x14 0x08          DC8 20, 8, 0, 2, 1, 81, 9, 6, 0, 50, 73, 89, 81, 62, 0, 124, 18, 17, 18
   \              0x00 0x02    
   \              0x01 0x51    
   \              0x09 0x06    
   \              0x00 0x32    
   \              0x49 0x59    
   \              0x51 0x3E    
   \              0x00 0x7C    
   \              0x12 0x11    
   \              0x12         
   \   0000018B   0x7C 0x00          DC8 124, 0, 127, 73, 73, 73, 54, 0, 62, 65, 65, 65, 34, 0, 127, 65, 65
   \              0x7F 0x49    
   \              0x49 0x49    
   \              0x36 0x00    
   \              0x3E 0x41    
   \              0x41 0x41    
   \              0x22 0x00    
   \              0x7F 0x41    
   \              0x41         
   \   0000019C   0x22 0x1C          DC8 34, 28, 0, 127, 73, 73, 73, 65, 0, 127, 9, 9, 9, 1, 0, 62, 65, 73
   \              0x00 0x7F    
   \              0x49 0x49    
   \              0x49 0x41    
   \              0x00 0x7F    
   \              0x09 0x09    
   \              0x09 0x01    
   \              0x00 0x3E    
   \              0x41 0x49    
   \   000001AE   0x49 0x7A          DC8 73, 122, 0, 127, 8, 8, 8, 127, 0, 0, 65, 127, 65, 0, 0, 32, 64, 65
   \              0x00 0x7F    
   \              0x08 0x08    
   \              0x08 0x7F    
   \              0x00 0x00    
   \              0x41 0x7F    
   \              0x41 0x00    
   \              0x00 0x20    
   \              0x40 0x41    
   \   000001C0   0x3F 0x01          DC8 63, 1, 0, 127, 8, 20, 34, 65, 0, 127, 64, 64, 64, 64, 0, 127, 2, 12
   \              0x00 0x7F    
   \              0x08 0x14    
   \              0x22 0x41    
   \              0x00 0x7F    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x7F    
   \              0x02 0x0C    
   \   000001D2   0x02 0x7F          DC8 2, 127, 0, 127, 4, 8, 16, 127, 0, 62, 65, 65, 65, 62, 0, 127, 9, 9
   \              0x00 0x7F    
   \              0x04 0x08    
   \              0x10 0x7F    
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x3E    
   \              0x00 0x7F    
   \              0x09 0x09    
   \   000001E4   0x09 0x06          DC8 9, 6, 0, 62, 65, 81, 33, 94, 0, 127, 9, 25, 41, 70, 0, 70, 73, 73
   \              0x00 0x3E    
   \              0x41 0x51    
   \              0x21 0x5E    
   \              0x00 0x7F    
   \              0x09 0x19    
   \              0x29 0x46    
   \              0x00 0x46    
   \              0x49 0x49    
   \   000001F6   0x49 0x31          DC8 73, 49, 0, 1, 1, 127, 1, 1, 0, 63, 64, 64, 64, 63, 0, 31, 32, 64
   \              0x00 0x01    
   \              0x01 0x7F    
   \              0x01 0x01    
   \              0x00 0x3F    
   \              0x40 0x40    
   \              0x40 0x3F    
   \              0x00 0x1F    
   \              0x20 0x40    
   \   00000208   0x20 0x1F          DC8 32, 31, 0, 63, 64, 56, 64, 63, 0, 99, 20, 8, 20, 99, 0, 7, 8, 112
   \              0x00 0x3F    
   \              0x40 0x38    
   \              0x40 0x3F    
   \              0x00 0x63    
   \              0x14 0x08    
   \              0x14 0x63    
   \              0x00 0x07    
   \              0x08 0x70    
   \   0000021A   0x08 0x07          DC8 8, 7, 0, 97, 81, 73, 69, 67, 0, 0, 127, 65, 65, 0, 0, 2, 4, 8, 16
   \              0x00 0x61    
   \              0x51 0x49    
   \              0x45 0x43    
   \              0x00 0x00    
   \              0x7F 0x41    
   \              0x41 0x00    
   \              0x00 0x02    
   \              0x04 0x08    
   \              0x10         
   \   0000022D   0x20 0x00          DC8 32, 0, 0, 65, 65, 127, 0, 0, 4, 2, 1, 2, 4, 0, 64, 64, 64, 64, 64
   \              0x00 0x41    
   \              0x41 0x7F    
   \              0x00 0x00    
   \              0x04 0x02    
   \              0x01 0x02    
   \              0x04 0x00    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x40         
   \   00000240   0x00 0x00          DC8 0, 0, 1, 2, 4, 0, 0, 32, 84, 84, 84, 120, 0, 127, 72, 68, 68, 56, 0
   \              0x01 0x02    
   \              0x04 0x00    
   \              0x00 0x20    
   \              0x54 0x54    
   \              0x54 0x78    
   \              0x00 0x7F    
   \              0x48 0x44    
   \              0x44 0x38    
   \              0x00         
   \   00000253   0x38 0x44          DC8 56, 68, 68, 68, 32, 0, 56, 68, 68, 72, 127, 0, 56, 84, 84, 84, 24
   \              0x44 0x44    
   \              0x20 0x00    
   \              0x38 0x44    
   \              0x44 0x48    
   \              0x7F 0x00    
   \              0x38 0x54    
   \              0x54 0x54    
   \              0x18         
   \   00000264   0x00 0x08          DC8 0, 8, 126, 9, 1, 2, 0, 24, 164, 164, 164, 124, 0, 127, 8, 4, 4, 120
   \              0x7E 0x09    
   \              0x01 0x02    
   \              0x00 0x18    
   \              0xA4 0xA4    
   \              0xA4 0x7C    
   \              0x00 0x7F    
   \              0x08 0x04    
   \              0x04 0x78    
   \   00000276   0x00 0x00          DC8 0, 0, 68, 125, 64, 0, 0, 64, 128, 132, 125, 0, 0, 127, 16, 40, 68
   \              0x44 0x7D    
   \              0x40 0x00    
   \              0x00 0x40    
   \              0x80 0x84    
   \              0x7D 0x00    
   \              0x00 0x7F    
   \              0x10 0x28    
   \              0x44         
   \   00000287   0x00 0x00          DC8 0, 0, 0, 65, 127, 64, 0, 0, 124, 4, 24, 4, 120, 0, 124, 8, 4, 4
   \              0x00 0x41    
   \              0x7F 0x40    
   \              0x00 0x00    
   \              0x7C 0x04    
   \              0x18 0x04    
   \              0x78 0x00    
   \              0x7C 0x08    
   \              0x04 0x04    
   \   00000299   0x78 0x00          DC8 120, 0, 56, 68, 68, 68, 56, 0, 252, 36, 36, 36, 24, 0, 24, 36, 36
   \              0x38 0x44    
   \              0x44 0x44    
   \              0x38 0x00    
   \              0xFC 0x24    
   \              0x24 0x24    
   \              0x18 0x00    
   \              0x18 0x24    
   \              0x24         
   \   000002AA   0x18 0xFC          DC8 24, 252, 0, 124, 8, 4, 4, 8, 0, 72, 84, 84, 84, 32, 0, 4, 63, 68
   \              0x00 0x7C    
   \              0x08 0x04    
   \              0x04 0x08    
   \              0x00 0x48    
   \              0x54 0x54    
   \              0x54 0x20    
   \              0x00 0x04    
   \              0x3F 0x44    
   \   000002BC   0x40 0x20          DC8 64, 32, 0, 60, 64, 64, 32, 124, 0, 28, 32, 64, 32, 28, 0, 60, 64
   \              0x00 0x3C    
   \              0x40 0x40    
   \              0x20 0x7C    
   \              0x00 0x1C    
   \              0x20 0x40    
   \              0x20 0x1C    
   \              0x00 0x3C    
   \              0x40         
   \   000002CD   0x30 0x40          DC8 48, 64, 60, 0, 68, 40, 16, 40, 68, 0, 28, 160, 160, 160, 124, 0, 68
   \              0x3C 0x00    
   \              0x44 0x28    
   \              0x10 0x28    
   \              0x44 0x00    
   \              0x1C 0xA0    
   \              0xA0 0xA0    
   \              0x7C 0x00    
   \              0x44         
   \   000002DE   0x64 0x54          DC8 100, 84, 76, 68, 20, 20, 20, 20, 20, 20, 255, 0, 0, 0, 0, 0, 0, 16
   \              0x4C 0x44    
   \              0x14 0x14    
   \              0x14 0x14    
   \              0x14 0x14    
   \              0xFF 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x10    
   \   000002F0   0x20 0x10          DC8 32, 16, 8, 4
   \              0x08 0x04    
      7          {
      8              { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//0
      9          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//1
     10          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//2
     11          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//3
     12          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//4
     13          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//5
     14          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//6
     15          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//7
     16          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//8
     17          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//9
     18          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//10
     19          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//11
     20          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//12
     21          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//13
     22          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//14
     23          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//15
     24          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//16
     25          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//17
     26          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//18
     27          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//19
     28          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//20
     29          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//21
     30          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//22
     31          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//23
     32          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//24
     33          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//25
     34          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//26
     35          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//27
     36          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//28
     37          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//29
     38          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//30
     39          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//31
     40          	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },	//32
     41              { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !33
     42              { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "34
     43              { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #35
     44              { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $36
     45              { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %37
     46              { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &38
     47              { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '39
     48              { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (40
     49              { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )41
     50              { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *42
     51              { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +43
     52              { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,44
     53              { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -45
     54              { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .46
     55              { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /47
     56              { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 048
     57              { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 149
     58              { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 250
     59              { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 351
     60              { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 452
     61              { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 553
     62              { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 654
     63              { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 755
     64              { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 856
     65              { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 957
     66              { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :58
     67              { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;59
     68              { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <60
     69              { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =61
     70              { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >62
     71              { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?63
     72              { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @64
     73              { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A65
     74              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B66
     75              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C67
     76              { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D68
     77              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E69
     78              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F70
     79              { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G71
     80              { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H72
     81              { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I73
     82              { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J74
     83              { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K75
     84              { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L76
     85              { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M77
     86              { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N78
     87              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O79
     88              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P80
     89              { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q81
     90              { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R82
     91              { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S83
     92              { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T84
     93              { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U85
     94              { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V86
     95              { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W87
     96              { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X88
     97              { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y89
     98              { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z90
     99              { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [91
    100              { 0x00, 0x02, 0x04 ,0x08, 0x10, 0x20 },   // '\'92
    101              { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]93
    102              { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^94
    103              { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _95
    104              { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '96
    105              { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a97
    106              { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b98
    107              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c99
    108              { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d100
    109              { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e
    110              { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f
    111              { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g
    112              { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h
    113              { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i
    114              { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j
    115              { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k
    116              { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l
    117              { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m
    118              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n
    119              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o
    120              { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p
    121              { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q
    122              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r
    123              { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s
    124              { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t
    125              { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u
    126              { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v
    127              { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w
    128              { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x
    129              { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y
    130              { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z
    131              { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 },   // horiz lines
    132          	{ 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00 },	  // |
    133          	{ 0x00, 0x10, 0x20, 0x10, 0x08, 0x04 }	  // √
    134          };
    135          
    136          // 16 x 8

   \                                 In section .rodata, align 4
    137          const unsigned char OLED_ASCII16X8[][16]=
   \                     OLED_ASCII16X8:
   \   00000000   0x00 0xE0          DC8 0, 224, 16, 8, 8, 16, 224, 0, 0, 15, 16, 32, 32, 16, 15, 0, 0, 16
   \              0x10 0x08    
   \              0x08 0x10    
   \              0xE0 0x00    
   \              0x00 0x0F    
   \              0x10 0x20    
   \              0x20 0x10    
   \              0x0F 0x00    
   \              0x00 0x10    
   \   00000012   0x10 0xF8          DC8 16, 248, 0, 0, 0, 0, 0, 32, 32, 63, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000026   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000003D   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000054   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000006B   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000099   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000B0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000C7   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000DE   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000F5   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000010C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000123   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000013A   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000151   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000168   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000017F   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000196   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001AD   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001DB   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000209   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 0, 0, 0, 0, 0, 0, 0, 51, 48, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xF8 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x33 0x30    
   \              0x00         
   \   0000021E   0x00 0x00          DC8 0, 0, 0, 16, 12, 6, 16, 12, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 192
   \              0x00 0x10    
   \              0x0C 0x06    
   \              0x10 0x0C    
   \              0x06 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0xC0    
   \   00000232   0x78 0x40          DC8 120, 64, 192, 120, 64, 0, 4, 63, 4, 4, 63, 4, 4, 0, 0, 112, 136
   \              0xC0 0x78    
   \              0x40 0x00    
   \              0x04 0x3F    
   \              0x04 0x04    
   \              0x3F 0x04    
   \              0x04 0x00    
   \              0x00 0x70    
   \              0x88         
   \   00000243   0xFC 0x08          DC8 252, 8, 48, 0, 0, 0, 24, 32, 255, 33, 30, 0, 0, 240, 8, 240, 0, 224
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x18 0x20    
   \              0xFF 0x21    
   \              0x1E 0x00    
   \              0x00 0xF0    
   \              0x08 0xF0    
   \              0x00 0xE0    
   \   00000255   0x18 0x00          DC8 24, 0, 0, 0, 33, 28, 3, 30, 33, 30, 0, 0, 240, 8, 136, 112, 0, 0, 0
   \              0x00 0x00    
   \              0x21 0x1C    
   \              0x03 0x1E    
   \              0x21 0x1E    
   \              0x00 0x00    
   \              0xF0 0x08    
   \              0x88 0x70    
   \              0x00 0x00    
   \              0x00         
   \   00000268   0x1E 0x21          DC8 30, 33, 35, 36, 25, 39, 33, 16, 16, 22, 14, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x23 0x24    
   \              0x19 0x27    
   \              0x21 0x10    
   \              0x10 0x16    
   \              0x0E 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000027B   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 224, 24, 4, 2, 0, 0, 0, 0, 7, 24, 32, 64, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xE0 0x18    
   \              0x04 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x07 0x18    
   \              0x20 0x40    
   \              0x00         
   \   00000290   0x00 0x02          DC8 0, 2, 4, 24, 224, 0, 0, 0, 0, 64, 32, 24, 7, 0, 0, 0, 64, 64, 128
   \              0x04 0x18    
   \              0xE0 0x00    
   \              0x00 0x00    
   \              0x00 0x40    
   \              0x20 0x18    
   \              0x07 0x00    
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x80         
   \   000002A3   0xF0 0x80          DC8 240, 128, 64, 64, 0, 2, 2, 1, 15, 1, 2, 2, 0, 0, 0, 0, 240, 0, 0, 0
   \              0x40 0x40    
   \              0x00 0x02    
   \              0x02 0x01    
   \              0x0F 0x01    
   \              0x02 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xF0 0x00    
   \              0x00 0x00    
   \   000002B7   0x00 0x01          DC8 0, 1, 1, 1, 31, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 176, 112
   \              0x01 0x01    
   \              0x1F 0x01    
   \              0x01 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0xB0 0x70    
   \   000002CB   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00         
   \   000002E2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 96, 24
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x30    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x60    
   \              0x18         
   \   000002F7   0x04 0x00          DC8 4, 0, 96, 24, 6, 1, 0, 0, 0, 0, 224, 16, 8, 8, 16, 224, 0, 0, 15
   \              0x60 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xE0 0x10    
   \              0x08 0x08    
   \              0x10 0xE0    
   \              0x00 0x00    
   \              0x0F         
   \   0000030A   0x10 0x20          DC8 16, 32, 32, 16, 15, 0, 0, 16, 16, 248, 0, 0, 0, 0, 0, 32, 32, 63
   \              0x20 0x10    
   \              0x0F 0x00    
   \              0x00 0x10    
   \              0x10 0xF8    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x20 0x3F    
   \   0000031C   0x20 0x20          DC8 32, 32, 0, 0, 0, 112, 8, 8, 8, 136, 112, 0, 0, 48, 40, 36, 34, 33
   \              0x00 0x00    
   \              0x00 0x70    
   \              0x08 0x08    
   \              0x08 0x88    
   \              0x70 0x00    
   \              0x00 0x30    
   \              0x28 0x24    
   \              0x22 0x21    
   \   0000032E   0x30 0x00          DC8 48, 0, 0, 48, 8, 136, 136, 72, 48, 0, 0, 24, 32, 32, 32, 17, 14, 0
   \              0x00 0x30    
   \              0x08 0x88    
   \              0x88 0x48    
   \              0x30 0x00    
   \              0x00 0x18    
   \              0x20 0x20    
   \              0x20 0x11    
   \              0x0E 0x00    
   \   00000340   0x00 0x00          DC8 0, 0, 192, 32, 16, 248, 0, 0, 0, 7, 4, 36, 36, 63, 36, 0, 0, 248, 8
   \              0xC0 0x20    
   \              0x10 0xF8    
   \              0x00 0x00    
   \              0x00 0x07    
   \              0x04 0x24    
   \              0x24 0x3F    
   \              0x24 0x00    
   \              0x00 0xF8    
   \              0x08         
   \   00000353   0x88 0x88          DC8 136, 136, 8, 8, 0, 0, 25, 33, 32, 32, 17, 14, 0, 0, 224, 16, 136
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x19 0x21    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0xE0 0x10    
   \              0x88         
   \   00000364   0x88 0x18          DC8 136, 24, 0, 0, 0, 15, 17, 32, 32, 17, 14, 0, 0, 56, 8, 8, 200, 56
   \              0x00 0x00    
   \              0x00 0x0F    
   \              0x11 0x20    
   \              0x20 0x11    
   \              0x0E 0x00    
   \              0x00 0x38    
   \              0x08 0x08    
   \              0xC8 0x38    
   \   00000376   0x08 0x00          DC8 8, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 112, 136, 8, 8, 136, 112, 0, 0
   \              0x00 0x00    
   \              0x00 0x3F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x70    
   \              0x88 0x08    
   \              0x08 0x88    
   \              0x70 0x00    
   \              0x00         
   \   00000389   0x1C 0x22          DC8 28, 34, 33, 33, 34, 28, 0, 0, 224, 16, 8, 8, 16, 224, 0, 0, 0, 49
   \              0x21 0x21    
   \              0x22 0x1C    
   \              0x00 0x00    
   \              0xE0 0x10    
   \              0x08 0x08    
   \              0x10 0xE0    
   \              0x00 0x00    
   \              0x00 0x31    
   \   0000039B   0x22 0x22          DC8 34, 34, 17, 15, 0, 0, 0, 0, 192, 192, 0, 0, 0, 0, 0, 0, 48, 48, 0
   \              0x11 0x0F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xC0 0xC0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x30 0x30    
   \              0x00         
   \   000003AE   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 128, 96, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x60    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003C2   0x80 0x40          DC8 128, 64, 32, 16, 8, 0, 0, 1, 2, 4, 8, 16, 32, 0, 64, 64, 64, 64, 64
   \              0x20 0x10    
   \              0x08 0x00    
   \              0x00 0x01    
   \              0x02 0x04    
   \              0x08 0x10    
   \              0x20 0x00    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x40         
   \   000003D5   0x40 0x40          DC8 64, 64, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 8, 16, 32, 64, 128, 0, 0, 0
   \              0x00 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x00 0x00    
   \              0x08 0x10    
   \              0x20 0x40    
   \              0x80 0x00    
   \              0x00 0x00    
   \   000003E9   0x20 0x10          DC8 32, 16, 8, 4, 2, 1, 0, 0, 112, 72, 8, 8, 8, 240, 0, 0, 0, 0, 48, 54
   \              0x08 0x04    
   \              0x02 0x01    
   \              0x00 0x00    
   \              0x70 0x48    
   \              0x08 0x08    
   \              0x08 0xF0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x30 0x36    
   \   000003FD   0x01 0x00          DC8 1, 0, 0, 192, 48, 200, 40, 232, 16, 224, 0, 7, 24, 39, 36, 35, 20
   \              0x00 0xC0    
   \              0x30 0xC8    
   \              0x28 0xE8    
   \              0x10 0xE0    
   \              0x00 0x07    
   \              0x18 0x27    
   \              0x24 0x23    
   \              0x14         
   \   0000040E   0x0B 0x00          DC8 11, 0, 0, 0, 192, 56, 224, 0, 0, 0, 32, 60, 35, 2, 2, 39, 56, 32, 8
   \              0x00 0x00    
   \              0xC0 0x38    
   \              0xE0 0x00    
   \              0x00 0x00    
   \              0x20 0x3C    
   \              0x23 0x02    
   \              0x02 0x27    
   \              0x38 0x20    
   \              0x08         
   \   00000421   0xF8 0x88          DC8 248, 136, 136, 136, 112, 0, 0, 32, 63, 32, 32, 32, 17, 14, 0, 192
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0xC0    
   \   00000431   0x30 0x08          DC8 48, 8, 8, 8, 8, 56, 0, 7, 24, 32, 32, 32, 16, 8, 0, 8, 248, 8, 8, 8
   \              0x08 0x08    
   \              0x08 0x38    
   \              0x00 0x07    
   \              0x18 0x20    
   \              0x20 0x20    
   \              0x10 0x08    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x08 0x08    
   \   00000445   0x10 0xE0          DC8 16, 224, 0, 32, 63, 32, 32, 32, 16, 15, 0, 8, 248, 136, 136, 232, 8
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x08    
   \              0xF8 0x88    
   \              0x88 0xE8    
   \              0x08         
   \   00000456   0x10 0x00          DC8 16, 0, 32, 63, 32, 32, 35, 32, 24, 0, 8, 248, 136, 136, 232, 8, 16
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x23 0x20    
   \              0x18 0x00    
   \              0x08 0xF8    
   \              0x88 0x88    
   \              0xE8 0x08    
   \              0x10         
   \   00000467   0x00 0x20          DC8 0, 32, 63, 32, 0, 3, 0, 0, 0, 192, 48, 8, 8, 8, 56, 0, 0, 7, 24, 32
   \              0x3F 0x20    
   \              0x00 0x03    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x38 0x00    
   \              0x00 0x07    
   \              0x18 0x20    
   \   0000047B   0x20 0x22          DC8 32, 34, 30, 2, 0, 8, 248, 8, 0, 0, 8, 248, 8, 32, 63, 33, 1, 1, 33
   \              0x1E 0x02    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x00 0x00    
   \              0x08 0xF8    
   \              0x08 0x20    
   \              0x3F 0x21    
   \              0x01 0x01    
   \              0x21         
   \   0000048E   0x3F 0x20          DC8 63, 32, 0, 8, 8, 248, 8, 8, 0, 0, 0, 32, 32, 63, 32, 32, 0, 0, 0, 0
   \              0x00 0x08    
   \              0x08 0xF8    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004A2   0x08 0x08          DC8 8, 8, 248, 8, 8, 0, 192, 128, 128, 128, 127, 0, 0, 0, 8, 248, 136
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0xC0 0x80    
   \              0x80 0x80    
   \              0x7F 0x00    
   \              0x00 0x00    
   \              0x08 0xF8    
   \              0x88         
   \   000004B3   0xC0 0x28          DC8 192, 40, 24, 8, 0, 32, 63, 32, 1, 38, 56, 32, 0, 8, 248, 8, 0, 0, 0
   \              0x18 0x08    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x01 0x26    
   \              0x38 0x20    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x00 0x00    
   \              0x00         
   \   000004C6   0x00 0x00          DC8 0, 0, 32, 63, 32, 32, 32, 32, 48, 0, 8, 248, 248, 0, 248, 248, 8, 0
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x00    
   \              0x08 0xF8    
   \              0xF8 0x00    
   \              0xF8 0xF8    
   \              0x08 0x00    
   \   000004D8   0x20 0x3F          DC8 32, 63, 0, 63, 0, 63, 32, 0, 8, 248, 48, 192, 0, 8, 248, 8, 32, 63
   \              0x00 0x3F    
   \              0x00 0x3F    
   \              0x20 0x00    
   \              0x08 0xF8    
   \              0x30 0xC0    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x20 0x3F    
   \   000004EA   0x20 0x00          DC8 32, 0, 7, 24, 63, 0, 224, 16, 8, 8, 8, 16, 224, 0, 15, 16, 32, 32
   \              0x07 0x18    
   \              0x3F 0x00    
   \              0xE0 0x10    
   \              0x08 0x08    
   \              0x08 0x10    
   \              0xE0 0x00    
   \              0x0F 0x10    
   \              0x20 0x20    
   \   000004FC   0x20 0x10          DC8 32, 16, 15, 0, 8, 248, 8, 8, 8, 8, 240, 0, 32, 63, 33, 1, 1, 1, 0
   \              0x0F 0x00    
   \              0x08 0xF8    
   \              0x08 0x08    
   \              0x08 0x08    
   \              0xF0 0x00    
   \              0x20 0x3F    
   \              0x21 0x01    
   \              0x01 0x01    
   \              0x00         
   \   0000050F   0x00 0xE0          DC8 0, 224, 16, 8, 8, 8, 16, 224, 0, 15, 24, 36, 36, 56, 80, 79, 0, 8
   \              0x10 0x08    
   \              0x08 0x08    
   \              0x10 0xE0    
   \              0x00 0x0F    
   \              0x18 0x24    
   \              0x24 0x38    
   \              0x50 0x4F    
   \              0x00 0x08    
   \   00000521   0xF8 0x88          DC8 248, 136, 136, 136, 136, 112, 0, 32, 63, 32, 0, 3, 12, 48, 32, 0
   \              0x88 0x88    
   \              0x88 0x70    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x03    
   \              0x0C 0x30    
   \              0x20 0x00    
   \   00000531   0x70 0x88          DC8 112, 136, 8, 8, 8, 56, 0, 0, 56, 32, 33, 33, 34, 28, 0, 24, 8, 8
   \              0x08 0x08    
   \              0x08 0x38    
   \              0x00 0x00    
   \              0x38 0x20    
   \              0x21 0x21    
   \              0x22 0x1C    
   \              0x00 0x18    
   \              0x08 0x08    
   \   00000543   0xF8 0x08          DC8 248, 8, 8, 24, 0, 0, 0, 32, 63, 32, 0, 0, 0, 8, 248, 8, 0, 0, 8
   \              0x08 0x18    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x00    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x00 0x00    
   \              0x08         
   \   00000556   0xF8 0x08          DC8 248, 8, 0, 31, 32, 32, 32, 32, 31, 0, 8, 120, 136, 0, 0, 200, 56, 8
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x1F 0x00    
   \              0x08 0x78    
   \              0x88 0x00    
   \              0x00 0xC8    
   \              0x38 0x08    
   \   00000568   0x00 0x00          DC8 0, 0, 7, 56, 14, 1, 0, 0, 248, 8, 0, 248, 0, 8, 248, 0, 3, 60, 7, 0
   \              0x07 0x38    
   \              0x0E 0x01    
   \              0x00 0x00    
   \              0xF8 0x08    
   \              0x00 0xF8    
   \              0x00 0x08    
   \              0xF8 0x00    
   \              0x03 0x3C    
   \              0x07 0x00    
   \   0000057C   0x07 0x3C          DC8 7, 60, 3, 0, 8, 24, 104, 128, 128, 104, 24, 8, 32, 48, 44, 3, 3, 44
   \              0x03 0x00    
   \              0x08 0x18    
   \              0x68 0x80    
   \              0x80 0x68    
   \              0x18 0x08    
   \              0x20 0x30    
   \              0x2C 0x03    
   \              0x03 0x2C    
   \   0000058E   0x30 0x20          DC8 48, 32, 8, 56, 200, 0, 200, 56, 8, 0, 0, 0, 32, 63, 32, 0, 0, 0, 16
   \              0x08 0x38    
   \              0xC8 0x00    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x10         
   \   000005A1   0x08 0x08          DC8 8, 8, 8, 200, 56, 8, 0, 32, 56, 38, 33, 32, 32, 24, 0, 0, 0, 0, 254
   \              0x08 0xC8    
   \              0x38 0x08    
   \              0x00 0x20    
   \              0x38 0x26    
   \              0x21 0x20    
   \              0x20 0x18    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFE         
   \   000005B4   0x02 0x02          DC8 2, 2, 2, 0, 0, 0, 0, 127, 64, 64, 64, 0, 0, 12, 48, 192, 0, 0, 0, 0
   \              0x02 0x00    
   \              0x00 0x00    
   \              0x00 0x7F    
   \              0x40 0x40    
   \              0x40 0x00    
   \              0x00 0x0C    
   \              0x30 0xC0    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005C8   0x00 0x00          DC8 0, 0, 0, 1, 6, 56, 192, 0, 0, 2, 2, 2, 254, 0, 0, 0, 0, 64, 64, 64
   \              0x00 0x01    
   \              0x06 0x38    
   \              0xC0 0x00    
   \              0x00 0x02    
   \              0x02 0x02    
   \              0xFE 0x00    
   \              0x00 0x00    
   \              0x00 0x40    
   \              0x40 0x40    
   \   000005DC   0x7F 0x00          DC8 127, 0, 0, 0, 0, 0, 4, 2, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x04 0x02    
   \              0x02 0x02    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005F2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 128, 128, 128, 128, 0, 2, 2
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x02    
   \              0x02         
   \   00000603   0x04 0x00          DC8 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x80 0x00    
   \   00000617   0x00 0x00          DC8 0, 0, 25, 36, 34, 34, 34, 63, 32, 8, 248, 0, 128, 128, 0, 0, 0, 0
   \              0x19 0x24    
   \              0x22 0x22    
   \              0x22 0x3F    
   \              0x20 0x08    
   \              0xF8 0x00    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000629   0x3F 0x11          DC8 63, 17, 32, 32, 17, 14, 0, 0, 0, 0, 128, 128, 128, 0, 0, 0, 14, 17
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x0E 0x11    
   \   0000063B   0x20 0x20          DC8 32, 32, 32, 17, 0, 0, 0, 0, 128, 128, 136, 248, 0, 0, 14, 17, 32
   \              0x20 0x11    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x88 0xF8    
   \              0x00 0x00    
   \              0x0E 0x11    
   \              0x20         
   \   0000064C   0x20 0x10          DC8 32, 16, 63, 32, 0, 0, 128, 128, 128, 128, 0, 0, 0, 31, 34, 34, 34
   \              0x3F 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x22 0x22    
   \              0x22         
   \   0000065D   0x22 0x13          DC8 34, 19, 0, 0, 128, 128, 240, 136, 136, 136, 24, 0, 32, 32, 63, 32
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xF0 0x88    
   \              0x88 0x88    
   \              0x18 0x00    
   \              0x20 0x20    
   \              0x3F 0x20    
   \   0000066D   0x20 0x00          DC8 32, 0, 0, 0, 0, 128, 128, 128, 128, 128, 0, 0, 107, 148, 148, 148
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x6B 0x94    
   \              0x94 0x94    
   \   0000067D   0x93 0x60          DC8 147, 96, 0, 8, 248, 0, 128, 128, 128, 0, 0, 32, 63, 33, 0, 0, 32
   \              0x00 0x08    
   \              0xF8 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x20    
   \              0x3F 0x21    
   \              0x00 0x00    
   \              0x20         
   \   0000068E   0x3F 0x20          DC8 63, 32, 0, 128, 152, 152, 0, 0, 0, 0, 0, 32, 32, 63, 32, 32, 0, 0
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x00 0x00    
   \   000006A0   0x00 0x00          DC8 0, 0, 0, 128, 152, 152, 0, 0, 0, 192, 128, 128, 128, 127, 0, 0, 8
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x80 0x80    
   \              0x80 0x7F    
   \              0x00 0x00    
   \              0x08         
   \   000006B1   0xF8 0x00          DC8 248, 0, 0, 128, 128, 128, 0, 32, 63, 36, 2, 45, 48, 32, 0, 0, 8, 8
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x24    
   \              0x02 0x2D    
   \              0x30 0x20    
   \              0x00 0x00    
   \              0x08 0x08    
   \   000006C3   0xF8 0x00          DC8 248, 0, 0, 0, 0, 0, 32, 32, 63, 32, 32, 0, 0, 128, 128, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000006D4   0x80 0x80          DC8 128, 128, 128, 0, 32, 63, 32, 0, 63, 32, 0, 63, 128, 128, 0, 128
   \              0x80 0x00    
   \              0x20 0x3F    
   \              0x20 0x00    
   \              0x3F 0x20    
   \              0x00 0x3F    
   \              0x80 0x80    
   \              0x00 0x80    
   \   000006E4   0x80 0x80          DC8 128, 128, 0, 0, 32, 63, 33, 0, 0, 32, 63, 32, 0, 0, 128, 128, 128
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x21 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80         
   \   000006F5   0x80 0x00          DC8 128, 0, 0, 0, 31, 32, 32, 32, 32, 31, 0, 128, 128, 0, 128, 128, 0
   \              0x00 0x00    
   \              0x1F 0x20    
   \              0x20 0x20    
   \              0x20 0x1F    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x80    
   \              0x00         
   \   00000706   0x00 0x00          DC8 0, 0, 128, 255, 161, 32, 32, 17, 14, 0, 0, 0, 0, 128, 128, 128, 128
   \              0x80 0xFF    
   \              0xA1 0x20    
   \              0x20 0x11    
   \              0x0E 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x80         
   \   00000717   0x00 0x00          DC8 0, 0, 14, 17, 32, 32, 160, 255, 128, 128, 128, 128, 0, 128, 128
   \              0x0E 0x11    
   \              0x20 0x20    
   \              0xA0 0xFF    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x80    
   \              0x80         
   \   00000726   0x80 0x00          DC8 128, 0, 32, 32, 63, 33, 32, 0, 1, 0, 0, 0, 128, 128, 128, 128, 128
   \              0x20 0x20    
   \              0x3F 0x21    
   \              0x20 0x00    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   00000737   0x00 0x00          DC8 0, 0, 51, 36, 36, 36, 36, 25, 0, 0, 128, 128, 224, 128, 128, 0, 0
   \              0x33 0x24    
   \              0x24 0x24    
   \              0x24 0x19    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xE0 0x80    
   \              0x80 0x00    
   \              0x00         
   \   00000748   0x00 0x00          DC8 0, 0, 0, 31, 32, 32, 0, 0, 128, 128, 0, 0, 0, 128, 128, 0, 0, 31
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x00 0x1F    
   \   0000075A   0x20 0x20          DC8 32, 32, 32, 16, 63, 32, 128, 128, 128, 0, 0, 128, 128, 128, 0, 1
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x01    
   \   0000076A   0x0E 0x30          DC8 14, 48, 8, 6, 1, 0, 128, 128, 0, 128, 0, 128, 128, 128, 15, 48, 12
   \              0x08 0x06    
   \              0x01 0x00    
   \              0x80 0x80    
   \              0x00 0x80    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x0F 0x30    
   \              0x0C         
   \   0000077B   0x03 0x0C          DC8 3, 12, 48, 15, 0, 0, 128, 128, 0, 128, 128, 128, 0, 0, 32, 49, 46
   \              0x30 0x0F    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x20 0x31    
   \              0x2E         
   \   0000078C   0x0E 0x31          DC8 14, 49, 32, 0, 128, 128, 128, 0, 0, 128, 128, 128, 128, 129, 142
   \              0x20 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x80 0x81    
   \              0x8E         
   \   0000079B   0x70 0x18          DC8 112, 24, 6, 1, 0, 0, 128, 128, 128, 128, 128, 128, 0, 0, 33, 48, 44
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x21 0x30    
   \              0x2C         
   \   000007AC   0x22 0x21          DC8 34, 33, 48, 0, 0, 0, 0, 0, 128, 124, 2, 2, 0, 0, 0, 0, 0, 63, 64
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x7C    
   \              0x02 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x3F    
   \              0x40         
   \   000007BF   0x40 0x00          DC8 64, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 2, 2
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x02 0x02    
   \   000007D3   0x7C 0x80          DC8 124, 128, 0, 0, 0, 0, 64, 64, 63, 0, 0, 0, 0, 0, 6, 1, 1, 2, 2, 4
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x06 0x01    
   \              0x01 0x02    
   \              0x02 0x04    
   \   000007E7   0x04 0x00          DC8 4, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    138          {
    139          	0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,// 0
    140          	0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,// 1
    141          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 2
    142          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 3
    143          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 4
    144          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 5
    145          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 6
    146          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 7
    147          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 8
    148          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 9
    149          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 10
    150          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 11
    151          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 12
    152          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 13
    153          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 14
    154          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 15
    155          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 16
    156          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 17
    157          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 18
    158          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 19
    159          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 20
    160          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 21
    161          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 22
    162          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 23
    163          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 24
    164          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 25
    165          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 26
    166          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 27
    167          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 28
    168          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 29
    169          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 30
    170          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 31
    171          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 32
    172          
    173          	0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//!33
    174          	0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//"34
    175          	0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//#35
    176          	0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$36
    177          	0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//%37
    178          	0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//&38
    179          	0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//'39
    180          	0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//(40
    181          	0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//)41
    182          	0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//*42
    183          	0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+43
    184          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//,44
    185          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//-45
    186          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//.46
    187          	0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,///47
    188          	0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//048
    189          	0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//149
    190          	0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//250
    191          	0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//351
    192          	0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//452
    193          	0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//553
    194          	0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//654
    195          	0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//755
    196          	0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//856
    197          	0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//957
    198          	0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//:58
    199          	0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//;59
    200          	0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//<60
    201          	0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//=61
    202          	0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//>62
    203          	0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//?63
    204          	0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@64
    205          	0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A65
    206          	0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B66
    207          	0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C67
    208          	0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D68
    209          	0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E69
    210          	0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F70
    211          	0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G71
    212          	0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H72
    213          	0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I73
    214          	0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J74
    215          	0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K75
    216          	0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L76
    217          	0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M77
    218          	0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N78
    219          	0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O79
    220          	0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P80
    221          	0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q81
    222          	0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R82
    223          	0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S83
    224          	0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T84
    225          	0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U85
    226          	0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V86
    227          	0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W87
    228          	0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X88
    229          	0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y89
    230          	0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z90
    231          	0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[91
    232          	0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\92
    233          	0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//]93
    234          	0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^94
    235          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_95
    236          	0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//`96
    237          	0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a97
    238          	0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b98
    239          	0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c99
    240          	0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d100
    241          	0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e101
    242          	0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f102
    243          	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g103
    244          	0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h104
    245          	0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i105
    246          	0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j106
    247          	0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k107
    248          	0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l108
    249          	0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m109
    250          	0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n110
    251          	0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o111
    252          	0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p112
    253          	0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q113
    254          	0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r114
    255          	0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s115
    256          	0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t116
    257          	0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//u117
    258          	0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v118
    259          	0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w119
    260          	0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x120
    261          	0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y121
    262          	0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z122
    263          	0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{123
    264          	0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//|124
    265          	0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//}125
    266          	0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//~126
    267          
    268          };
    269          
    270          //16*16

   \                                 In section .rodata, align 4
    271          const unsigned char OLED_16X8GB2312[][32] =
   \                     OLED_16X8GB2312:
   \   00000000   0x20 0x10          DC8 32, 16, 8, 252, 3, 32, 32, 16, 127, 136, 136, 132, 130, 224, 0, 0
   \              0x08 0xFC    
   \              0x03 0x20    
   \              0x20 0x10    
   \              0x7F 0x88    
   \              0x88 0x84    
   \              0x82 0xE0    
   \              0x00 0x00    
   \   00000010   0x04 0x04          DC8 4, 4, 4, 5, 4, 4, 4, 255, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 240, 16, 16
   \              0x04 0x05    
   \              0x04 0x04    
   \              0x04 0xFF    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0xF0 0x10    
   \              0x10         
   \   00000025   0x10 0x10          DC8 16, 16, 255, 16, 16, 16, 16, 240, 0, 0, 0, 0, 0, 15, 4, 4, 4, 4
   \              0xFF 0x10    
   \              0x10 0x10    
   \              0x10 0xF0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x0F    
   \              0x04 0x04    
   \              0x04 0x04    
   \   00000037   0xFF 0x04          DC8 255, 4, 4, 4, 4, 15, 0, 0, 0, 36, 36, 164, 254, 163, 34, 0, 34, 204
   \              0x04 0x04    
   \              0x04 0x0F    
   \              0x00 0x00    
   \              0x00 0x24    
   \              0x24 0xA4    
   \              0xFE 0xA3    
   \              0x22 0x00    
   \              0x22 0xCC    
   \   00000049   0x00 0x00          DC8 0, 0, 255, 0, 0, 0, 0, 8, 6, 1, 255, 0, 1, 4, 4, 4, 4, 4, 255, 2, 2
   \              0xFF 0x00    
   \              0x00 0x00    
   \              0x00 0x08    
   \              0x06 0x01    
   \              0xFF 0x00    
   \              0x01 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0xFF 0x02    
   \              0x02         
   \   0000005E   0x02 0x00          DC8 2, 0, 16, 16, 16, 255, 16, 144, 8, 136, 136, 136, 255, 136, 136
   \              0x10 0x10    
   \              0x10 0xFF    
   \              0x10 0x90    
   \              0x08 0x88    
   \              0x88 0x88    
   \              0xFF 0x88    
   \              0x88         
   \   0000006D   0x88 0x08          DC8 136, 8, 0, 4, 68, 130, 127, 1, 128, 128, 64, 67, 44, 16, 40, 70
   \              0x00 0x04    
   \              0x44 0x82    
   \              0x7F 0x01    
   \              0x80 0x80    
   \              0x40 0x43    
   \              0x2C 0x10    
   \              0x28 0x46    
   \   0000007D   0x81 0x80          DC8 129, 128, 0, 32, 32, 32, 32, 32, 32, 32, 255, 32, 32, 32, 32, 32
   \              0x00 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0xFF 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \   0000008D   0x20 0x20          DC8 32, 32, 0, 128, 128, 64, 32, 16, 12, 3, 0, 3, 12, 16, 32, 64, 128
   \              0x00 0x80    
   \              0x80 0x40    
   \              0x20 0x10    
   \              0x0C 0x03    
   \              0x00 0x03    
   \              0x0C 0x10    
   \              0x20 0x40    
   \              0x80         
   \   0000009E   0x80 0x00          DC8 128, 0, 64, 48, 17, 150, 144, 144, 145, 150, 144, 144, 152, 20, 19
   \              0x40 0x30    
   \              0x11 0x96    
   \              0x90 0x90    
   \              0x91 0x96    
   \              0x90 0x90    
   \              0x98 0x14    
   \              0x13         
   \   000000AD   0x50 0x30          DC8 80, 48, 0, 4, 4, 4, 4, 4, 68, 132, 126, 6, 5, 4, 4, 4, 4, 4, 0, 0
   \              0x00 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x44 0x84    
   \              0x7E 0x06    
   \              0x05 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x00 0x00    
   \   000000C1   0x80 0x60          DC8 128, 96, 248, 7, 0, 4, 36, 36, 37, 38, 36, 36, 36, 4, 0, 1, 0, 0
   \              0xF8 0x07    
   \              0x00 0x04    
   \              0x24 0x24    
   \              0x25 0x26    
   \              0x24 0x24    
   \              0x24 0x04    
   \              0x00 0x01    
   \              0x00 0x00    
   \   000000D3   0xFF 0x00          DC8 255, 0, 0, 0, 249, 73, 73, 73, 73, 73, 249, 0, 0, 16, 16, 208, 255
   \              0x00 0x00    
   \              0xF9 0x49    
   \              0x49 0x49    
   \              0x49 0x49    
   \              0xF9 0x00    
   \              0x00 0x10    
   \              0x10 0xD0    
   \              0xFF         
   \   000000E4   0x90 0x10          DC8 144, 16, 32, 34, 34, 34, 226, 34, 34, 34, 32, 0, 4, 3, 0, 255, 0
   \              0x20 0x22    
   \              0x22 0x22    
   \              0xE2 0x22    
   \              0x22 0x22    
   \              0x20 0x00    
   \              0x04 0x03    
   \              0x00 0xFF    
   \              0x00         
   \   000000F5   0x13 0x0C          DC8 19, 12, 3, 64, 128, 127, 0, 1, 6, 24, 0, 0, 254, 2, 34, 218, 6, 0
   \              0x03 0x40    
   \              0x80 0x7F    
   \              0x00 0x01    
   \              0x06 0x18    
   \              0x00 0x00    
   \              0xFE 0x02    
   \              0x22 0xDA    
   \              0x06 0x00    
   \   00000107   0x00 0x00          DC8 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 255, 8, 16, 136, 71, 32, 24, 7, 0
   \              0xFF 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFF 0x08    
   \              0x10 0x88    
   \              0x47 0x20    
   \              0x18 0x07    
   \              0x00         
   \   0000011A   0x07 0x18          DC8 7, 24, 32, 64, 128, 0, 64, 66, 204, 0, 0, 254, 130, 146, 146, 254
   \              0x20 0x40    
   \              0x80 0x00    
   \              0x40 0x42    
   \              0xCC 0x00    
   \              0x00 0xFE    
   \              0x82 0x92    
   \              0x92 0xFE    
   \   0000012A   0x92 0x92          DC8 146, 146, 130, 254, 0, 0, 0, 0, 63, 16, 136, 127, 0, 30, 18, 18, 18
   \              0x82 0xFE    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x3F 0x10    
   \              0x88 0x7F    
   \              0x00 0x1E    
   \              0x12 0x12    
   \              0x12         
   \   0000013B   0x5E 0x80          DC8 94, 128, 127, 0, 0, 0, 32, 32, 168, 108, 42, 57, 40, 168, 42, 108
   \              0x7F 0x00    
   \              0x00 0x00    
   \              0x20 0x20    
   \              0xA8 0x6C    
   \              0x2A 0x39    
   \              0x28 0xA8    
   \              0x2A 0x6C    
   \   0000014B   0xA8 0x20          DC8 168, 32, 32, 0, 0, 2, 130, 129, 144, 146, 74, 73, 69, 36, 34, 16, 8
   \              0x20 0x00    
   \              0x00 0x02    
   \              0x82 0x81    
   \              0x90 0x92    
   \              0x4A 0x49    
   \              0x45 0x24    
   \              0x22 0x10    
   \              0x08         
   \   0000015C   0x01 0x02          DC8 1, 2, 2, 0, 16, 96, 2, 140, 0, 254, 2, 242, 2, 254, 0, 248, 0, 255
   \              0x02 0x00    
   \              0x10 0x60    
   \              0x02 0x8C    
   \              0x00 0xFE    
   \              0x02 0xF2    
   \              0x02 0xFE    
   \              0x00 0xF8    
   \              0x00 0xFF    
   \   0000016E   0x00 0x00          DC8 0, 0, 4, 4, 126, 1, 128, 71, 48, 15, 16, 39, 0, 71, 128, 127, 0, 0
   \              0x04 0x04    
   \              0x7E 0x01    
   \              0x80 0x47    
   \              0x30 0x0F    
   \              0x10 0x27    
   \              0x00 0x47    
   \              0x80 0x7F    
   \              0x00 0x00    
   \   00000180   0x40 0x40          DC8 64, 64, 66, 204, 0, 144, 144, 144, 144, 144, 255, 16, 17, 22, 16, 0
   \              0x42 0xCC    
   \              0x00 0x90    
   \              0x90 0x90    
   \              0x90 0x90    
   \              0xFF 0x10    
   \              0x11 0x16    
   \              0x10 0x00    
   \   00000190   0x00 0x00          DC8 0, 0, 0, 63, 16, 40, 96, 63, 16, 16, 1, 14, 48, 64, 240, 0, 0, 254
   \              0x00 0x3F    
   \              0x10 0x28    
   \              0x60 0x3F    
   \              0x10 0x10    
   \              0x01 0x0E    
   \              0x30 0x40    
   \              0xF0 0x00    
   \              0x00 0xFE    
   \   000001A2   0x02 0x42          DC8 2, 66, 34, 50, 94, 146, 82, 50, 18, 2, 2, 254, 0, 0, 0, 255, 66, 66
   \              0x22 0x32    
   \              0x5E 0x92    
   \              0x52 0x32    
   \              0x12 0x02    
   \              0x02 0xFE    
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0x42 0x42    
   \   000001B4   0x42 0x51          DC8 66, 81, 85, 100, 105, 65, 66, 66, 66, 255, 0, 0, 0, 128, 96, 248
   \              0x55 0x64    
   \              0x69 0x41    
   \              0x42 0x42    
   \              0x42 0xFF    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0xF8    
   \   000001C4   0x17 0x08          DC8 23, 8, 124, 75, 202, 106, 90, 78, 72, 120, 0, 0, 1, 0, 0, 255, 0
   \              0x7C 0x4B    
   \              0xCA 0x6A    
   \              0x5A 0x4E    
   \              0x48 0x78    
   \              0x00 0x00    
   \              0x01 0x00    
   \              0x00 0xFF    
   \              0x00         
   \   000001D5   0x4A 0x4A          DC8 74, 74, 37, 82, 137, 126, 4, 26, 33, 64, 0, 72, 40, 152, 14, 24
   \              0x25 0x52    
   \              0x89 0x7E    
   \              0x04 0x1A    
   \              0x21 0x40    
   \              0x00 0x48    
   \              0x28 0x98    
   \              0x0E 0x18    
   \   000001E5   0xAA 0x48          DC8 170, 72, 0, 254, 66, 130, 98, 254, 0, 0, 0, 68, 52, 15, 149, 100
   \              0x00 0xFE    
   \              0x42 0x82    
   \              0x62 0xFE    
   \              0x00 0x00    
   \              0x00 0x44    
   \              0x34 0x0F    
   \              0x95 0x64    
   \   000001F5   0x1F 0xA5          DC8 31, 165, 100, 31, 4, 3, 4, 63, 64, 248, 0, 0, 8, 136, 72, 40, 24
   \              0x64 0x1F    
   \              0x04 0x03    
   \              0x04 0x3F    
   \              0x40 0xF8    
   \              0x00 0x00    
   \              0x08 0x88    
   \              0x48 0x28    
   \              0x18         
   \   00000206   0x0F 0xE8          DC8 15, 232, 8, 8, 8, 8, 8, 8, 0, 0, 8, 8, 9, 9, 9, 9, 9, 255, 9, 9, 9
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0x09 0x09    
   \              0x09 0x09    
   \              0x09 0xFF    
   \              0x09 0x09    
   \              0x09         
   \   0000021B   0x09 0x09          DC8 9, 9, 8, 8, 0, 4, 228, 36, 52, 47, 228, 4, 68, 196, 84, 111, 68
   \              0x08 0x08    
   \              0x00 0x04    
   \              0xE4 0x24    
   \              0x34 0x2F    
   \              0xE4 0x04    
   \              0x44 0xC4    
   \              0x54 0x6F    
   \              0x44         
   \   0000022C   0xC4 0x44          DC8 196, 68, 4, 0, 0, 255, 73, 73, 73, 249, 2, 18, 18, 19, 254, 19, 18
   \              0x04 0x00    
   \              0x00 0xFF    
   \              0x49 0x49    
   \              0x49 0xF9    
   \              0x02 0x12    
   \              0x12 0x13    
   \              0xFE 0x13    
   \              0x12         
   \   0000023D   0x12 0x02          DC8 18, 2, 0, 32, 32, 255, 32, 36, 244, 84, 84, 84, 255, 84, 85, 86
   \              0x00 0x20    
   \              0x20 0xFF    
   \              0x20 0x24    
   \              0xF4 0x54    
   \              0x54 0x54    
   \              0xFF 0x54    
   \              0x55 0x56    
   \   0000024D   0xF4 0x04          DC8 244, 4, 0, 0, 0, 255, 0, 8, 11, 25, 105, 9, 11, 73, 137, 125, 11, 8
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0x00 0x08    
   \              0x0B 0x19    
   \              0x69 0x09    
   \              0x0B 0x49    
   \              0x89 0x7D    
   \              0x0B 0x08    
   \   0000025F   0x00 0x00          DC8 0, 0, 254, 2, 34, 218, 6, 0, 252, 4, 4, 4, 4, 4, 252, 0, 0, 0, 255
   \              0xFE 0x02    
   \              0x22 0xDA    
   \              0x06 0x00    
   \              0xFC 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0xFC 0x00    
   \              0x00 0x00    
   \              0xFF         
   \   00000272   0x08 0x10          DC8 8, 16, 8, 7, 0, 255, 65, 65, 65, 65, 65, 255, 0, 0
   \              0x08 0x07    
   \              0x00 0xFF    
   \              0x41 0x41    
   \              0x41 0x41    
   \              0x41 0xFF    
   \              0x00 0x00    
    272          {
    273          	0x20,0x10,0x08,0xFC,0x03,0x20,0x20,0x10,0x7F,0x88,0x88,0x84,0x82,0xE0,0x00,0x00,//华0
    274          	0x04,0x04,0x04,0x05,0x04,0x04,0x04,0xFF,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,
    275          	0x00,0x00,0xF0,0x10,0x10,0x10,0x10,0xFF,0x10,0x10,0x10,0x10,0xF0,0x00,0x00,0x00,//中1
    276          	0x00,0x00,0x0F,0x04,0x04,0x04,0x04,0xFF,0x04,0x04,0x04,0x04,0x0F,0x00,0x00,0x00,
    277          	0x24,0x24,0xA4,0xFE,0xA3,0x22,0x00,0x22,0xCC,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,//科2
    278          	0x08,0x06,0x01,0xFF,0x00,0x01,0x04,0x04,0x04,0x04,0x04,0xFF,0x02,0x02,0x02,0x00,
    279          	0x10,0x10,0x10,0xFF,0x10,0x90,0x08,0x88,0x88,0x88,0xFF,0x88,0x88,0x88,0x08,0x00,//技3
    280          	0x04,0x44,0x82,0x7F,0x01,0x80,0x80,0x40,0x43,0x2C,0x10,0x28,0x46,0x81,0x80,0x00,
    281          	0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xFF,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x00,//大4
    282          	0x80,0x80,0x40,0x20,0x10,0x0C,0x03,0x00,0x03,0x0C,0x10,0x20,0x40,0x80,0x80,0x00,
    283          	0x40,0x30,0x11,0x96,0x90,0x90,0x91,0x96,0x90,0x90,0x98,0x14,0x13,0x50,0x30,0x00,//学5
    284          	0x04,0x04,0x04,0x04,0x04,0x44,0x84,0x7E,0x06,0x05,0x04,0x04,0x04,0x04,0x04,0x00,
    285                  0x00,0x80,0x60,0xF8,0x07,0x00,0x04,0x24,0x24,0x25,0x26,0x24,0x24,0x24,0x04,0x00,//信6
    286                  0x01,0x00,0x00,0xFF,0x00,0x00,0x00,0xF9,0x49,0x49,0x49,0x49,0x49,0xF9,0x00,0x00,
    287                  0x10,0x10,0xD0,0xFF,0x90,0x10,0x20,0x22,0x22,0x22,0xE2,0x22,0x22,0x22,0x20,0x00,//标7
    288                  0x04,0x03,0x00,0xFF,0x00,0x13,0x0C,0x03,0x40,0x80,0x7F,0x00,0x01,0x06,0x18,0x00,
    289                  0x00,0xFE,0x02,0x22,0xDA,0x06,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,//队8
    290                  0x00,0xFF,0x08,0x10,0x88,0x47,0x20,0x18,0x07,0x00,0x07,0x18,0x20,0x40,0x80,0x00,
    291                  0x40,0x42,0xCC,0x00,0x00,0xFE,0x82,0x92,0x92,0xFE,0x92,0x92,0x82,0xFE,0x00,0x00,//调9
    292                  0x00,0x00,0x3F,0x10,0x88,0x7F,0x00,0x1E,0x12,0x12,0x12,0x5E,0x80,0x7F,0x00,0x00,
    293          	0x00,0x20,0x20,0xA8,0x6C,0x2A,0x39,0x28,0xA8,0x2A,0x6C,0xA8,0x20,0x20,0x00,0x00,//参10
    294                  0x02,0x82,0x81,0x90,0x92,0x4A,0x49,0x45,0x24,0x22,0x10,0x08,0x01,0x02,0x02,0x00,
    295                  0x10,0x60,0x02,0x8C,0x00,0xFE,0x02,0xF2,0x02,0xFE,0x00,0xF8,0x00,0xFF,0x00,0x00,//测11
    296                  0x04,0x04,0x7E,0x01,0x80,0x47,0x30,0x0F,0x10,0x27,0x00,0x47,0x80,0x7F,0x00,0x00,
    297          	0x40,0x40,0x42,0xCC,0x00,0x90,0x90,0x90,0x90,0x90,0xFF,0x10,0x11,0x16,0x10,0x00,//试12
    298          	0x00,0x00,0x00,0x3F,0x10,0x28,0x60,0x3F,0x10,0x10,0x01,0x0E,0x30,0x40,0xF0,0x00,
    299                  0x00,0xFE,0x02,0x42,0x22,0x32,0x5E,0x92,0x52,0x32,0x12,0x02,0x02,0xFE,0x00,0x00,//图13
    300                  0x00,0xFF,0x42,0x42,0x42,0x51,0x55,0x64,0x69,0x41,0x42,0x42,0x42,0xFF,0x00,0x00,
    301                  0x00,0x80,0x60,0xF8,0x17,0x08,0x7C,0x4B,0xCA,0x6A,0x5A,0x4E,0x48,0x78,0x00,0x00,//像14
    302                  0x01,0x00,0x00,0xFF,0x00,0x4A,0x4A,0x25,0x52,0x89,0x7E,0x04,0x1A,0x21,0x40,0x00,
    303                  0x48,0x28,0x98,0x0E,0x18,0xAA,0x48,0x00,0xFE,0x42,0x82,0x62,0xFE,0x00,0x00,0x00,//飙15
    304                  0x44,0x34,0x0F,0x95,0x64,0x1F,0xA5,0x64,0x1F,0x04,0x03,0x04,0x3F,0x40,0xF8,0x00,
    305                  0x00,0x08,0x88,0x48,0x28,0x18,0x0F,0xE8,0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x00,//车16
    306                  0x08,0x08,0x09,0x09,0x09,0x09,0x09,0xFF,0x09,0x09,0x09,0x09,0x09,0x08,0x08,0x00,
    307                  0x04,0xE4,0x24,0x34,0x2F,0xE4,0x04,0x44,0xC4,0x54,0x6F,0x44,0xC4,0x44,0x04,0x00,//薛17
    308                  0x00,0xFF,0x49,0x49,0x49,0xF9,0x02,0x12,0x12,0x13,0xFE,0x13,0x12,0x12,0x02,0x00,
    309                  0x20,0x20,0xFF,0x20,0x24,0xF4,0x54,0x54,0x54,0xFF,0x54,0x55,0x56,0xF4,0x04,0x00,//博18
    310                  0x00,0x00,0xFF,0x00,0x08,0x0B,0x19,0x69,0x09,0x0B,0x49,0x89,0x7D,0x0B,0x08,0x00,
    311                  0x00,0xFE,0x02,0x22,0xDA,0x06,0x00,0xFC,0x04,0x04,0x04,0x04,0x04,0xFC,0x00,0x00,//阳19
    312                  0x00,0xFF,0x08,0x10,0x08,0x07,0x00,0xFF,0x41,0x41,0x41,0x41,0x41,0xFF,0x00,0x00,
    313          };
    314          
    315          #define   OLED_NUM            4
    316          
    317          /**
    318           *  灯控制块
    319           */
    320          typedef struct oled_control_block
    321          {
    322              char  state;
    323              char  openflag;
    324              char  charrorflag;
    325          }OCB;
    326          

   \                                 In section .bss, align 4
    327          static OCB ocb_table[OLED_NUM];
   \                     ocb_table:
   \   00000000                      DS8 12
    328          

   \                                 In section .data, align 4
    329          GPIO_InitTypeDef gl_gpio_oled_sclk = {OLED_SCLK_PORT, OLED_SCLK_PIN, IRQC_DIS, DIR_OUTPUT, OUTPUT_L};
   \                     gl_gpio_oled_sclk:
   \   00000000   0x400FF100         DC32 400FF100H, 4096, 0
   \              0x00001000   
   \              0x00000000   
   \   0000000C   0x01 0x00          DC8 1, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .data, align 4
    330          GPIO_InitTypeDef gl_gpio_oled_sdin = {OLED_SDIN_PORT, OLED_SDIN_PIN, IRQC_DIS, DIR_OUTPUT, OUTPUT_L};
   \                     gl_gpio_oled_sdin:
   \   00000000   0x400FF100         DC32 400FF100H, 2048, 0
   \              0x00000800   
   \              0x00000000   
   \   0000000C   0x01 0x00          DC8 1, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .data, align 4
    331          GPIO_InitTypeDef gl_gpio_oled_dc   = {OLED_DC_PORT,   OLED_DC_PIN, IRQC_DIS, DIR_OUTPUT, OUTPUT_L};
   \                     gl_gpio_oled_dc:
   \   00000000   0x400FF100         DC32 400FF100H, 256, 0
   \              0x00000100   
   \              0x00000000   
   \   0000000C   0x01 0x00          DC8 1, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .data, align 4
    332          GPIO_InitTypeDef gl_gpio_oled_rst  = {OLED_RST_PORT,  OLED_RST_PIN, IRQC_DIS, DIR_OUTPUT, OUTPUT_L};
   \                     gl_gpio_oled_rst:
   \   00000000   0x400FF100         DC32 400FF100H, 512, 0
   \              0x00000200   
   \              0x00000000   
   \   0000000C   0x01 0x00          DC8 1, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    333          
    334          #define   INDEX_OLED(oled_no)    ((uint8)(oled_no))
    335          #define   get_lgcb(oled_no)      (&(ocb_table[INDEX_OLED(oled_no)]))
    336          
    337          #define   OLED_NO_GET(oledchar)    (oledchar & 0x0000ffff)
    338          #define   OLED_PORT_GET(oledchar)  (PORT_NO_GET(oledchar >> 16))
    339          #define   OLED_PIN_GET(oledchar)   (PIN_NO_GET(oledchar >> 16))
    340          
    341          #define   initSCLK_DDR()   (LPLD_GPIO_Init(gl_gpio_oled_sclk))
    342          #define   initSDIN_DDR()   (LPLD_GPIO_Init(gl_gpio_oled_sdin))
    343          #define   initDC_DDR()     (LPLD_GPIO_Init(gl_gpio_oled_dc))
    344          #define   initRST_DDR()    (LPLD_GPIO_Init(gl_gpio_oled_rst))
    345          
    346          #define   OLED_SCLK(x)          LPLD_GPIO_Output_b(OLED_SCLK_PORT,OLED_SCLK_NUM,(x))
    347          #define   OLED_SDIN(x)          LPLD_GPIO_Output_b(OLED_SDIN_PORT,OLED_SDIN_NUM,(x))
    348          #define   OLED_DC(x)            LPLD_GPIO_Output_b(OLED_DC_PORT,OLED_DC_NUM,(x))
    349          #define   OLED_RST(x)           LPLD_GPIO_Output_b(OLED_RST_PORT,OLED_RST_NUM,(x))
    350          
    351          //static char oled_open_port(char oledchar); //不知道干嘛的
    352          
    353          /**
    354           *    @brief   oled_pin_init
    355           */

   \                                 In section .text, align 2, keep-with-next
    356          void oled_pin_init(void)
    357          {
   \                     oled_pin_init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    358              uint8 i;
    359              OCB *p_lgcb;
    360          
    361              for (p_lgcb = ocb_table, i = 0; i < OLED_NUM; p_lgcb++, i++)
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable12
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0xE005             B.N      ??oled_pin_init_0
    362              {
    363                  p_lgcb->openflag  = false;
   \                     ??oled_pin_init_1: (+1)
   \   0000000A   0x2200             MOVS     R2,#+0
   \   0000000C   0x704A             STRB     R2,[R1, #+1]
    364                  p_lgcb->charrorflag = E_SYS;
   \   0000000E   0x2201             MOVS     R2,#+1
   \   00000010   0x708A             STRB     R2,[R1, #+2]
    365              }
   \   00000012   0x1CC9             ADDS     R1,R1,#+3
   \   00000014   0x1C40             ADDS     R0,R0,#+1
   \                     ??oled_pin_init_0: (+1)
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x2804             CMP      R0,#+4
   \   0000001A   0xDBF6             BLT.N    ??oled_pin_init_1
    366          
    367              /* 打开IO口 */
    368          
    369              initSCLK_DDR();
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   00000020   0xB084             SUB      SP,SP,#+16
   \   00000022   0x4668             MOV      R0,SP
   \   00000024   0x2214             MOVS     R2,#+20
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002A   0xBC0F             POP      {R0-R3}
   \   0000002C   0x.... 0x....      BL       LPLD_GPIO_Init
    370              OLED_SCLK(LOW);
   \   00000030   0x2200             MOVS     R2,#+0
   \   00000032   0x210C             MOVS     R1,#+12
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable12_2  ;; 0x400ff100
   \   00000038   0x.... 0x....      BL       LPLD_GPIO_Output_b
    371              initSDIN_DDR();
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable12_3
   \   00000040   0xB084             SUB      SP,SP,#+16
   \   00000042   0x4668             MOV      R0,SP
   \   00000044   0x2214             MOVS     R2,#+20
   \   00000046   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000004A   0xBC0F             POP      {R0-R3}
   \   0000004C   0x.... 0x....      BL       LPLD_GPIO_Init
    372              OLED_SDIN(LOW);
   \   00000050   0x2200             MOVS     R2,#+0
   \   00000052   0x210B             MOVS     R1,#+11
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable12_2  ;; 0x400ff100
   \   00000058   0x.... 0x....      BL       LPLD_GPIO_Output_b
    373              initDC_DDR();
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   00000060   0xB084             SUB      SP,SP,#+16
   \   00000062   0x4668             MOV      R0,SP
   \   00000064   0x2214             MOVS     R2,#+20
   \   00000066   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000006A   0xBC0F             POP      {R0-R3}
   \   0000006C   0x.... 0x....      BL       LPLD_GPIO_Init
    374              OLED_DC(LOW);
   \   00000070   0x2200             MOVS     R2,#+0
   \   00000072   0x2108             MOVS     R1,#+8
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable12_2  ;; 0x400ff100
   \   00000078   0x.... 0x....      BL       LPLD_GPIO_Output_b
    375              initRST_DDR();
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   00000080   0xB084             SUB      SP,SP,#+16
   \   00000082   0x4668             MOV      R0,SP
   \   00000084   0x2214             MOVS     R2,#+20
   \   00000086   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000008A   0xBC0F             POP      {R0-R3}
   \   0000008C   0x.... 0x....      BL       LPLD_GPIO_Init
    376              OLED_RST(LOW);
   \   00000090   0x2200             MOVS     R2,#+0
   \   00000092   0x2109             MOVS     R1,#+9
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable12_2  ;; 0x400ff100
   \   00000098   0x.... 0x....      BL       LPLD_GPIO_Output_b
    377          }
   \   0000009C   0xBD01             POP      {R0,PC}          ;; return
    378          
    379          
    380          
    381          
    382          /**
    383           *    @brief   打开light端口
    384           *
    385           *    @param   oledchar  灯的char号
    386           *
    387           *    @return  charcd 错误码
    388           */
    389          /*static char oled_open_port(char oledchar)
    390          {
    391              OCB *p_lgcb;
    392              char charcd = 0;
    393              char oled_no;
    394          
    395              oled_no = OLED_NO_GET(oledchar);
    396          
    397              if (!(0 <= oled_no && oled_no < OLED_NUM))
    398              {
    399                  return (E_char);
    400              }
    401              p_lgcb = get_lgcb(oled_no);
    402          
    403              if (p_lgcb->openflag)
    404              {
    405                  charcd = E_OBJ;
    406              }
    407              else
    408              {
    409                  gpio_init(OLED_PORT_GET(oledchar), OLED_PIN_GET(oledchar), OUT_PUT,
    410                          0);
    411          
    412                  p_lgcb->openflag = true;
    413                  p_lgcb->state = HIGH_POWchar;
    414          
    415                  charcd = E_OK;
    416              }
    417          
    418              return (charcd);
    419          }*/
    420          
    421          /**
    422           *    @brief   写一个字节数据
    423           *
    424           *    @param   uint8 uc_data
    425           */
    426          //低位在一竖的顶部 高位在底部

   \                                 In section .text, align 4, keep-with-next
    427          void oled_write_data(uint8 uc_data)
    428          {
   \                     oled_write_data: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    429              uint8 i = 8;
   \   00000004   0x2508             MOVS     R5,#+8
    430              //gpio_set(OLED_PORT_GET(OLED_DC),OLED_PIN_GET(OLED_DC),1);       //DC = 1,write data
    431              //gpio_set(OLED_PORT_GET(OLED_SCLK),OLED_PIN_GET(OLED_SCLK),0);
    432              OLED_DC(HIGH);
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x2108             MOVS     R1,#+8
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable12_2  ;; 0x400ff100
   \   0000000E   0x.... 0x....      BL       LPLD_GPIO_Output_b
    433              OLED_SCLK(LOW);
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0x210C             MOVS     R1,#+12
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable12_2  ;; 0x400ff100
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   0000001E   0xE013             B.N      ??oled_write_data_0
    434          
    435              while (i--)
    436              {
    437                  if (uc_data & 0x80)
    438                  {
    439                  	//gpio_set(OLED_PORT_GET(OLED_SDIN),OLED_PIN_GET(OLED_SDIN),1);
    440                  	OLED_SDIN(HIGH);
    441                  }
    442                  else
    443                  {
    444                  	//gpio_set(OLED_PORT_GET(OLED_SDIN),OLED_PIN_GET(OLED_SDIN),0);
    445                  	OLED_SDIN(LOW);
   \                     ??oled_write_data_1: (+1)
   \   00000020   0x2200             MOVS     R2,#+0
   \   00000022   0x210B             MOVS     R1,#+11
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable12_2  ;; 0x400ff100
   \   00000028   0x.... 0x....      BL       LPLD_GPIO_Output_b
    446                  }
    447                  /* 普通I/O口模拟时钟信号 */
    448                  //gpio_set(OLED_PORT_GET(OLED_SCLK),OLED_PIN_GET(OLED_SCLK),1);
    449                  OLED_SCLK(HIGH);
   \                     ??oled_write_data_2: (+1)
   \   0000002C   0x2201             MOVS     R2,#+1
   \   0000002E   0x210C             MOVS     R1,#+12
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable12_2  ;; 0x400ff100
   \   00000034   0x.... 0x....      BL       LPLD_GPIO_Output_b
    450                  asm("nop");
   \   00000038   0xBF00             nop
    451                  //gpio_set(OLED_PORT_GET(OLED_SCLK),OLED_PIN_GET(OLED_SCLK),0);
    452                  OLED_SCLK(LOW);
   \   0000003A   0x2200             MOVS     R2,#+0
   \   0000003C   0x210C             MOVS     R1,#+12
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable12_2  ;; 0x400ff100
   \   00000042   0x.... 0x....      BL       LPLD_GPIO_Output_b
    453          
    454                  uc_data <<= 1;
   \   00000046   0x0064             LSLS     R4,R4,#+1
   \                     ??oled_write_data_0: (+1)
   \   00000048   0x0028             MOVS     R0,R5
   \   0000004A   0x1E45             SUBS     R5,R0,#+1
   \   0000004C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD008             BEQ.N    ??oled_write_data_3
   \   00000052   0x0620             LSLS     R0,R4,#+24
   \   00000054   0xD5E4             BPL.N    ??oled_write_data_1
   \   00000056   0x2201             MOVS     R2,#+1
   \   00000058   0x210B             MOVS     R1,#+11
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable12_2  ;; 0x400ff100
   \   0000005E   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000062   0xE7E3             B.N      ??oled_write_data_2
    455              }
    456              return;
   \                     ??oled_write_data_3: (+1)
   \   00000064   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    457          }
    458          
    459          /**
    460           *    @brief   写一个字节命令
    461           *
    462           *    @param   uint8 uc_cmd
    463           */

   \                                 In section .text, align 4, keep-with-next
    464          void  oled_write_command(uint8 uc_cmd)
    465          {
   \                     oled_write_command: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    466              uint8 i = 8;
   \   00000004   0x2508             MOVS     R5,#+8
    467              //gpio_set(OLED_PORT_GET(OLED_DC),OLED_PIN_GET(OLED_DC),0);       //DC = 0,write command
    468              //gpio_set(OLED_PORT_GET(OLED_SCLK),OLED_PIN_GET(OLED_SCLK),0);
    469              OLED_DC(LOW);
   \   00000006   0x2200             MOVS     R2,#+0
   \   00000008   0x2108             MOVS     R1,#+8
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable12_2  ;; 0x400ff100
   \   0000000E   0x.... 0x....      BL       LPLD_GPIO_Output_b
    470              OLED_SCLK(LOW);
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0x210C             MOVS     R1,#+12
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable12_2  ;; 0x400ff100
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   0000001E   0xE013             B.N      ??oled_write_command_0
    471          
    472              while (i--)
    473              {
    474                  if (uc_cmd & 0x80)
    475                  {
    476                  	//gpio_set(OLED_PORT_GET(OLED_SDIN),OLED_PIN_GET(OLED_SDIN),1);
    477                      OLED_SDIN(HIGH);
    478                  }
    479                  else
    480                  {
    481                  	//gpio_set(OLED_PORT_GET(OLED_SDIN),OLED_PIN_GET(OLED_SDIN),0);
    482                      OLED_SDIN(LOW);
   \                     ??oled_write_command_1: (+1)
   \   00000020   0x2200             MOVS     R2,#+0
   \   00000022   0x210B             MOVS     R1,#+11
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable12_2  ;; 0x400ff100
   \   00000028   0x.... 0x....      BL       LPLD_GPIO_Output_b
    483                  }
    484                  /* 普通I/O口模拟时钟信号 */
    485                  //gpio_set(OLED_PORT_GET(OLED_SCLK),OLED_PIN_GET(OLED_SCLK),1);
    486                  OLED_SCLK(HIGH);
   \                     ??oled_write_command_2: (+1)
   \   0000002C   0x2201             MOVS     R2,#+1
   \   0000002E   0x210C             MOVS     R1,#+12
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable12_2  ;; 0x400ff100
   \   00000034   0x.... 0x....      BL       LPLD_GPIO_Output_b
    487                  asm("nop");
   \   00000038   0xBF00             nop
    488                  //gpio_set(OLED_PORT_GET(OLED_SCLK),OLED_PIN_GET(OLED_SCLK),0);
    489                  OLED_SCLK(LOW);
   \   0000003A   0x2200             MOVS     R2,#+0
   \   0000003C   0x210C             MOVS     R1,#+12
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable12_2  ;; 0x400ff100
   \   00000042   0x.... 0x....      BL       LPLD_GPIO_Output_b
    490                  uc_cmd <<= 1;
   \   00000046   0x0064             LSLS     R4,R4,#+1
   \                     ??oled_write_command_0: (+1)
   \   00000048   0x0028             MOVS     R0,R5
   \   0000004A   0x1E45             SUBS     R5,R0,#+1
   \   0000004C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD008             BEQ.N    ??oled_write_command_3
   \   00000052   0x0620             LSLS     R0,R4,#+24
   \   00000054   0xD5E4             BPL.N    ??oled_write_command_1
   \   00000056   0x2201             MOVS     R2,#+1
   \   00000058   0x210B             MOVS     R1,#+11
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable12_2  ;; 0x400ff100
   \   0000005E   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000062   0xE7E3             B.N      ??oled_write_command_2
    491              }
    492              return;
   \                     ??oled_write_command_3: (+1)
   \   00000064   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    493          }
    494          
    495          
    496          /**
    497           *  @ brief   oled_set_pos
    498           *
    499           *  @ param   uc_posx   列
    500           *            uc_posy   页
    501           *
    502           *	@ note    设置坐标
    503           *
    504           *	@ return  none
    505           */

   \                                 In section .text, align 2, keep-with-next
    506          void oled_set_pos(uint8 uc_posx, uint8 uc_posy)
    507          {
   \                     oled_set_pos: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    508              oled_write_command(0xb0 + uc_posy);
   \   00000004   0xF1B1 0x0050      SUBS     R0,R1,#+80
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x.... 0x....      BL       oled_write_command
    509              oled_write_command(((uc_posx & 0xf0) >> 4) | 0x10);
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x0900             LSRS     R0,R0,#+4
   \   00000014   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x.... 0x....      BL       oled_write_command
    510              oled_write_command((uc_posx & 0x0f) | 0x00);
   \   0000001E   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000022   0x.... 0x....      BL       oled_write_command
    511          }
   \   00000026   0xBD10             POP      {R4,PC}          ;; return
    512          
    513          
    514          /**
    515           *  @ brief   SetStartColumn
    516           *
    517           *  @ param   a     起始列地址
    518           *            b     起始行地址
    519           *
    520           *	@ note    对于 page Addressing Mode  设定开始的列
    521           *	          每一页有128列，开始列=16*Highchar Column + Lowchar Column
    522           *
    523           *	@ return  none
    524           */

   \                                 In section .text, align 2, keep-with-next
    525          void SetStartColumn(uint8 uc_data)
    526          {
   \                     SetStartColumn: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    527              oled_write_command(0x00+uc_data % 16);   // Set Lowchar Column Start Address for Page Addressing Mode
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x2010             MOVS     R0,#+16
   \   00000008   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   0000000C   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x.... 0x....      BL       oled_write_command
    528                                                       // Default => 0x00
    529              oled_write_command(0x10+uc_data / 16);   // Set Highchar Column Start Address for Page Addressing Mode
   \   00000016   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000018   0x2010             MOVS     R0,#+16
   \   0000001A   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   0000001E   0x3010             ADDS     R0,R0,#+16
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x.... 0x....      BL       oled_write_command
    530                                                       // Default => 0x10
    531          }
   \   00000026   0xBD10             POP      {R4,PC}          ;; return
    532          
    533          /**
    534           *  @ brief   SetColumnAddress
    535           *
    536           *  @ param   a     起始列地址
    537           *            b     起始行地址
    538           *
    539           *	@ note    对于Horizontal Addressing Mode 设置起始列地址与结束列地址
    540           *	          Set Column Address
    541           *	          Default => 0x00 (Column Start Address)
    542           *	          Default => 0x7F (Column End Address)
    543           *
    544           *	@ return  none
    545           */

   \                                 In section .text, align 2, keep-with-next
    546          void SetColumnAddress(uint8 a, uint8 b)
    547          {
   \                     SetColumnAddress: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    548              oled_write_command(0x21);        	   // Set Column Address
   \   00000006   0x2021             MOVS     R0,#+33
   \   00000008   0x.... 0x....      BL       oled_write_command
    549              oled_write_command(a);           	   // Default => 0x00 (Column Start Address)
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x.... 0x....      BL       oled_write_command
    550              oled_write_command(b);           	   // Default => 0x7F (Column End Address)
   \   00000014   0x0028             MOVS     R0,R5
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       oled_write_command
    551          }
   \   0000001C   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    552          
    553          /**
    554           *  @ brief   SetPageAddress
    555           *
    556           *  @ param   a     起始页地址
    557           *            b     起始页地址
    558           *
    559           *	@ note    对于Vchartical Addressing Mode 设置起始页地址与结束页地址
    560           *	          Set Page Address
    561           *	          Default => 0xB0 (0x00)
    562           *	          Default => 0x07 (Page End Address)
    563           *
    564           *	@ return  none
    565           */

   \                                 In section .text, align 2, keep-with-next
    566          void SetPageAddress(uint8 a, uint8 b)
    567          {
   \                     SetPageAddress: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    568              oled_write_command(0x22);
   \   00000006   0x2022             MOVS     R0,#+34
   \   00000008   0x.... 0x....      BL       oled_write_command
    569              oled_write_command(a);
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x.... 0x....      BL       oled_write_command
    570              oled_write_command(b);
   \   00000014   0x0028             MOVS     R0,R5
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       oled_write_command
    571          }
   \   0000001C   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    572          
    573          /**
    574           *  @ brief   SetNop
    575           *
    576           *  @ param   uc_data
    577           *
    578           *	@ note    Set Page Start Address for Page Addressing Mode
    579           *	          Default => 0xB0 (0x00)
    580           *
    581           *	@ return  none
    582           */

   \                                 In section .text, align 2, keep-with-next
    583          void SetStartPage(uint8 uc_data)
    584          {
   \                     SetStartPage: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    585              oled_write_command(0xB0|uc_data);
   \   00000002   0xF050 0x00B0      ORRS     R0,R0,#0xB0
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       oled_write_command
    586          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    587          
    588          /**
    589           *  @ brief   SetNop
    590           *
    591           *  @ param   none
    592           *
    593           *	@ note    Command for No Opcharation
    594           *
    595           *	@ return  none
    596           */

   \                                 In section .text, align 2, keep-with-next
    597          void SetNop(void)
    598          {
   \                     SetNop: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    599              oled_write_command(0xE3);
   \   00000002   0x20E3             MOVS     R0,#+227
   \   00000004   0x.... 0x....      BL       oled_write_command
    600          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
    601          
    602          
    603          /**
    604           *  @ brief   SetInvcharseDisplay
    605           *
    606           *  @ param   uc_data
    607           *
    608           *	@ note    全屏写入同一个字符 清屏
    609           *
    610           *	@ return  none
    611           */

   \                                 In section .text, align 2, keep-with-next
    612          void oled_fill(char uc_data)
    613          {
   \                     oled_fill: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    614              uint8 uc_page,uc_column;
    615          
    616              for(uc_page = 0; uc_page < 8; uc_page++)
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0xE008             B.N      ??oled_fill_0
    617              {
    618                  for(uc_column = 0; uc_column < 128; uc_column++)
    619                  {
    620                      oled_write_data(uc_data);
   \                     ??oled_fill_1: (+1)
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      BL       oled_write_data
    621                  }
   \   00000010   0x1C76             ADDS     R6,R6,#+1
   \                     ??oled_fill_2: (+1)
   \   00000012   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000014   0x2E80             CMP      R6,#+128
   \   00000016   0xDBF7             BLT.N    ??oled_fill_1
   \   00000018   0x1C6D             ADDS     R5,R5,#+1
   \                     ??oled_fill_0: (+1)
   \   0000001A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001C   0x2D08             CMP      R5,#+8
   \   0000001E   0xDA01             BGE.N    ??oled_fill_3
   \   00000020   0x2600             MOVS     R6,#+0
   \   00000022   0xE7F6             B.N      ??oled_fill_2
    622              }
    623          }
   \                     ??oled_fill_3: (+1)
   \   00000024   0xBD70             POP      {R4-R6,PC}       ;; return
    624          
    625          /**
    626           *  @ brief   SetInvcharseDisplay
    627           *
    628           *  @ param   uc_data
    629           *
    630           *	@ note    Set Invcharse Display On/Off
    631           *	          Default => 0xA6
    632           *	          0xA6 (0x00) => Normal Display
    633           *	          0xA7 (0x01) => Invcharse Display On
    634           *
    635           *	@ return  none
    636           */

   \                                 In section .text, align 2, keep-with-next
    637          void SetInvcharseDisplay(uint8 uc_data)
    638          {
   \                     SetInvcharseDisplay: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    639              oled_write_command(0xA6|uc_data);
   \   00000002   0xF050 0x00A6      ORRS     R0,R0,#0xA6
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       oled_write_command
    640          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    641          
    642          /**
    643           *  @ brief   SetEntireDisplay
    644           *
    645           *  @ param   uc_data
    646           *
    647           *	@ note    Set Entire Display On / Off
    648           *	          Default => 0xA4
    649           *	          0xA4 (0x00) => Normal Display
    650           *	          0xA5 (0x01) => Entire Display On
    651           *
    652           *	@ return  none
    653           */

   \                                 In section .text, align 2, keep-with-next
    654          void SetEntireDisplay(uint8 uc_data)
    655          {
   \                     SetEntireDisplay: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    656              oled_write_command(0xA4|uc_data);
   \   00000002   0xF050 0x00A4      ORRS     R0,R0,#0xA4
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       oled_write_command
    657          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    658          
    659          /**
    660           *  @ brief   SetVCOMH
    661           *
    662           *  @ param   uc_data
    663           *
    664           *	@ note    Set VCOMH Deselect Level
    665           *	          Default => 0x20 (0.77*VCC)
    666           *
    667           *	@ return  none
    668           */

   \                                 In section .text, align 2, keep-with-next
    669          void SetVCOMH(uint8 uc_data)
    670          {
   \                     SetVCOMH: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    671              oled_write_command(0xDB);         // Set VCOMH Deselect Level
   \   00000004   0x20DB             MOVS     R0,#+219
   \   00000006   0x.... 0x....      BL       oled_write_command
    672              oled_write_command(uc_data);      // Default => 0x20 (0.77*VCC)
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       oled_write_command
    673          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    674          
    675          /**
    676           *  @ brief   SetPrechargePchariod
    677           *
    678           *  @ param   uc_data
    679           *
    680           *	@ note    Set Pre-Charge Pchariod
    681           *	          Default => 0x22 (2 Display Clocks [Phase 2] / 2 Display Clocks [Phase 1])
    682           *	          D[3:0] => Phase 1 Pchariod in 1~15 Display Clocks
    683           *	          D[7:4] => Phase 2 Pchariod in 1~15 Display Clocks
    684           *
    685           *	@ return  none
    686           */

   \                                 In section .text, align 2, keep-with-next
    687          void SetPrechargePchariod(uint8 uc_data)
    688          {
   \                     SetPrechargePchariod: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    689              oled_write_command(0xD9);
   \   00000004   0x20D9             MOVS     R0,#+217
   \   00000006   0x.... 0x....      BL       oled_write_command
    690              oled_write_command(uc_data);
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       oled_write_command
    691          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    692          
    693          /**
    694           *  @ brief   SetContrastControl
    695           *
    696           *  @ param   uc_data
    697           *
    698           *	@ note    Set Contrast Control
    699           *	          Default => 0x7F
    700           *
    701           *	@ return  none
    702           */

   \                                 In section .text, align 2, keep-with-next
    703          void SetContrastControl(uint8 uc_data)
    704          {
   \                     SetContrastControl: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    705              oled_write_command(0x81);
   \   00000004   0x2081             MOVS     R0,#+129
   \   00000006   0x.... 0x....      BL       oled_write_command
    706              oled_write_command(uc_data);
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       oled_write_command
    707          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    708          
    709          /**
    710           *  @ brief   SetCommonConfig
    711           *
    712           *  @ param   uc_data
    713           *
    714           *	@ note    Set COM Pins Hardware Configuration
    715           *	          Default => 0x12 (0x10)
    716           *	          Altcharnative COM Pin Configuration
    717           *	          Disable COM Left/Right Re-Map
    718           *
    719           *	@ return  none
    720           */

   \                                 In section .text, align 2, keep-with-next
    721          void SetCommonConfig(uint8 uc_data)
    722          {
   \                     SetCommonConfig: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    723              oled_write_command(0xDA);
   \   00000004   0x20DA             MOVS     R0,#+218
   \   00000006   0x.... 0x....      BL       oled_write_command
    724              oled_write_command(0x02|uc_data);
   \   0000000A   0xF054 0x0002      ORRS     R0,R4,#0x2
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x.... 0x....      BL       oled_write_command
    725          }
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
    726          
    727          /**
    728           *  @ brief   SetCommonRemap
    729           *
    730           *  @ param   uc_data
    731           *
    732           *	@ note    Set COM Output Scan Direction
    733           *	          Default => 0xC0
    734           *	          0xC0 (0x00) => Scan from COM0  to 63
    735           *	          0xC8 (0x08) => Scan from COM63 to 0
    736           *
    737           *	@ return  none
    738           */

   \                                 In section .text, align 2, keep-with-next
    739          void SetCommonRemap(uint8 uc_data)
    740          {
   \                     SetCommonRemap: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    741              oled_write_command(0xC0|uc_data);
   \   00000002   0xF050 0x00C0      ORRS     R0,R0,#0xC0
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       oled_write_command
    742          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    743          
    744          /**
    745           *  @ brief   SetSegmentRemap
    746           *
    747           *  @ param   uc_data
    748           *
    749           *	@ note    Set Segment Re-Map
    750           *	          Default => 0xA0
    751           *	          0xA0 (0x00) => Column Address 0 Mapped to SEG0
    752           *	          0xA1 (0x01) => Column Address 0 Mapped to SEG127
    753           *
    754           *	@ return  none
    755           */

   \                                 In section .text, align 2, keep-with-next
    756          void SetSegmentRemap(uint8 uc_data)
    757          {
   \                     SetSegmentRemap: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    758              oled_write_command(0xA0|uc_data);
   \   00000002   0xF050 0x00A0      ORRS     R0,R0,#0xA0
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       oled_write_command
    759          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    760          
    761          /**
    762           *  @ brief   SetAddressingMode
    763           *
    764           *  @ param   uc_data
    765           *
    766           *	@ note    Set Memory Addressing Mode
    767           *	          0x00 => Horizontal Addressing Mode
    768           *	          0x01 => Vchartical Addressing Mode
    769           *	          0x02 => Page Addressing Mode
    770           *
    771           *	@ return  none
    772           */

   \                                 In section .text, align 2, keep-with-next
    773          void SetAddressingMode(uint8 uc_data)
    774          {
   \                     SetAddressingMode: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    775              oled_write_command(0x20);
   \   00000004   0x2020             MOVS     R0,#+32
   \   00000006   0x.... 0x....      BL       oled_write_command
    776              oled_write_command(uc_data);
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       oled_write_command
    777          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    778          
    779          /**
    780           *  @ brief   SetChargePump
    781           *
    782           *  @ param   uc_data
    783           *
    784           *	@ note    Set Charge Pump
    785           *	          0x10 (0x00) => Disable Charge Pump
    786           *	          0x14 (0x04) => Enable Charge Pump
    787           *
    788           *	@ return  none
    789           */

   \                                 In section .text, align 2, keep-with-next
    790          void SetChargePump(uint8 uc_data)
    791          {
   \                     SetChargePump: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    792              oled_write_command(0x8D);
   \   00000004   0x208D             MOVS     R0,#+141
   \   00000006   0x.... 0x....      BL       oled_write_command
    793              oled_write_command(0x10|uc_data);
   \   0000000A   0xF054 0x0010      ORRS     R0,R4,#0x10
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x.... 0x....      BL       oled_write_command
    794          }
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
    795          
    796          /**
    797           *  @ brief   SetStartLine
    798           *
    799           *  @ param   uc_data
    800           *
    801           *	@ note    Set Display Start Line
    802           *	          Default => 0x40 (0x00)
    803           *
    804           *	@ return  none
    805           */

   \                                 In section .text, align 2, keep-with-next
    806          void SetStartLine(uint8 uc_data)
    807          {
   \                     SetStartLine: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    808              oled_write_command(0x40|uc_data);
   \   00000002   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       oled_write_command
    809          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    810          
    811          /**
    812           *  @ brief   SetDisplayOffset
    813           *
    814           *  @ param   uc_data
    815           *
    816           *	@ note    Set Display Offset
    817           *	          Default => 0x00
    818           *
    819           *	@ return  none
    820           */

   \                                 In section .text, align 2, keep-with-next
    821          void SetDisplayOffset(uint8 uc_data)
    822          {
   \                     SetDisplayOffset: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    823              oled_write_command(0xD3);
   \   00000004   0x20D3             MOVS     R0,#+211
   \   00000006   0x.... 0x....      BL       oled_write_command
    824              oled_write_command(uc_data);
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       oled_write_command
    825          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    826          
    827          /**
    828           *  @ brief   SetMultiplexRatio
    829           *
    830           *  @ param   uc_data
    831           *
    832           *	@ note    Set Multiplex Ratio
    833           *	          Default => 0x3F (1/64 Duty)
    834           *
    835           *	@ return  none
    836           */

   \                                 In section .text, align 2, keep-with-next
    837          void SetMultiplexRatio(uint8 uc_data)
    838          {
   \                     SetMultiplexRatio: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    839              oled_write_command(0xA8);
   \   00000004   0x20A8             MOVS     R0,#+168
   \   00000006   0x.... 0x....      BL       oled_write_command
    840              oled_write_command(uc_data);
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       oled_write_command
    841          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    842          
    843          /**
    844           *  @ brief   SetDisplayClock
    845           *
    846           *  @ param   uc_data
    847           *
    848           *	@ note    Set Display Clock Divchare Ratio / Oscillator Frequency
    849           *	          D[3:0] => Display Clock Divcharchar
    850                        D[7:4] => Oscillator Frequency
    851           *
    852           *	@ return  none
    853           */

   \                                 In section .text, align 2, keep-with-next
    854          void SetDisplayClock(uint8 uc_data)
    855          {
   \                     SetDisplayClock: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    856              oled_write_command(0xD5);
   \   00000004   0x20D5             MOVS     R0,#+213
   \   00000006   0x.... 0x....      BL       oled_write_command
    857              oled_write_command(uc_data);
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       oled_write_command
    858          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    859          
    860          /**
    861           *  @ brief   SetDisplayOnOff
    862           *
    863           *  @ param   uc_data
    864           *
    865           *	@ note    Set Display On/Off
    866           *	          0xAE (0x00) => Display Off  Default
    867                        0xAF (0x01) => Display On
    868           *
    869           *	@ return  none
    870           */

   \                                 In section .text, align 2, keep-with-next
    871          void SetDisplayOnOff(uint8 uc_data)
    872          {
   \                     SetDisplayOnOff: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    873              oled_write_command(0xAE|uc_data);
   \   00000002   0xF050 0x00AE      ORRS     R0,R0,#0xAE
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       oled_write_command
    874          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    875          
    876          
    877          /**
    878           *  @ brief   oled_display_6x8char
    879           *
    880           *  @ param   uint8 uc_posx  显示的横坐标0~122
    881           * 			  uint8 uc_posy  页范围0～7
    882           *    		  uint8 uc_data  显示的字符
    883           *
    884           *	@ note    display a charactchar
    885           *
    886           *	@ return  none
    887           */

   \                                 In section .text, align 2, keep-with-next
    888          void oled_display_6x8char(uint8 uc_posx, uint8 uc_posy, char uc_data)
    889          {
   \                     oled_display_6x8char: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0014             MOVS     R4,R2
    890              uint8 i, uc_dataTmp;
    891          
    892              uc_dataTmp = uc_data;
    893              if(uc_posx > 122)
   \   00000004   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000006   0x287B             CMP      R0,#+123
   \   00000008   0xDB01             BLT.N    ??oled_display_6x8char_0
    894              {
    895                  uc_posx = 0;
   \   0000000A   0x2000             MOVS     R0,#+0
    896                  uc_posy ++;
   \   0000000C   0x1C49             ADDS     R1,R1,#+1
    897              }
    898          
    899              oled_set_pos(uc_posx, uc_posy);
   \                     ??oled_display_6x8char_0: (+1)
   \   0000000E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x.... 0x....      BL       oled_set_pos
    900          
    901              for(i = 0; i < 6; i++)
   \   00000016   0x2500             MOVS     R5,#+0
   \   00000018   0xE00B             B.N      ??oled_display_6x8char_1
    902              {
    903                  oled_write_data(F6x8[uc_dataTmp][i]);
   \                     ??oled_display_6x8char_2: (+1)
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable14
   \   0000001E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000020   0x2106             MOVS     R1,#+6
   \   00000022   0xFB01 0xF104      MUL      R1,R1,R4
   \   00000026   0x4408             ADD      R0,R0,R1
   \   00000028   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002A   0x5D40             LDRB     R0,[R0, R5]
   \   0000002C   0x.... 0x....      BL       oled_write_data
    904              }
   \   00000030   0x1C6D             ADDS     R5,R5,#+1
   \                     ??oled_display_6x8char_1: (+1)
   \   00000032   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000034   0x2D06             CMP      R5,#+6
   \   00000036   0xDBF0             BLT.N    ??oled_display_6x8char_2
    905          }
   \   00000038   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    906          

   \                                 In section .text, align 2, keep-with-next
    907          void oled_display_16x8char(uint8 uc_posx, uint8 uc_posy, char uc_data)
    908          {
   \                     oled_display_16x8char: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000F             MOVS     R7,R1
   \   00000006   0x0015             MOVS     R5,R2
    909          	uint8 i, uc_dataTmp;
    910          
    911              uc_dataTmp = uc_data;
    912              if(uc_posx > 122)
   \   00000008   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000000A   0x2E7B             CMP      R6,#+123
   \   0000000C   0xDB01             BLT.N    ??oled_display_16x8char_0
    913              {
    914                  uc_posx = 0;
   \   0000000E   0x2600             MOVS     R6,#+0
    915                  uc_posy ++;
   \   00000010   0x1C7F             ADDS     R7,R7,#+1
    916              }
    917          
    918              oled_set_pos(uc_posx, uc_posy);
   \                     ??oled_display_16x8char_0: (+1)
   \   00000012   0x0039             MOVS     R1,R7
   \   00000014   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000016   0x0030             MOVS     R0,R6
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x.... 0x....      BL       oled_set_pos
    919          
    920              for(i = 0; i < 8; i++)
   \   0000001E   0x2400             MOVS     R4,#+0
   \   00000020   0xE009             B.N      ??oled_display_16x8char_1
    921              {
    922                  oled_write_data(OLED_ASCII16X8[uc_dataTmp][i]);
   \                     ??oled_display_16x8char_2: (+1)
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable14_1
   \   00000026   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000028   0x0129             LSLS     R1,R5,#+4
   \   0000002A   0x4408             ADD      R0,R0,R1
   \   0000002C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002E   0x5D00             LDRB     R0,[R0, R4]
   \   00000030   0x.... 0x....      BL       oled_write_data
    923              }
   \   00000034   0x1C64             ADDS     R4,R4,#+1
   \                     ??oled_display_16x8char_1: (+1)
   \   00000036   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000038   0x2C08             CMP      R4,#+8
   \   0000003A   0xDBF2             BLT.N    ??oled_display_16x8char_2
    924          
    925          	oled_set_pos(uc_posx, uc_posy+1);
   \   0000003C   0x1C79             ADDS     R1,R7,#+1
   \   0000003E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000040   0x0030             MOVS     R0,R6
   \   00000042   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000044   0x.... 0x....      BL       oled_set_pos
    926          
    927              for(i = 8; i < 16; i++)
   \   00000048   0x2408             MOVS     R4,#+8
   \   0000004A   0xE009             B.N      ??oled_display_16x8char_3
    928              {
    929                  oled_write_data(OLED_ASCII16X8[uc_dataTmp][i]);
   \                     ??oled_display_16x8char_4: (+1)
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable14_1
   \   00000050   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000052   0x0129             LSLS     R1,R5,#+4
   \   00000054   0x4408             ADD      R0,R0,R1
   \   00000056   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000058   0x5D00             LDRB     R0,[R0, R4]
   \   0000005A   0x.... 0x....      BL       oled_write_data
    930              }
   \   0000005E   0x1C64             ADDS     R4,R4,#+1
   \                     ??oled_display_16x8char_3: (+1)
   \   00000060   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000062   0x2C10             CMP      R4,#+16
   \   00000064   0xDBF2             BLT.N    ??oled_display_16x8char_4
    931          }
   \   00000066   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    932          

   \                                 In section .text, align 2, keep-with-next
    933          void oled_display_16x8char_hl(uint8 uc_posx, uint8 uc_posy, char uc_data)
    934          {
   \                     oled_display_16x8char_hl: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0017             MOVS     R7,R2
    935              uint8 i, uc_dataTmp;
    936          
    937              uc_dataTmp = uc_data;
    938              if(uc_posx > 122)
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0x2C7B             CMP      R4,#+123
   \   0000000C   0xDB01             BLT.N    ??oled_display_16x8char_hl_0
    939              {
    940                  uc_posx = 0;
   \   0000000E   0x2400             MOVS     R4,#+0
    941                  uc_posy ++;
   \   00000010   0x1C6D             ADDS     R5,R5,#+1
    942              }
    943          
    944              oled_set_pos(uc_posx, uc_posy);
   \                     ??oled_display_16x8char_hl_0: (+1)
   \   00000012   0x0029             MOVS     R1,R5
   \   00000014   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x.... 0x....      BL       oled_set_pos
    945          
    946              for(i = 0; i < 8; i++)
   \   0000001E   0x2600             MOVS     R6,#+0
   \   00000020   0xE00B             B.N      ??oled_display_16x8char_hl_1
    947              {
    948                  oled_write_data(~OLED_ASCII16X8[uc_dataTmp][i]);
   \                     ??oled_display_16x8char_hl_2: (+1)
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable14_1
   \   00000026   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000028   0x0139             LSLS     R1,R7,#+4
   \   0000002A   0x4408             ADD      R0,R0,R1
   \   0000002C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002E   0x5D80             LDRB     R0,[R0, R6]
   \   00000030   0x43C0             MVNS     R0,R0
   \   00000032   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000034   0x.... 0x....      BL       oled_write_data
    949              }
   \   00000038   0x1C76             ADDS     R6,R6,#+1
   \                     ??oled_display_16x8char_hl_1: (+1)
   \   0000003A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000003C   0x2E08             CMP      R6,#+8
   \   0000003E   0xDBF0             BLT.N    ??oled_display_16x8char_hl_2
    950          
    951          	oled_set_pos(uc_posx, uc_posy+1);
   \   00000040   0x1C69             ADDS     R1,R5,#+1
   \   00000042   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000048   0x.... 0x....      BL       oled_set_pos
    952          
    953              for(i = 8; i < 16; i++)
   \   0000004C   0x2608             MOVS     R6,#+8
   \   0000004E   0xE00B             B.N      ??oled_display_16x8char_hl_3
    954              {
    955                  oled_write_data(~OLED_ASCII16X8[uc_dataTmp][i]);
   \                     ??oled_display_16x8char_hl_4: (+1)
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable14_1
   \   00000054   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000056   0x0139             LSLS     R1,R7,#+4
   \   00000058   0x4408             ADD      R0,R0,R1
   \   0000005A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000005C   0x5D80             LDRB     R0,[R0, R6]
   \   0000005E   0x43C0             MVNS     R0,R0
   \   00000060   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000062   0x.... 0x....      BL       oled_write_data
    956              }
   \   00000066   0x1C76             ADDS     R6,R6,#+1
   \                     ??oled_display_16x8char_hl_3: (+1)
   \   00000068   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000006A   0x2E10             CMP      R6,#+16
   \   0000006C   0xDBF0             BLT.N    ??oled_display_16x8char_hl_4
    957          }
   \   0000006E   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    958          /**
    959           *  @ brief   oled_display_6x8str
    960           *
    961           *  @ param   uint8 uc_posx       显示的横坐标0~122
    962           *			  uint8 uc_posy       页范围0～7
    963           *    		  uint8 uc_dataStr[]  显示的字符串
    964           *
    965           *	@ note    display a string
    966           *
    967           *	@ return  none
    968           */

   \                                 In section .text, align 2, keep-with-next
    969          void oled_display_6x8str(uint8 uc_posx, uint8 uc_posy, char uc_dataStr[])
    970          {
   \                     oled_display_6x8str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    971              uint8 i, j, uc_dataTmp;
    972          
    973              //保证图像处理优先级
    974              if ((guc_camera_image_Ok == 1))// && (g_carInfo.u8SlaveComFlag == 0))
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable14_2
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0x2801             CMP      R0,#+1
   \   00000012   0xD02D             BEQ.N    ??oled_display_6x8str_0
    975              {
    976                  return;
    977              }
    978              
    979              for (j = 0; uc_dataStr[j] != '\0'; j++)
   \                     ??oled_display_6x8str_1: (+1)
   \   00000014   0x2700             MOVS     R7,#+0
   \   00000016   0xE016             B.N      ??oled_display_6x8str_2
    980              {
    981                  uc_dataTmp = uc_dataStr[j];
    982          
    983                  if(uc_posx > 122)
    984                  {
    985                      uc_posx = 0;
    986                      uc_posy++;
    987                  }
    988          
    989                  oled_set_pos(uc_posx,uc_posy);
    990          
    991                  for(i = 0; i < 6; i++)
    992                  {
    993                      oled_write_data(F6x8[uc_dataTmp][i]);
   \                     ??oled_display_6x8str_3: (+1)
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable14
   \   0000001C   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000020   0x2106             MOVS     R1,#+6
   \   00000022   0xFB01 0xF109      MUL      R1,R1,R9
   \   00000026   0x4408             ADD      R0,R0,R1
   \   00000028   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000002C   0xF810 0x0008      LDRB     R0,[R0, R8]
   \   00000030   0x.... 0x....      BL       oled_write_data
    994                  }
   \   00000034   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??oled_display_6x8str_4: (+1)
   \   00000038   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000003C   0xF1B8 0x0F06      CMP      R8,#+6
   \   00000040   0xDBEA             BLT.N    ??oled_display_6x8str_3
    995          
    996                  uc_posx += 6;
   \   00000042   0x1DA4             ADDS     R4,R4,#+6
   \   00000044   0x1C7F             ADDS     R7,R7,#+1
   \                     ??oled_display_6x8str_2: (+1)
   \   00000046   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000048   0x5DF0             LDRB     R0,[R6, R7]
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD010             BEQ.N    ??oled_display_6x8str_5
   \   0000004E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000050   0xF816 0x9007      LDRB     R9,[R6, R7]
   \   00000054   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000056   0x2C7B             CMP      R4,#+123
   \   00000058   0xDB01             BLT.N    ??oled_display_6x8str_6
   \   0000005A   0x2400             MOVS     R4,#+0
   \   0000005C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??oled_display_6x8str_6: (+1)
   \   0000005E   0x0029             MOVS     R1,R5
   \   00000060   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000062   0x0020             MOVS     R0,R4
   \   00000064   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000066   0x.... 0x....      BL       oled_set_pos
   \   0000006A   0xF05F 0x0800      MOVS     R8,#+0
   \   0000006E   0xE7E3             B.N      ??oled_display_6x8str_4
    997              }
    998          
    999              return;
   \                     ??oled_display_6x8str_5: (+1)
   \                     ??oled_display_6x8str_0: (+1)
   \   00000070   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
   1000          }
   1001          
   1002          /****************
   1003           * 显示16x8的字符串
   1004           *****************/

   \                                 In section .text, align 2, keep-with-next
   1005          void oled_display_16x8str(uint8 uc_posx, uint8 uc_posy, char uc_dataStr[])
   1006          {
   \                     oled_display_16x8str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   1007              uint8 i, j, uc_dataTmp;
   1008          
   1009              for (j = 0; uc_dataStr[j] != '\0'; j++)
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xE015             B.N      ??oled_display_16x8str_0
   1010              {
   1011                  uc_dataTmp = uc_dataStr[j];
   1012          
   1013                  if(uc_posx > 120)
   1014                  {
   1015                      uc_posx = 0;
   1016                      uc_posy+=2;
   1017                  }
   1018          
   1019                  oled_set_pos(uc_posx,uc_posy);
   1020          
   1021                  for(i = 0; i < 8; i++)
   1022                  {
   1023                      oled_write_data(OLED_ASCII16X8[uc_dataTmp][i]);
   1024                  }
   1025          
   1026          		oled_set_pos(uc_posx,uc_posy+1);
   1027          
   1028                  for(i = 8; i < 16; i++)
   1029                  {
   1030                      oled_write_data(OLED_ASCII16X8[uc_dataTmp][i]);
   \                     ??oled_display_16x8str_1: (+1)
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable14_1
   \   00000012   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000016   0xEA5F 0x1109      LSLS     R1,R9,#+4
   \   0000001A   0x4408             ADD      R0,R0,R1
   \   0000001C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000020   0xF810 0x0008      LDRB     R0,[R0, R8]
   \   00000024   0x.... 0x....      BL       oled_write_data
   1031                  }
   \   00000028   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??oled_display_16x8str_2: (+1)
   \   0000002C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000030   0xF1B8 0x0F10      CMP      R8,#+16
   \   00000034   0xDBEB             BLT.N    ??oled_display_16x8str_1
   1032          
   1033                  uc_posx += 8;
   \   00000036   0x3408             ADDS     R4,R4,#+8
   \   00000038   0x1C7F             ADDS     R7,R7,#+1
   \                     ??oled_display_16x8str_0: (+1)
   \   0000003A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000003C   0x5DF0             LDRB     R0,[R6, R7]
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD02D             BEQ.N    ??oled_display_16x8str_3
   \   00000042   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000044   0xF816 0x9007      LDRB     R9,[R6, R7]
   \   00000048   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004A   0x2C79             CMP      R4,#+121
   \   0000004C   0xDB01             BLT.N    ??oled_display_16x8str_4
   \   0000004E   0x2400             MOVS     R4,#+0
   \   00000050   0x1CAD             ADDS     R5,R5,#+2
   \                     ??oled_display_16x8str_4: (+1)
   \   00000052   0x0029             MOVS     R1,R5
   \   00000054   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000056   0x0020             MOVS     R0,R4
   \   00000058   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005A   0x.... 0x....      BL       oled_set_pos
   \   0000005E   0xF05F 0x0800      MOVS     R8,#+0
   \   00000062   0xE00E             B.N      ??oled_display_16x8str_5
   \                     ??oled_display_16x8str_6: (+1)
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable14_1
   \   00000068   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000006C   0xEA5F 0x1109      LSLS     R1,R9,#+4
   \   00000070   0x4408             ADD      R0,R0,R1
   \   00000072   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000076   0xF810 0x0008      LDRB     R0,[R0, R8]
   \   0000007A   0x.... 0x....      BL       oled_write_data
   \   0000007E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??oled_display_16x8str_5: (+1)
   \   00000082   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000086   0xF1B8 0x0F08      CMP      R8,#+8
   \   0000008A   0xDBEB             BLT.N    ??oled_display_16x8str_6
   \   0000008C   0x1C69             ADDS     R1,R5,#+1
   \   0000008E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000090   0x0020             MOVS     R0,R4
   \   00000092   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000094   0x.... 0x....      BL       oled_set_pos
   \   00000098   0xF05F 0x0808      MOVS     R8,#+8
   \   0000009C   0xE7C6             B.N      ??oled_display_16x8str_2
   1034              }
   1035          
   1036              return;
   \                     ??oled_display_16x8str_3: (+1)
   \   0000009E   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
   1037          }
   1038          

   \                                 In section .text, align 2, keep-with-next
   1039          void oled_display_16x8str_hl(uint8 uc_posx, uint8 uc_posy, char uc_dataStr[])
   1040          {
   \                     oled_display_16x8str_hl: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   1041              uint8 i, j, uc_dataTmp;
   1042          
   1043              for (j = 0; uc_dataStr[j] != '\0'; j++)
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xE017             B.N      ??oled_display_16x8str_hl_0
   1044              {
   1045                  uc_dataTmp = uc_dataStr[j];
   1046          
   1047                  if(uc_posx > 120)
   1048                  {
   1049                      uc_posx = 0;
   1050                      uc_posy+=2;
   1051                  }
   1052          
   1053                  oled_set_pos(uc_posx,uc_posy);
   1054          
   1055                  for(i = 0; i < 8; i++)
   1056                  {
   1057                      oled_write_data(~OLED_ASCII16X8[uc_dataTmp][i]);
   1058                  }
   1059          
   1060          		oled_set_pos(uc_posx,uc_posy+1);
   1061          
   1062                  for(i = 8; i < 16; i++)
   1063                  {
   1064                      oled_write_data(~OLED_ASCII16X8[uc_dataTmp][i]);
   \                     ??oled_display_16x8str_hl_1: (+1)
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable14_1
   \   00000012   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000016   0xEA5F 0x1109      LSLS     R1,R9,#+4
   \   0000001A   0x4408             ADD      R0,R0,R1
   \   0000001C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000020   0xF810 0x0008      LDRB     R0,[R0, R8]
   \   00000024   0x43C0             MVNS     R0,R0
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0x.... 0x....      BL       oled_write_data
   1065                  }
   \   0000002C   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??oled_display_16x8str_hl_2: (+1)
   \   00000030   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000034   0xF1B8 0x0F10      CMP      R8,#+16
   \   00000038   0xDBE9             BLT.N    ??oled_display_16x8str_hl_1
   1066          
   1067                  uc_posx += 8;
   \   0000003A   0x3408             ADDS     R4,R4,#+8
   \   0000003C   0x1C7F             ADDS     R7,R7,#+1
   \                     ??oled_display_16x8str_hl_0: (+1)
   \   0000003E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000040   0x5DF0             LDRB     R0,[R6, R7]
   \   00000042   0x2800             CMP      R0,#+0
   \   00000044   0xD02F             BEQ.N    ??oled_display_16x8str_hl_3
   \   00000046   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000048   0xF816 0x9007      LDRB     R9,[R6, R7]
   \   0000004C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004E   0x2C79             CMP      R4,#+121
   \   00000050   0xDB01             BLT.N    ??oled_display_16x8str_hl_4
   \   00000052   0x2400             MOVS     R4,#+0
   \   00000054   0x1CAD             ADDS     R5,R5,#+2
   \                     ??oled_display_16x8str_hl_4: (+1)
   \   00000056   0x0029             MOVS     R1,R5
   \   00000058   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005A   0x0020             MOVS     R0,R4
   \   0000005C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005E   0x.... 0x....      BL       oled_set_pos
   \   00000062   0xF05F 0x0800      MOVS     R8,#+0
   \   00000066   0xE010             B.N      ??oled_display_16x8str_hl_5
   \                     ??oled_display_16x8str_hl_6: (+1)
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable14_1
   \   0000006C   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000070   0xEA5F 0x1109      LSLS     R1,R9,#+4
   \   00000074   0x4408             ADD      R0,R0,R1
   \   00000076   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000007A   0xF810 0x0008      LDRB     R0,[R0, R8]
   \   0000007E   0x43C0             MVNS     R0,R0
   \   00000080   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000082   0x.... 0x....      BL       oled_write_data
   \   00000086   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??oled_display_16x8str_hl_5: (+1)
   \   0000008A   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000008E   0xF1B8 0x0F08      CMP      R8,#+8
   \   00000092   0xDBE9             BLT.N    ??oled_display_16x8str_hl_6
   \   00000094   0x1C69             ADDS     R1,R5,#+1
   \   00000096   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000098   0x0020             MOVS     R0,R4
   \   0000009A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009C   0x.... 0x....      BL       oled_set_pos
   \   000000A0   0xF05F 0x0808      MOVS     R8,#+8
   \   000000A4   0xE7C4             B.N      ??oled_display_16x8str_hl_2
   1068              }
   1069          
   1070              return;
   \                     ??oled_display_16x8str_hl_3: (+1)
   \   000000A6   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
   1071          }
   1072          /**
   1073           *  @ brief   oled_print_char
   1074           *
   1075           *  @ param   uint8 uc_posx  显示的横坐标0~122
   1076           *    		  uint8 uc_posy  页范围0～7
   1077           *    		  int8  c_data   需要转化显示的数值 -128~127
   1078           *
   1079           *	@ note    将一个Char型数转换成3位数进行显示
   1080           *
   1081           *	@ return  none
   1082           */

   \                                 In section .text, align 2, keep-with-next
   1083          void oled_print_char(uint8 uc_posx, uint8 uc_posy, int8 c_data)
   1084          {
   \                     oled_print_char: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   1085              uint16 i, j, k, us_data;
   1086          
   1087              if(c_data < 0)
   \   00000008   0xB276             SXTB     R6,R6            ;; SignExt  R6,R6,#+24,#+24
   \   0000000A   0x2E00             CMP      R6,#+0
   \   0000000C   0xD509             BPL.N    ??oled_print_char_0
   1088              {
   1089              	oled_display_6x8char(uc_posx, uc_posy, '-');
   \   0000000E   0x222D             MOVS     R2,#+45
   \   00000010   0x0029             MOVS     R1,R5
   \   00000012   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       oled_display_6x8char
   1090                  us_data = (uint16)(-c_data);
   \   0000001C   0xB276             SXTB     R6,R6            ;; SignExt  R6,R6,#+24,#+24
   \   0000001E   0x4276             RSBS     R6,R6,#+0
   \   00000020   0xE007             B.N      ??oled_print_char_1
   1091              }
   1092              else
   1093              {
   1094              	oled_display_6x8char(uc_posx, uc_posy, '+');
   \                     ??oled_print_char_0: (+1)
   \   00000022   0x222B             MOVS     R2,#+43
   \   00000024   0x0029             MOVS     R1,R5
   \   00000026   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000028   0x0020             MOVS     R0,R4
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x.... 0x....      BL       oled_display_6x8char
   1095                  us_data = (uint16)c_data;
   \   00000030   0xB276             SXTB     R6,R6            ;; SignExt  R6,R6,#+24,#+24
   1096              }
   1097          
   1098              i =  us_data / 100;
   \                     ??oled_print_char_1: (+1)
   \   00000032   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000034   0x2064             MOVS     R0,#+100
   \   00000036   0xFB96 0xF0F0      SDIV     R0,R6,R0
   1099              j = (us_data % 100) / 10;
   \   0000003A   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000003C   0x2164             MOVS     R1,#+100
   \   0000003E   0xFB96 0xF2F1      SDIV     R2,R6,R1
   \   00000042   0xFB01 0x6112      MLS      R1,R1,R2,R6
   \   00000046   0x220A             MOVS     R2,#+10
   \   00000048   0xFB91 0xF7F2      SDIV     R7,R1,R2
   1100              k =  us_data % 10;
   \   0000004C   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000004E   0x210A             MOVS     R1,#+10
   \   00000050   0xFB96 0xF2F1      SDIV     R2,R6,R1
   \   00000054   0xFB01 0x6612      MLS      R6,R1,R2,R6
   1101          
   1102              oled_display_6x8char(uc_posx+6, uc_posy, i+48);
   \   00000058   0xF110 0x0230      ADDS     R2,R0,#+48
   \   0000005C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000005E   0x0029             MOVS     R1,R5
   \   00000060   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000062   0x1DA0             ADDS     R0,R4,#+6
   \   00000064   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000066   0x.... 0x....      BL       oled_display_6x8char
   1103              oled_display_6x8char(uc_posx+12, uc_posy, j+48);
   \   0000006A   0xF117 0x0230      ADDS     R2,R7,#+48
   \   0000006E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000070   0x0029             MOVS     R1,R5
   \   00000072   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000074   0xF114 0x000C      ADDS     R0,R4,#+12
   \   00000078   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007A   0x.... 0x....      BL       oled_display_6x8char
   1104              oled_display_6x8char(uc_posx+18, uc_posy, k+48);
   \   0000007E   0xF116 0x0230      ADDS     R2,R6,#+48
   \   00000082   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000084   0x0029             MOVS     R1,R5
   \   00000086   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000088   0xF114 0x0012      ADDS     R0,R4,#+18
   \   0000008C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008E   0x.... 0x....      BL       oled_display_6x8char
   1105          
   1106              return;
   \   00000092   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   1107          }
   1108          

   \                                 In section .text, align 2, keep-with-next
   1109          void oled_print_16x8char(uint8 uc_posx, uint8 uc_posy, int8 c_data)
   1110          {
   \                     oled_print_16x8char: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   1111              uint16 i, j, k, us_data;
   1112          
   1113              if(c_data < 0)
   \   00000008   0xB276             SXTB     R6,R6            ;; SignExt  R6,R6,#+24,#+24
   \   0000000A   0x2E00             CMP      R6,#+0
   \   0000000C   0xD509             BPL.N    ??oled_print_16x8char_0
   1114              {
   1115              	oled_display_16x8char(uc_posx, uc_posy, '-');
   \   0000000E   0x222D             MOVS     R2,#+45
   \   00000010   0x0029             MOVS     R1,R5
   \   00000012   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       oled_display_16x8char
   1116                  us_data = (uint16)(-c_data);
   \   0000001C   0xB276             SXTB     R6,R6            ;; SignExt  R6,R6,#+24,#+24
   \   0000001E   0x4276             RSBS     R6,R6,#+0
   \   00000020   0xE007             B.N      ??oled_print_16x8char_1
   1117              }
   1118              else
   1119              {
   1120              	oled_display_16x8char(uc_posx, uc_posy, '+');
   \                     ??oled_print_16x8char_0: (+1)
   \   00000022   0x222B             MOVS     R2,#+43
   \   00000024   0x0029             MOVS     R1,R5
   \   00000026   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000028   0x0020             MOVS     R0,R4
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x.... 0x....      BL       oled_display_16x8char
   1121                  us_data = (uint16)c_data;
   \   00000030   0xB276             SXTB     R6,R6            ;; SignExt  R6,R6,#+24,#+24
   1122              }
   1123          
   1124              i =  us_data / 100;
   \                     ??oled_print_16x8char_1: (+1)
   \   00000032   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000034   0x2064             MOVS     R0,#+100
   \   00000036   0xFB96 0xF0F0      SDIV     R0,R6,R0
   1125              j = (us_data % 100) / 10;
   \   0000003A   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000003C   0x2164             MOVS     R1,#+100
   \   0000003E   0xFB96 0xF2F1      SDIV     R2,R6,R1
   \   00000042   0xFB01 0x6112      MLS      R1,R1,R2,R6
   \   00000046   0x220A             MOVS     R2,#+10
   \   00000048   0xFB91 0xF7F2      SDIV     R7,R1,R2
   1126              k =  us_data % 10;
   \   0000004C   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000004E   0x210A             MOVS     R1,#+10
   \   00000050   0xFB96 0xF2F1      SDIV     R2,R6,R1
   \   00000054   0xFB01 0x6612      MLS      R6,R1,R2,R6
   1127          
   1128              oled_display_16x8char(uc_posx+8, uc_posy, i+48);
   \   00000058   0xF110 0x0230      ADDS     R2,R0,#+48
   \   0000005C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000005E   0x0029             MOVS     R1,R5
   \   00000060   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000062   0xF114 0x0008      ADDS     R0,R4,#+8
   \   00000066   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000068   0x.... 0x....      BL       oled_display_16x8char
   1129              oled_display_16x8char(uc_posx+16, uc_posy, j+48);
   \   0000006C   0xF117 0x0230      ADDS     R2,R7,#+48
   \   00000070   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000072   0x0029             MOVS     R1,R5
   \   00000074   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000076   0xF114 0x0010      ADDS     R0,R4,#+16
   \   0000007A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007C   0x.... 0x....      BL       oled_display_16x8char
   1130              oled_display_16x8char(uc_posx+24, uc_posy, k+48);
   \   00000080   0xF116 0x0230      ADDS     R2,R6,#+48
   \   00000084   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000086   0x0029             MOVS     R1,R5
   \   00000088   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000008A   0xF114 0x0018      ADDS     R0,R4,#+24
   \   0000008E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000090   0x.... 0x....      BL       oled_display_16x8char
   1131          
   1132              return;
   \   00000094   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   1133          }
   1134          /**
   1135           *  @ brief   oled_print_short
   1136           *
   1137           *  @ param   uint8 uc_posx  显示的横坐标0~122
   1138           *   		  uint8 uc_posy  页范围0～7
   1139           *  		  int8  s_data   需要转化显示的数值
   1140           *
   1141           *	@ note    将一个int16型数转换成5位数进行显示
   1142           *
   1143           *	@ return  none
   1144           */

   \                                 In section .text, align 2, keep-with-next
   1145          void oled_print_short(uint8 uc_posx, uint8 uc_posy, int16 s_data)
   1146          {
   \                     oled_print_short: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0017             MOVS     R7,R2
   1147              uint16 i, j, k, l, m, us_data;
   1148          
   1149              //保证图像处理优先级
   1150              if ((guc_camera_image_Ok == 1))// && (g_carInfo.u8SlaveComFlag == 0))
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable14_2
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0x2801             CMP      R0,#+1
   \   00000012   0xD06E             BEQ.N    ??oled_print_short_0
   1151              {
   1152                  return;
   1153              }
   1154              
   1155              
   1156              if(s_data < 0)
   \                     ??oled_print_short_1: (+1)
   \   00000014   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000016   0x2F00             CMP      R7,#+0
   \   00000018   0xD509             BPL.N    ??oled_print_short_2
   1157              {
   1158              	oled_display_6x8char(uc_posx,uc_posy,'-');
   \   0000001A   0x222D             MOVS     R2,#+45
   \   0000001C   0x0029             MOVS     R1,R5
   \   0000001E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0x.... 0x....      BL       oled_display_6x8char
   1159                  us_data = (uint16)(-s_data);
   \   00000028   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000002A   0x427F             RSBS     R7,R7,#+0
   \   0000002C   0xE007             B.N      ??oled_print_short_3
   1160              }
   1161              else
   1162              {
   1163              	oled_display_6x8char(uc_posx,uc_posy,'+');
   \                     ??oled_print_short_2: (+1)
   \   0000002E   0x222B             MOVS     R2,#+43
   \   00000030   0x0029             MOVS     R1,R5
   \   00000032   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000034   0x0020             MOVS     R0,R4
   \   00000036   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000038   0x.... 0x....      BL       oled_display_6x8char
   1164                  us_data = (uint16)s_data;
   \   0000003C   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   1165              }
   1166          
   1167              l =  us_data          / 10000;
   \                     ??oled_print_short_3: (+1)
   \   0000003E   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000040   0xF242 0x7010      MOVW     R0,#+10000
   \   00000044   0xFB97 0xF0F0      SDIV     R0,R7,R0
   1168              m = (us_data % 10000) / 1000;
   \   00000048   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000004A   0xF242 0x7110      MOVW     R1,#+10000
   \   0000004E   0xFB97 0xF2F1      SDIV     R2,R7,R1
   \   00000052   0xFB01 0x7112      MLS      R1,R1,R2,R7
   \   00000056   0xF44F 0x727A      MOV      R2,#+1000
   \   0000005A   0xFB91 0xF6F2      SDIV     R6,R1,R2
   1169              i = (us_data % 1000)  / 100;
   \   0000005E   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000060   0xF44F 0x717A      MOV      R1,#+1000
   \   00000064   0xFB97 0xF2F1      SDIV     R2,R7,R1
   \   00000068   0xFB01 0x7112      MLS      R1,R1,R2,R7
   \   0000006C   0x2264             MOVS     R2,#+100
   \   0000006E   0xFB91 0xF8F2      SDIV     R8,R1,R2
   1170              j = (us_data % 100)   / 10;
   \   00000072   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000074   0x2164             MOVS     R1,#+100
   \   00000076   0xFB97 0xF2F1      SDIV     R2,R7,R1
   \   0000007A   0xFB01 0x7112      MLS      R1,R1,R2,R7
   \   0000007E   0x220A             MOVS     R2,#+10
   \   00000080   0xFB91 0xF9F2      SDIV     R9,R1,R2
   1171              k =  us_data % 10;
   \   00000084   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000086   0x210A             MOVS     R1,#+10
   \   00000088   0xFB97 0xF2F1      SDIV     R2,R7,R1
   \   0000008C   0xFB01 0x7712      MLS      R7,R1,R2,R7
   1172          
   1173              oled_display_6x8char(uc_posx+6,  uc_posy, l+48);
   \   00000090   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000094   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000096   0x0029             MOVS     R1,R5
   \   00000098   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000009A   0x1DA0             ADDS     R0,R4,#+6
   \   0000009C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009E   0x.... 0x....      BL       oled_display_6x8char
   1174              oled_display_6x8char(uc_posx+12, uc_posy, m+48);
   \   000000A2   0xF116 0x0230      ADDS     R2,R6,#+48
   \   000000A6   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000A8   0x0029             MOVS     R1,R5
   \   000000AA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000AC   0xF114 0x000C      ADDS     R0,R4,#+12
   \   000000B0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B2   0x.... 0x....      BL       oled_display_6x8char
   1175              oled_display_6x8char(uc_posx+18, uc_posy, i+48);
   \   000000B6   0xF118 0x0230      ADDS     R2,R8,#+48
   \   000000BA   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000BC   0x0029             MOVS     R1,R5
   \   000000BE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C0   0xF114 0x0012      ADDS     R0,R4,#+18
   \   000000C4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C6   0x.... 0x....      BL       oled_display_6x8char
   1176              oled_display_6x8char(uc_posx+24, uc_posy, j+48);
   \   000000CA   0xF119 0x0230      ADDS     R2,R9,#+48
   \   000000CE   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000D0   0x0029             MOVS     R1,R5
   \   000000D2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000D4   0xF114 0x0018      ADDS     R0,R4,#+24
   \   000000D8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000DA   0x.... 0x....      BL       oled_display_6x8char
   1177              oled_display_6x8char(uc_posx+30, uc_posy, k+48);
   \   000000DE   0xF117 0x0230      ADDS     R2,R7,#+48
   \   000000E2   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000E4   0x0029             MOVS     R1,R5
   \   000000E6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000E8   0xF114 0x001E      ADDS     R0,R4,#+30
   \   000000EC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000EE   0x.... 0x....      BL       oled_display_6x8char
   1178          
   1179              return;
   \                     ??oled_print_short_0: (+1)
   \   000000F2   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
   1180          }
   1181          

   \                                 In section .text, align 2, keep-with-next
   1182          void oled_print_16x8short(uint8 uc_posx, uint8 uc_posy, int16 s_data)
   1183          {
   \                     oled_print_16x8short: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0017             MOVS     R7,R2
   1184              uint16 i, j, k, l, m, us_data;
   1185          
   1186              if(s_data < 0)
   \   0000000A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000000C   0x2F00             CMP      R7,#+0
   \   0000000E   0xD509             BPL.N    ??oled_print_16x8short_0
   1187              {
   1188              	oled_display_16x8char(uc_posx,uc_posy,'-');
   \   00000010   0x222D             MOVS     R2,#+45
   \   00000012   0x0029             MOVS     R1,R5
   \   00000014   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x.... 0x....      BL       oled_display_16x8char
   1189                  us_data = (uint16)(-s_data);
   \   0000001E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000020   0x427F             RSBS     R7,R7,#+0
   \   00000022   0xE007             B.N      ??oled_print_16x8short_1
   1190              }
   1191              else
   1192              {
   1193              	oled_display_16x8char(uc_posx,uc_posy,'+');
   \                     ??oled_print_16x8short_0: (+1)
   \   00000024   0x222B             MOVS     R2,#+43
   \   00000026   0x0029             MOVS     R1,R5
   \   00000028   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x.... 0x....      BL       oled_display_16x8char
   1194                  us_data = (uint16)s_data;
   \   00000032   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   1195              }
   1196          
   1197              l =  us_data          / 10000;
   \                     ??oled_print_16x8short_1: (+1)
   \   00000034   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000036   0xF242 0x7010      MOVW     R0,#+10000
   \   0000003A   0xFB97 0xF0F0      SDIV     R0,R7,R0
   1198              m = (us_data % 10000) / 1000;
   \   0000003E   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000040   0xF242 0x7110      MOVW     R1,#+10000
   \   00000044   0xFB97 0xF2F1      SDIV     R2,R7,R1
   \   00000048   0xFB01 0x7112      MLS      R1,R1,R2,R7
   \   0000004C   0xF44F 0x727A      MOV      R2,#+1000
   \   00000050   0xFB91 0xF6F2      SDIV     R6,R1,R2
   1199              i = (us_data % 1000)  / 100;
   \   00000054   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000056   0xF44F 0x717A      MOV      R1,#+1000
   \   0000005A   0xFB97 0xF2F1      SDIV     R2,R7,R1
   \   0000005E   0xFB01 0x7112      MLS      R1,R1,R2,R7
   \   00000062   0x2264             MOVS     R2,#+100
   \   00000064   0xFB91 0xF8F2      SDIV     R8,R1,R2
   1200              j = (us_data % 100)   / 10;
   \   00000068   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000006A   0x2164             MOVS     R1,#+100
   \   0000006C   0xFB97 0xF2F1      SDIV     R2,R7,R1
   \   00000070   0xFB01 0x7112      MLS      R1,R1,R2,R7
   \   00000074   0x220A             MOVS     R2,#+10
   \   00000076   0xFB91 0xF9F2      SDIV     R9,R1,R2
   1201              k =  us_data % 10;
   \   0000007A   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000007C   0x210A             MOVS     R1,#+10
   \   0000007E   0xFB97 0xF2F1      SDIV     R2,R7,R1
   \   00000082   0xFB01 0x7712      MLS      R7,R1,R2,R7
   1202          
   1203              oled_display_16x8char(uc_posx+8,  uc_posy, l+48);
   \   00000086   0xF110 0x0230      ADDS     R2,R0,#+48
   \   0000008A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000008C   0x0029             MOVS     R1,R5
   \   0000008E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000090   0xF114 0x0008      ADDS     R0,R4,#+8
   \   00000094   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000096   0x.... 0x....      BL       oled_display_16x8char
   1204              oled_display_16x8char(uc_posx+16, uc_posy, m+48);
   \   0000009A   0xF116 0x0230      ADDS     R2,R6,#+48
   \   0000009E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000A0   0x0029             MOVS     R1,R5
   \   000000A2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A4   0xF114 0x0010      ADDS     R0,R4,#+16
   \   000000A8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AA   0x.... 0x....      BL       oled_display_16x8char
   1205              oled_display_16x8char(uc_posx+24, uc_posy, i+48);
   \   000000AE   0xF118 0x0230      ADDS     R2,R8,#+48
   \   000000B2   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000B4   0x0029             MOVS     R1,R5
   \   000000B6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B8   0xF114 0x0018      ADDS     R0,R4,#+24
   \   000000BC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000BE   0x.... 0x....      BL       oled_display_16x8char
   1206              oled_display_16x8char(uc_posx+32, uc_posy, j+48);
   \   000000C2   0xF119 0x0230      ADDS     R2,R9,#+48
   \   000000C6   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000C8   0x0029             MOVS     R1,R5
   \   000000CA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000CC   0xF114 0x0020      ADDS     R0,R4,#+32
   \   000000D0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D2   0x.... 0x....      BL       oled_display_16x8char
   1207              oled_display_16x8char(uc_posx+40, uc_posy, k+48);
   \   000000D6   0xF117 0x0230      ADDS     R2,R7,#+48
   \   000000DA   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000DC   0x0029             MOVS     R1,R5
   \   000000DE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000E0   0xF114 0x0028      ADDS     R0,R4,#+40
   \   000000E4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E6   0x.... 0x....      BL       oled_display_16x8char
   1208          
   1209              return;
   \   000000EA   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
   1210          }
   1211          

   \                                 In section .text, align 2, keep-with-next
   1212          void oled_print_16x8short_hl(uint8 uc_posx, uint8 uc_posy, int16 s_data, int8 bits_num)
   1213          {
   \                     oled_print_16x8short_hl: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x4693             MOV      R11,R2
   \   0000000A   0x001E             MOVS     R6,R3
   1214              uint16 i, j, k, l, m, us_data;
   1215          
   1216              if(s_data < 0)
   \   0000000C   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000010   0xF1BB 0x0F00      CMP      R11,#+0
   \   00000014   0xD50B             BPL.N    ??oled_print_16x8short_hl_0
   1217              {
   1218              	oled_display_16x8char(uc_posx,uc_posy,'-');
   \   00000016   0x222D             MOVS     R2,#+45
   \   00000018   0x0029             MOVS     R1,R5
   \   0000001A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001C   0x0020             MOVS     R0,R4
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0x.... 0x....      BL       oled_display_16x8char
   1219                  us_data = (uint16)(-s_data);
   \   00000024   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000028   0xF1DB 0x0B00      RSBS     R11,R11,#+0
   \   0000002C   0xE008             B.N      ??oled_print_16x8short_hl_1
   1220              }
   1221              else
   1222              {
   1223              	oled_display_16x8char(uc_posx,uc_posy,'+');
   \                     ??oled_print_16x8short_hl_0: (+1)
   \   0000002E   0x222B             MOVS     R2,#+43
   \   00000030   0x0029             MOVS     R1,R5
   \   00000032   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000034   0x0020             MOVS     R0,R4
   \   00000036   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000038   0x.... 0x....      BL       oled_display_16x8char
   1224                  us_data = (uint16)s_data;
   \   0000003C   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   1225              }
   1226          
   1227              l =  us_data          / 10000;
   \                     ??oled_print_16x8short_hl_1: (+1)
   \   00000040   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000044   0xF242 0x7010      MOVW     R0,#+10000
   \   00000048   0xFB9B 0xF7F0      SDIV     R7,R11,R0
   1228              m = (us_data % 10000) / 1000;
   \   0000004C   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000050   0xF242 0x7010      MOVW     R0,#+10000
   \   00000054   0xFB9B 0xF1F0      SDIV     R1,R11,R0
   \   00000058   0xFB00 0xB011      MLS      R0,R0,R1,R11
   \   0000005C   0xF44F 0x717A      MOV      R1,#+1000
   \   00000060   0xFB90 0xF8F1      SDIV     R8,R0,R1
   1229              i = (us_data % 1000)  / 100;
   \   00000064   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000068   0xF44F 0x707A      MOV      R0,#+1000
   \   0000006C   0xFB9B 0xF1F0      SDIV     R1,R11,R0
   \   00000070   0xFB00 0xB011      MLS      R0,R0,R1,R11
   \   00000074   0x2164             MOVS     R1,#+100
   \   00000076   0xFB90 0xF9F1      SDIV     R9,R0,R1
   1230              j = (us_data % 100)   / 10;
   \   0000007A   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   0000007E   0x2064             MOVS     R0,#+100
   \   00000080   0xFB9B 0xF1F0      SDIV     R1,R11,R0
   \   00000084   0xFB00 0xB011      MLS      R0,R0,R1,R11
   \   00000088   0x210A             MOVS     R1,#+10
   \   0000008A   0xFB90 0xFAF1      SDIV     R10,R0,R1
   1231              k =  us_data % 10;
   \   0000008E   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000092   0x200A             MOVS     R0,#+10
   \   00000094   0xFB9B 0xF1F0      SDIV     R1,R11,R0
   \   00000098   0xFB00 0xBB11      MLS      R11,R0,R1,R11
   1232          
   1233              oled_display_16x8char(uc_posx+8,  uc_posy, l+48);
   \   0000009C   0xF117 0x0230      ADDS     R2,R7,#+48
   \   000000A0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000A2   0x0029             MOVS     R1,R5
   \   000000A4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A6   0xF114 0x0008      ADDS     R0,R4,#+8
   \   000000AA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AC   0x.... 0x....      BL       oled_display_16x8char
   1234              oled_display_16x8char(uc_posx+16, uc_posy, m+48);
   \   000000B0   0xF118 0x0230      ADDS     R2,R8,#+48
   \   000000B4   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000B6   0x0029             MOVS     R1,R5
   \   000000B8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000BA   0xF114 0x0010      ADDS     R0,R4,#+16
   \   000000BE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C0   0x.... 0x....      BL       oled_display_16x8char
   1235              oled_display_16x8char(uc_posx+24, uc_posy, i+48);
   \   000000C4   0xF119 0x0230      ADDS     R2,R9,#+48
   \   000000C8   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000CA   0x0029             MOVS     R1,R5
   \   000000CC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000CE   0xF114 0x0018      ADDS     R0,R4,#+24
   \   000000D2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D4   0x.... 0x....      BL       oled_display_16x8char
   1236              oled_display_16x8char(uc_posx+32, uc_posy, j+48);
   \   000000D8   0xF11A 0x0230      ADDS     R2,R10,#+48
   \   000000DC   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000DE   0x0029             MOVS     R1,R5
   \   000000E0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000E2   0xF114 0x0020      ADDS     R0,R4,#+32
   \   000000E6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E8   0x.... 0x....      BL       oled_display_16x8char
   1237              oled_display_16x8char(uc_posx+40, uc_posy, k+48);
   \   000000EC   0xF11B 0x0230      ADDS     R2,R11,#+48
   \   000000F0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000F2   0x0029             MOVS     R1,R5
   \   000000F4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000F6   0xF114 0x0028      ADDS     R0,R4,#+40
   \   000000FA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000FC   0x.... 0x....      BL       oled_display_16x8char
   1238          
   1239              switch(bits_num)
   \   00000100   0xB276             SXTB     R6,R6            ;; SignExt  R6,R6,#+24,#+24
   \   00000102   0x2E01             CMP      R6,#+1
   \   00000104   0xD007             BEQ.N    ??oled_print_16x8short_hl_2
   \   00000106   0xD33D             BCC.N    ??oled_print_16x8short_hl_3
   \   00000108   0x2E03             CMP      R6,#+3
   \   0000010A   0xD01A             BEQ.N    ??oled_print_16x8short_hl_4
   \   0000010C   0xD30E             BCC.N    ??oled_print_16x8short_hl_5
   \   0000010E   0x2E05             CMP      R6,#+5
   \   00000110   0xD02D             BEQ.N    ??oled_print_16x8short_hl_6
   \   00000112   0xD321             BCC.N    ??oled_print_16x8short_hl_7
   \   00000114   0xE036             B.N      ??oled_print_16x8short_hl_3
   1240              {
   1241              	case 1: oled_display_16x8char_hl(uc_posx+8,  uc_posy, l+48);
   \                     ??oled_print_16x8short_hl_2: (+1)
   \   00000116   0xF117 0x0230      ADDS     R2,R7,#+48
   \   0000011A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000011C   0x0029             MOVS     R1,R5
   \   0000011E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000120   0xF114 0x0008      ADDS     R0,R4,#+8
   \   00000124   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000126   0x.... 0x....      BL       oled_display_16x8char_hl
   1242              	        break;
   \   0000012A   0xE02B             B.N      ??oled_print_16x8short_hl_8
   1243              	case 2: oled_display_16x8char_hl(uc_posx+16, uc_posy, m+48);
   \                     ??oled_print_16x8short_hl_5: (+1)
   \   0000012C   0xF118 0x0230      ADDS     R2,R8,#+48
   \   00000130   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000132   0x0029             MOVS     R1,R5
   \   00000134   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000136   0xF114 0x0010      ADDS     R0,R4,#+16
   \   0000013A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000013C   0x.... 0x....      BL       oled_display_16x8char_hl
   1244              	        break;
   \   00000140   0xE020             B.N      ??oled_print_16x8short_hl_8
   1245                  case 3: oled_display_16x8char_hl(uc_posx+24, uc_posy, i+48);
   \                     ??oled_print_16x8short_hl_4: (+1)
   \   00000142   0xF119 0x0230      ADDS     R2,R9,#+48
   \   00000146   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000148   0x0029             MOVS     R1,R5
   \   0000014A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000014C   0xF114 0x0018      ADDS     R0,R4,#+24
   \   00000150   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000152   0x.... 0x....      BL       oled_display_16x8char_hl
   1246              	        break;
   \   00000156   0xE015             B.N      ??oled_print_16x8short_hl_8
   1247                 	case 4: oled_display_16x8char_hl(uc_posx+32, uc_posy, j+48);
   \                     ??oled_print_16x8short_hl_7: (+1)
   \   00000158   0xF11A 0x0230      ADDS     R2,R10,#+48
   \   0000015C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000015E   0x0029             MOVS     R1,R5
   \   00000160   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000162   0xF114 0x0020      ADDS     R0,R4,#+32
   \   00000166   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000168   0x.... 0x....      BL       oled_display_16x8char_hl
   1248              	        break;
   \   0000016C   0xE00A             B.N      ??oled_print_16x8short_hl_8
   1249                  case 5: oled_display_16x8char_hl(uc_posx+40, uc_posy, k+48);
   \                     ??oled_print_16x8short_hl_6: (+1)
   \   0000016E   0xF11B 0x0230      ADDS     R2,R11,#+48
   \   00000172   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000174   0x0029             MOVS     R1,R5
   \   00000176   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000178   0xF114 0x0028      ADDS     R0,R4,#+40
   \   0000017C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000017E   0x.... 0x....      BL       oled_display_16x8char_hl
   1250              	        break;
   \   00000182   0xE7FF             B.N      ??oled_print_16x8short_hl_8
   1251              	default: break;
   1252              }
   1253          
   1254              return;
   \                     ??oled_print_16x8short_hl_3: (+1)
   \                     ??oled_print_16x8short_hl_8: (+1)
   \   00000184   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
   1255          }
   1256          /**
   1257           *  @ brief   oled_print_image
   1258           *
   1259           *  @ param   uint8 usPicture[][168]     二维图像数组的地址
   1260          *      		  uint16 usRowNum            二维图像的行数1~64
   1261          *   		  uint16 usColumnNum         二维图像的列数1~128
   1262           *
   1263           *	@ note    将图像显示出来
   1264           *
   1265           *	@ return  none
   1266           */
   1267          //将数组从头到尾依次从左上角显示到右下角

   \                                 In section .text, align 2, keep-with-next
   1268          void oled_print_image(uint8 usPicture[][128], uint16 usRowNum, uint16 usColumnNum)
   1269          {
   \                     oled_print_image: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x468A             MOV      R10,R1
   \   00000008   0x0015             MOVS     R5,R2
   1270          	int16 i = 0;
   \   0000000A   0x2700             MOVS     R7,#+0
   1271          	int16 j = 0;
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   1272          	int16 m = 0;
   \   00000010   0x2600             MOVS     R6,#+0
   1273          	uint8 temp_data = 0;
   \   00000012   0x2000             MOVS     R0,#+0
   1274          	int16 usRowTemp = 0;
   \   00000014   0xF05F 0x0900      MOVS     R9,#+0
   1275          
   1276          	oled_set_pos(0,0);                      // 0页，0列
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x.... 0x....      BL       oled_set_pos
   1277          	m = (uint8)(usRowNum >> 3);             // 计算图片行数以8位为一组完整的组数，即页数
   \   00000020   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000024   0xEA5F 0x06DA      LSRS     R6,R10,#+3
   \   00000028   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   1278          
   1279              for(i=0;i<m;i++)
   \   0000002A   0x2700             MOVS     R7,#+0
   \   0000002C   0xE05F             B.N      ??oled_print_image_0
   1280          	//for(i=(m-1);i>=0;i--)
   1281          	{
   1282              	usRowTemp = ((i<<3));             // 行下标，从第0行开始
   1283                  
   1284          		for(j=0;j<usColumnNum;j++)
   1285          		//for(j=(usColumnNum);j > 0;j--)
   1286          		{
   1287          			temp_data = (usPicture[usRowTemp][j]<<0) 
   1288                              | (usPicture[usRowTemp+1][j]<<1) 
   1289                              | (usPicture[usRowTemp+2][j]<<2) 
   1290                              | (usPicture[usRowTemp+3][j]<<3)
   1291          					| (usPicture[usRowTemp+4][j]<<4)
   1292                              | (usPicture[usRowTemp+5][j]<<5) 
   1293                              | (usPicture[usRowTemp+6][j]<<6) 
   1294                              | (usPicture[usRowTemp+7][j]<<7);
   \                     ??oled_print_image_1: (+1)
   \   0000002E   0x2080             MOVS     R0,#+128
   \   00000030   0xFB19 0xF000      SMULBB   R0,R9,R0
   \   00000034   0x4420             ADD      R0,R4,R0
   \   00000036   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000003A   0xF810 0x0008      LDRB     R0,[R0, R8]
   \   0000003E   0x2180             MOVS     R1,#+128
   \   00000040   0xFB19 0xF101      SMULBB   R1,R9,R1
   \   00000044   0x4421             ADD      R1,R4,R1
   \   00000046   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000004A   0x4441             ADD      R1,R1,R8
   \   0000004C   0xF891 0x1080      LDRB     R1,[R1, #+128]
   \   00000050   0xEA50 0x0041      ORRS     R0,R0,R1, LSL #+1
   \   00000054   0x2180             MOVS     R1,#+128
   \   00000056   0xFB19 0xF101      SMULBB   R1,R9,R1
   \   0000005A   0x4421             ADD      R1,R4,R1
   \   0000005C   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000060   0x4441             ADD      R1,R1,R8
   \   00000062   0xF891 0x1100      LDRB     R1,[R1, #+256]
   \   00000066   0xEA50 0x0081      ORRS     R0,R0,R1, LSL #+2
   \   0000006A   0x2180             MOVS     R1,#+128
   \   0000006C   0xFB19 0xF101      SMULBB   R1,R9,R1
   \   00000070   0x4421             ADD      R1,R4,R1
   \   00000072   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000076   0x4441             ADD      R1,R1,R8
   \   00000078   0xF891 0x1180      LDRB     R1,[R1, #+384]
   \   0000007C   0xEA50 0x00C1      ORRS     R0,R0,R1, LSL #+3
   \   00000080   0x2180             MOVS     R1,#+128
   \   00000082   0xFB19 0xF101      SMULBB   R1,R9,R1
   \   00000086   0x4421             ADD      R1,R4,R1
   \   00000088   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000008C   0x4441             ADD      R1,R1,R8
   \   0000008E   0xF891 0x1200      LDRB     R1,[R1, #+512]
   \   00000092   0xEA50 0x1001      ORRS     R0,R0,R1, LSL #+4
   \   00000096   0x2180             MOVS     R1,#+128
   \   00000098   0xFB19 0xF101      SMULBB   R1,R9,R1
   \   0000009C   0x4421             ADD      R1,R4,R1
   \   0000009E   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000000A2   0x4441             ADD      R1,R1,R8
   \   000000A4   0xF891 0x1280      LDRB     R1,[R1, #+640]
   \   000000A8   0xEA50 0x1041      ORRS     R0,R0,R1, LSL #+5
   \   000000AC   0x2180             MOVS     R1,#+128
   \   000000AE   0xFB19 0xF101      SMULBB   R1,R9,R1
   \   000000B2   0x4421             ADD      R1,R4,R1
   \   000000B4   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000000B8   0x4441             ADD      R1,R1,R8
   \   000000BA   0xF891 0x1300      LDRB     R1,[R1, #+768]
   \   000000BE   0xEA50 0x1081      ORRS     R0,R0,R1, LSL #+6
   \   000000C2   0x2180             MOVS     R1,#+128
   \   000000C4   0xFB19 0xF101      SMULBB   R1,R9,R1
   \   000000C8   0x4421             ADD      R1,R4,R1
   \   000000CA   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000000CE   0x4441             ADD      R1,R1,R8
   \   000000D0   0xF891 0x1380      LDRB     R1,[R1, #+896]
   \   000000D4   0xEA50 0x10C1      ORRS     R0,R0,R1, LSL #+7
   1295          
   1296          			oled_write_data(temp_data);
   \   000000D8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000DA   0x.... 0x....      BL       oled_write_data
   1297          		}
   \   000000DE   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??oled_print_image_2: (+1)
   \   000000E2   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000000E6   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000E8   0x45A8             CMP      R8,R5
   \   000000EA   0xDBA0             BLT.N    ??oled_print_image_1
   \   000000EC   0x1C7F             ADDS     R7,R7,#+1
   \                     ??oled_print_image_0: (+1)
   \   000000EE   0x0038             MOVS     R0,R7
   \   000000F0   0x0031             MOVS     R1,R6
   \   000000F2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000F4   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000000F6   0x4288             CMP      R0,R1
   \   000000F8   0xDA04             BGE.N    ??oled_print_image_3
   \   000000FA   0xEA5F 0x09C7      LSLS     R9,R7,#+3
   \   000000FE   0xF05F 0x0800      MOVS     R8,#+0
   \   00000102   0xE7EE             B.N      ??oled_print_image_2
   1298          	}
   1299              return;
   \                     ??oled_print_image_3: (+1)
   \   00000104   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
   1300          }
   1301          
   1302          /**
   1303           *  @ brief   oled_print_mirror_image
   1304           *
   1305           *  @ param   uint8 usPicture[][168]     二维图像数组的地址
   1306          *      		  uint16 usRowNum            二维图像的行数1~64
   1307          *   		  uint16 usColumnNum         二维图像的列数1~128
   1308           *
   1309           *	@ note    将图像显示出来
   1310           *
   1311           *	@ return  none
   1312           */
   1313          //将数组从尾到头依次从左上角显示到右下角

   \                                 In section .text, align 2, keep-with-next
   1314          void oled_print_mirror_image(uint8 usPicture[][128], uint16 usRowNum, uint16 usColumnNum)
   1315          {
   \                     oled_print_mirror_image: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x468A             MOV      R10,R1
   \   00000008   0x0015             MOVS     R5,R2
   1316          	int16 i = 0;
   \   0000000A   0x2700             MOVS     R7,#+0
   1317          	int16 j = 0;
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   1318          	int16 m = 0;
   \   00000010   0x2600             MOVS     R6,#+0
   1319          	uint8 temp_data = 0;
   \   00000012   0x2000             MOVS     R0,#+0
   1320          	int16 usRowTemp = 0;
   \   00000014   0xF05F 0x0900      MOVS     R9,#+0
   1321          
   1322          	oled_set_pos(0,0);                      // 0页，0列
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x.... 0x....      BL       oled_set_pos
   1323          	m = (uint8)(usRowNum >> 3);             // 计算图片行数以8位为一组完整的组数，即页数
   \   00000020   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000024   0xEA5F 0x06DA      LSRS     R6,R10,#+3
   \   00000028   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   1324          
   1325              for(i=0;i<m;i++)
   \   0000002A   0x2700             MOVS     R7,#+0
   \   0000002C   0xE05F             B.N      ??oled_print_mirror_image_0
   1326          	//for(i=m-1;i>=0;i--)
   1327          	{
   1328              	usRowTemp = ((i<<3));             // 行下标，从第0行开始
   1329                  
   1330          		for(j=0;j<usColumnNum;j++)
   1331          		//for(j=(usColumnNum);j > 0;j--)
   1332          		{
   1333          //          temp_data = (usPicture[usRowTemp+7][j]<<0) 
   1334          //                    | (usPicture[usRowTemp+6][j]<<1) 
   1335          //                    | (usPicture[usRowTemp+5][j]<<2) 
   1336          //                    | (usPicture[usRowTemp+4][j]<<3)
   1337          //                    | (usPicture[usRowTemp+3][j]<<4)
   1338          //                    | (usPicture[usRowTemp+2][j]<<5) 
   1339          //                    | (usPicture[usRowTemp+1][j]<<6) 
   1340          //                    | (usPicture[usRowTemp+0][j]<<7);
   1341                    
   1342                              temp_data = (usPicture[usRowTemp+7][j]<<7) 
   1343                              | (usPicture[usRowTemp+6][j]<<6) 
   1344                              | (usPicture[usRowTemp+5][j]<<5) 
   1345                              | (usPicture[usRowTemp+4][j]<<4)
   1346                              | (usPicture[usRowTemp+3][j]<<3)
   1347                              | (usPicture[usRowTemp+2][j]<<2) 
   1348                              | (usPicture[usRowTemp+1][j]<<1) 
   1349                              | (usPicture[usRowTemp+0][j]<<0);
   \                     ??oled_print_mirror_image_1: (+1)
   \   0000002E   0x2080             MOVS     R0,#+128
   \   00000030   0xFB19 0xF000      SMULBB   R0,R9,R0
   \   00000034   0x4420             ADD      R0,R4,R0
   \   00000036   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000003A   0x4440             ADD      R0,R0,R8
   \   0000003C   0xF890 0x0380      LDRB     R0,[R0, #+896]
   \   00000040   0x2180             MOVS     R1,#+128
   \   00000042   0xFB19 0xF101      SMULBB   R1,R9,R1
   \   00000046   0x4421             ADD      R1,R4,R1
   \   00000048   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000004C   0x4441             ADD      R1,R1,R8
   \   0000004E   0xF891 0x1300      LDRB     R1,[R1, #+768]
   \   00000052   0x0189             LSLS     R1,R1,#+6
   \   00000054   0xEA51 0x10C0      ORRS     R0,R1,R0, LSL #+7
   \   00000058   0x2180             MOVS     R1,#+128
   \   0000005A   0xFB19 0xF101      SMULBB   R1,R9,R1
   \   0000005E   0x4421             ADD      R1,R4,R1
   \   00000060   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000064   0x4441             ADD      R1,R1,R8
   \   00000066   0xF891 0x1280      LDRB     R1,[R1, #+640]
   \   0000006A   0xEA50 0x1041      ORRS     R0,R0,R1, LSL #+5
   \   0000006E   0x2180             MOVS     R1,#+128
   \   00000070   0xFB19 0xF101      SMULBB   R1,R9,R1
   \   00000074   0x4421             ADD      R1,R4,R1
   \   00000076   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000007A   0x4441             ADD      R1,R1,R8
   \   0000007C   0xF891 0x1200      LDRB     R1,[R1, #+512]
   \   00000080   0xEA50 0x1001      ORRS     R0,R0,R1, LSL #+4
   \   00000084   0x2180             MOVS     R1,#+128
   \   00000086   0xFB19 0xF101      SMULBB   R1,R9,R1
   \   0000008A   0x4421             ADD      R1,R4,R1
   \   0000008C   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000090   0x4441             ADD      R1,R1,R8
   \   00000092   0xF891 0x1180      LDRB     R1,[R1, #+384]
   \   00000096   0xEA50 0x00C1      ORRS     R0,R0,R1, LSL #+3
   \   0000009A   0x2180             MOVS     R1,#+128
   \   0000009C   0xFB19 0xF101      SMULBB   R1,R9,R1
   \   000000A0   0x4421             ADD      R1,R4,R1
   \   000000A2   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000000A6   0x4441             ADD      R1,R1,R8
   \   000000A8   0xF891 0x1100      LDRB     R1,[R1, #+256]
   \   000000AC   0xEA50 0x0081      ORRS     R0,R0,R1, LSL #+2
   \   000000B0   0x2180             MOVS     R1,#+128
   \   000000B2   0xFB19 0xF101      SMULBB   R1,R9,R1
   \   000000B6   0x4421             ADD      R1,R4,R1
   \   000000B8   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000000BC   0x4441             ADD      R1,R1,R8
   \   000000BE   0xF891 0x1080      LDRB     R1,[R1, #+128]
   \   000000C2   0xEA50 0x0041      ORRS     R0,R0,R1, LSL #+1
   \   000000C6   0x2180             MOVS     R1,#+128
   \   000000C8   0xFB19 0xF101      SMULBB   R1,R9,R1
   \   000000CC   0x4421             ADD      R1,R4,R1
   \   000000CE   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000000D2   0xF811 0x1008      LDRB     R1,[R1, R8]
   \   000000D6   0x4308             ORRS     R0,R1,R0
   1350          
   1351          			oled_write_data(temp_data);
   \   000000D8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000DA   0x.... 0x....      BL       oled_write_data
   1352          		}
   \   000000DE   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??oled_print_mirror_image_2: (+1)
   \   000000E2   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000000E6   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000E8   0x45A8             CMP      R8,R5
   \   000000EA   0xDBA0             BLT.N    ??oled_print_mirror_image_1
   \   000000EC   0x1C7F             ADDS     R7,R7,#+1
   \                     ??oled_print_mirror_image_0: (+1)
   \   000000EE   0x0038             MOVS     R0,R7
   \   000000F0   0x0031             MOVS     R1,R6
   \   000000F2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000F4   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000000F6   0x4288             CMP      R0,R1
   \   000000F8   0xDA04             BGE.N    ??oled_print_mirror_image_3
   \   000000FA   0xEA5F 0x09C7      LSLS     R9,R7,#+3
   \   000000FE   0xF05F 0x0800      MOVS     R8,#+0
   \   00000102   0xE7EE             B.N      ??oled_print_mirror_image_2
   1353          	}
   1354              return;
   \                     ??oled_print_mirror_image_3: (+1)
   \   00000104   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
   1355          }

   \                                 In section .text, align 2, keep-with-next
   1356          void oled_print_std_image(uint8 u8Mode)//11.9ms
   1357          {
   \                     oled_print_std_image: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1358              oled_print_mirror_image(guc_corrected_image,64,128);
   \   00000002   0x2280             MOVS     R2,#+128
   \   00000004   0x2140             MOVS     R1,#+64
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable17
   \   0000000A   0x.... 0x....      BL       oled_print_mirror_image
   1359          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return
   1360          
   1361          
   1362                //show_image_process();
   1363          /*void oled_print_std_image(uint8 u8Mode)
   1364          {
   1365          	int16 i = 0;
   1366          	int16 j = 0;
   1367          	int16 m = 0;
   1368          	uint8 temp_data = 0;
   1369          	int16 usRowTemp = 0;
   1370          
   1371              //union ImageData* pu8ImageSource = (union ImageData*)g_carInfo.CameraInfo.u8ImageSource;    
   1372              //uint8 (*u8ImageIndex)[IMAGE_Y_MAX];   
   1373              
   1374              //u8ImageIndex = Get200to128IndexPoint();         
   1375              
   1376              
   1377          	oled_set_pos(0,0);                      // 0页，0列
   1378          	m = (uint8)(64 >> 3);             // 计算图片行数以8位为一组完整的组数，即页数
   1379          
   1380              for(i=0;i<m;i++)
   1381          	{
   1382              	usRowTemp = ((i<<3));             // 行下标，从第0行开始
   1383                  
   1384          		for(j=0;j<128;j++)
   1385          		{
   1386                      switch (u8Mode)
   1387                      {
   1388                          //case _64x200_MODE:
   1389                      default:
   1390                          //分别取行列
   1391          //                    temp_data = (g_carInfo.CameraInfo.u8ImageSource[usRowTemp][g_RowCol[usRowTemp][j]]<<0) 
   1392          //                            | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+1][g_RowCol[usRowTemp+1][j]]<<1) 
   1393          //                            | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+2][g_RowCol[usRowTemp+2][j]]<<2) 
   1394          //                            | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+3][g_RowCol[usRowTemp+3][j]]<<3)
   1395          //                            | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+4][g_RowCol[usRowTemp+4][j]]<<4)
   1396          //                            | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+5][g_RowCol[usRowTemp+5][j]]<<5) 
   1397          //                            | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+6][g_RowCol[usRowTemp+6][j]]<<6) 
   1398          //                            | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+7][g_RowCol[usRowTemp+7][j]]<<7);
   1399          //                    break;  
   1400          
   1401                              
   1402          //                    temp_data = (g_carInfo.CameraInfo.u8ImageSource[usRowTemp][g_column[j]]<<0) 
   1403          //                            | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+1][g_column[j]]<<1) 
   1404          //                            | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+2][g_column[j]]<<2) 
   1405          //                            | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+3][g_column[j]]<<3)
   1406          //                            | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+4][g_column[j]]<<4)
   1407          //                            | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+5][g_column[j]]<<5) 
   1408          //                            | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+6][g_column[j]]<<6) 
   1409          //                            | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+7][g_column[j]]<<7);
   1410          //                    break;                     
   1411                              
   1412                              
   1413                              
   1414                              temp_data = (g_carInfo.CameraInfo.u8ImageSource[usRowTemp][j*CAMERA_W/128]<<0) 
   1415                                      | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+1][j*CAMERA_W/128]<<1) 
   1416                                      | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+2][j*CAMERA_W/128]<<2) 
   1417                                      | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+3][j*CAMERA_W/128]<<3)
   1418                                      | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+4][j*CAMERA_W/128]<<4)
   1419                                      | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+5][j*CAMERA_W/128]<<5) 
   1420                                      | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+6][j*CAMERA_W/128]<<6) 
   1421                                      | (g_carInfo.CameraInfo.u8ImageSource[usRowTemp+7][j*CAMERA_W/128]<<7);
   1422                              break; 
   1423                              
   1424                              
   1425                              
   1426                              
   1427                          
   1428          //                case _64x200_MODE:
   1429          //                    temp_data = (g_carInfo.CameraInfo.u8ImageSource[g_row[usRowTemp]][j]<<0) 
   1430          //                            | (g_carInfo.CameraInfo.u8ImageSource[g_row[usRowTemp+1]][j]<<1) 
   1431          //                            | (g_carInfo.CameraInfo.u8ImageSource[g_row[usRowTemp+2]][j]<<2) 
   1432          //                            | (g_carInfo.CameraInfo.u8ImageSource[g_row[usRowTemp+3]][j]<<3)
   1433          //                            | (g_carInfo.CameraInfo.u8ImageSource[g_row[usRowTemp+4]][j]<<4)
   1434          //                            | (g_carInfo.CameraInfo.u8ImageSource[g_row[usRowTemp+5]][j]<<5) 
   1435          //                            | (g_carInfo.CameraInfo.u8ImageSource[g_row[usRowTemp+6]][j]<<6) 
   1436          //                            | (g_carInfo.CameraInfo.u8ImageSource[g_row[usRowTemp+7]][j]<<7);
   1437          //                    break;
   1438          
   1439          //                case NARROW_MODE:
   1440          //                    temp_data = (pu8ImageSource->Line[usRowTemp].NarrowLine.u8NarrowLineData[j]<<0) 
   1441          //                            | (pu8ImageSource->Line[usRowTemp+1].NarrowLine.u8NarrowLineData[j]<<1) 
   1442          //                            | (pu8ImageSource->Line[usRowTemp+2].NarrowLine.u8NarrowLineData[j]<<2) 
   1443          //                            | (pu8ImageSource->Line[usRowTemp+3].NarrowLine.u8NarrowLineData[j]<<3)
   1444          //                            | (pu8ImageSource->Line[usRowTemp+4].NarrowLine.u8NarrowLineData[j]<<4)
   1445          //                            | (pu8ImageSource->Line[usRowTemp+5].NarrowLine.u8NarrowLineData[j]<<5) 
   1446          //                            | (pu8ImageSource->Line[usRowTemp+6].NarrowLine.u8NarrowLineData[j]<<6) 
   1447          //                            | (pu8ImageSource->Line[usRowTemp+7].NarrowLine.u8NarrowLineData[j]<<7);
   1448          //                    break;
   1449          //
   1450          //                case LINER_MODE:
   1451          //                    temp_data = (pu8ImageSource->Line[usRowTemp].u8WideLineData[g_column[j]]<<0) 
   1452          //                            | (pu8ImageSource->Line[usRowTemp+1].u8WideLineData[g_column[j]]<<1) 
   1453          //                            | (pu8ImageSource->Line[usRowTemp+2].u8WideLineData[g_column[j]]<<2) 
   1454          //                            | (pu8ImageSource->Line[usRowTemp+3].u8WideLineData[g_column[j]]<<3)
   1455          //                            | (pu8ImageSource->Line[usRowTemp+4].u8WideLineData[g_column[j]]<<4)
   1456          //                            | (pu8ImageSource->Line[usRowTemp+5].u8WideLineData[g_column[j]]<<5) 
   1457          //                            | (pu8ImageSource->Line[usRowTemp+6].u8WideLineData[g_column[j]]<<6) 
   1458          //                            | (pu8ImageSource->Line[usRowTemp+7].u8WideLineData[g_column[j]]<<7);
   1459          //                    break;
   1460          
   1461          //                default : break;    
   1462           
   1463                      }
   1464                      
   1465                      oled_write_data(temp_data);
   1466          		}
   1467          	}
   1468          }*/
   1469          
   1470          /**
   1471           *  @ brief   oled_init
   1472           *
   1473           *  @ param   none
   1474           *
   1475           *	@ note    oled init
   1476           *
   1477           *	@ return  none
   1478           */

   \                                 In section .text, align 4, keep-with-next
   1479          void  oled_init(void)
   1480          {
   \                     oled_init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1481              uint8 i = 0;
   \   00000002   0x2000             MOVS     R0,#+0
   1482          
   1483          	/* 初始化引脚  */
   1484              oled_pin_init();
   \   00000004   0x.... 0x....      BL       oled_pin_init
   1485          
   1486              for(i=0;i<100;i++)
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0xE001             B.N      ??oled_init_0
   1487              {
   1488                  asm("nop");            // 从上电到下面开始初始化要有足够的时间，即等待RC复位完毕
   \                     ??oled_init_1: (+1)
   \   0000000C   0xBF00             nop
   1489              }
   \   0000000E   0x1C40             ADDS     R0,R0,#+1
   \                     ??oled_init_0: (+1)
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x2864             CMP      R0,#+100
   \   00000014   0xDBFA             BLT.N    ??oled_init_1
   1490          
   1491              /* 配置 */
   1492              //gpio_set(OLED_PORT_GET(OLED_RST),OLED_PIN_GET(OLED_RST),1);       // 复位
   1493              OLED_RST(HIGH);
   \   00000016   0x2201             MOVS     R2,#+1
   \   00000018   0x2109             MOVS     R1,#+9
   \   0000001A   0x....             LDR.N    R0,??DataTable12_2  ;; 0x400ff100
   \   0000001C   0x.... 0x....      BL       LPLD_GPIO_Output_b
   1494          
   1495              SetDisplayOnOff(0x00);     // Display Off (0x00/0x01)
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      BL       SetDisplayOnOff
   1496          
   1497              SetDisplayClock(0x80);     // Set Clock as 100 Frames/Sec
   \   00000026   0x2080             MOVS     R0,#+128
   \   00000028   0x.... 0x....      BL       SetDisplayClock
   1498          
   1499              SetMultiplexRatio(0x3F);   // 1/64 Duty (0x0F~0x3F)
   \   0000002C   0x203F             MOVS     R0,#+63
   \   0000002E   0x.... 0x....      BL       SetMultiplexRatio
   1500          
   1501              SetDisplayOffset(0x00);    // Shift Mapping RAM Countchar (0x00~0x3F)
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x.... 0x....      BL       SetDisplayOffset
   1502          
   1503              SetStartLine(0x00);        // Set Mapping RAM Display Start Line (0x00~0x3F)
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x.... 0x....      BL       SetStartLine
   1504          
   1505              SetChargePump(0x04);       // Enable Embedded DC/DC Convchartchar (0x00/0x04)
   \   0000003E   0x2004             MOVS     R0,#+4
   \   00000040   0x.... 0x....      BL       SetChargePump
   1506          
   1507              SetAddressingMode(0x00);   // Set Horizontal Addressing Mode (0x00/0x01/0x02)
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x.... 0x....      BL       SetAddressingMode
   1508          
   1509              SetSegmentRemap(0x01);     // Set SEG/Column Mapping     0x00左右反置 0x01正常
   \   0000004A   0x2001             MOVS     R0,#+1
   \   0000004C   0x.... 0x....      BL       SetSegmentRemap
   1510          
   1511              SetCommonRemap(0x08);      // Set COM/Row Scan Direction 0x00上下反置 0x08正常
   \   00000050   0x2008             MOVS     R0,#+8
   \   00000052   0x.... 0x....      BL       SetCommonRemap
   1512          
   1513              SetCommonConfig(0x10);     // Set Sequential Configuration (0x00/0x10)
   \   00000056   0x2010             MOVS     R0,#+16
   \   00000058   0x.... 0x....      BL       SetCommonConfig
   1514          
   1515              SetContrastControl(0xCF);  // Set SEG Output Current
   \   0000005C   0x20CF             MOVS     R0,#+207
   \   0000005E   0x.... 0x....      BL       SetContrastControl
   1516          
   1517              SetPrechargePchariod(0xF1);  // Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
   \   00000062   0x20F1             MOVS     R0,#+241
   \   00000064   0x.... 0x....      BL       SetPrechargePchariod
   1518          
   1519              SetVCOMH(0x40);            // Set VCOM Deselect Level
   \   00000068   0x2040             MOVS     R0,#+64
   \   0000006A   0x.... 0x....      BL       SetVCOMH
   1520          
   1521              SetEntireDisplay(0x00);    // Disable Entire Display On (0x00/0x01)
   \   0000006E   0x2000             MOVS     R0,#+0
   \   00000070   0x.... 0x....      BL       SetEntireDisplay
   1522          
   1523              SetInvcharseDisplay(0x00);   // Disable Invcharse Display On (0x00/0x01)
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0x.... 0x....      BL       SetInvcharseDisplay
   1524          
   1525              SetDisplayOnOff(0x01);     // Display On (0x00/0x01)
   \   0000007A   0x2001             MOVS     R0,#+1
   \   0000007C   0x.... 0x....      BL       SetDisplayOnOff
   1526          
   1527              oled_fill(0x00);           // 初始清屏
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x.... 0x....      BL       oled_fill
   1528          
   1529              oled_set_pos(0,0);
   \   00000086   0x2100             MOVS     R1,#+0
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x.... 0x....      BL       oled_set_pos
   1530          
   1531              return;
   \   0000008E   0xBD01             POP      {R0,PC}          ;; return
   1532          }
   1533          
   1534          /**
   1535           *  @ brief   oled_gap
   1536           *
   1537           *  @ param   none
   1538           *
   1539           *	@ note    display gap between dates
   1540           *
   1541           *	@ return  none
   1542           */

   \                                 In section .text, align 2, keep-with-next
   1543          void  oled_gap(void)
   1544          {
   \                     oled_gap: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1545          	oled_display_6x8char(63,0,'-');
   \   00000002   0x222D             MOVS     R2,#+45
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x203F             MOVS     R0,#+63
   \   00000008   0x.... 0x....      BL       oled_display_6x8char
   1546          
   1547          	oled_display_6x8char(63,2,'-');
   \   0000000C   0x222D             MOVS     R2,#+45
   \   0000000E   0x2102             MOVS     R1,#+2
   \   00000010   0x203F             MOVS     R0,#+63
   \   00000012   0x.... 0x....      BL       oled_display_6x8char
   1548          
   1549          	oled_display_6x8char(63,4,'-');
   \   00000016   0x222D             MOVS     R2,#+45
   \   00000018   0x2104             MOVS     R1,#+4
   \   0000001A   0x203F             MOVS     R0,#+63
   \   0000001C   0x.... 0x....      BL       oled_display_6x8char
   1550          
   1551          	oled_display_6x8char(63,6,'-');
   \   00000020   0x222D             MOVS     R2,#+45
   \   00000022   0x2106             MOVS     R1,#+6
   \   00000024   0x203F             MOVS     R0,#+63
   \   00000026   0x.... 0x....      BL       oled_display_6x8char
   1552           }
   \   0000002A   0xBD01             POP      {R0,PC}          ;; return
   1553          
   1554          /**
   1555           *  @ brief   oled_twink
   1556           *
   1557           *  @ param   none
   1558           *
   1559           *	@ note    twink, to remind us the oled is working
   1560           *
   1561           *	@ return  none
   1562           */

   \                                 In section .text, align 2, keep-with-next
   1563          void  oled_twink(void)
   1564          {
   \                     oled_twink: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1565          	static int8 s_num = 0;
   1566          	static int16 s_countchar = 0;
   1567          
   1568          	if(s_countchar >= TWINK_PERIOD)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   00000006   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000000A   0x2832             CMP      R0,#+50
   \   0000000C   0xDB3C             BLT.N    ??oled_twink_0
   1569          	{
   1570          		s_countchar = 0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   00000014   0x8008             STRH     R0,[R1, #+0]
   1571          		if(s_num >= 3)
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable17_2
   \   0000001A   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   0000001E   0x2803             CMP      R0,#+3
   \   00000020   0xDB1E             BLT.N    ??oled_twink_1
   \   00000022   0xE013             B.N      ??oled_twink_2
   1572          		{
   1573          			while(s_num>=0)
   1574          			{
   1575          				oled_display_6x8char((99+s_num*6),7,32);
   \                     ??oled_twink_3: (+1)
   \   00000024   0x2220             MOVS     R2,#+32
   \   00000026   0x2107             MOVS     R1,#+7
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable17_2
   \   0000002C   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000030   0x2306             MOVS     R3,#+6
   \   00000032   0xFB10 0xF003      SMULBB   R0,R0,R3
   \   00000036   0x3063             ADDS     R0,R0,#+99
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0x.... 0x....      BL       oled_display_6x8char
   1576          				s_num --;
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable17_2
   \   00000042   0x7800             LDRB     R0,[R0, #+0]
   \   00000044   0x1E40             SUBS     R0,R0,#+1
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable17_2
   \   0000004A   0x7008             STRB     R0,[R1, #+0]
   1577          			}
   \                     ??oled_twink_2: (+1)
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable17_2
   \   00000050   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000054   0x2800             CMP      R0,#+0
   \   00000056   0xD5E5             BPL.N    ??oled_twink_3
   1578          			s_num = 0;
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable17_2
   \   0000005E   0x7008             STRB     R0,[R1, #+0]
   1579          		}
   1580          		oled_display_6x8char((99+s_num*6),7,'.');
   \                     ??oled_twink_1: (+1)
   \   00000060   0x222E             MOVS     R2,#+46
   \   00000062   0x2107             MOVS     R1,#+7
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable17_2
   \   00000068   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   0000006C   0x2306             MOVS     R3,#+6
   \   0000006E   0xFB10 0xF003      SMULBB   R0,R0,R3
   \   00000072   0x3063             ADDS     R0,R0,#+99
   \   00000074   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000076   0x.... 0x....      BL       oled_display_6x8char
   1581          		s_num++;
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable17_2
   \   0000007E   0x7800             LDRB     R0,[R0, #+0]
   \   00000080   0x1C40             ADDS     R0,R0,#+1
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable17_2
   \   00000086   0x7008             STRB     R0,[R1, #+0]
   1582          	}
   1583          	s_countchar ++;
   \                     ??oled_twink_0: (+1)
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   0000008C   0x8800             LDRH     R0,[R0, #+0]
   \   0000008E   0x1C40             ADDS     R0,R0,#+1
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   00000094   0x8008             STRH     R0,[R1, #+0]
   1584           }
   \   00000096   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 1
   \                     `oled_twink::s_num`:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
   \                     `oled_twink::s_countchar`:
   \   00000000                      DS8 2
   1585          
   1586          /**
   1587           *  @ brief   oled_clear
   1588           *
   1589           *  @ param   none
   1590           *
   1591           *	@ note    clear some space
   1592           *
   1593           *	@ return  none
   1594           */

   \                                 In section .text, align 2, keep-with-next
   1595          void  oled_clear(uint8 start_x, uint8 page, uint8 clear_size)
   1596          {
   \                     oled_clear: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0017             MOVS     R7,R2
   1597          	uint8 loop_i = 0;
   \   00000008   0x2600             MOVS     R6,#+0
   1598          	for(loop_i = 0; loop_i < clear_size; loop_i ++)
   \   0000000A   0x2600             MOVS     R6,#+0
   \   0000000C   0xE00C             B.N      ??oled_clear_0
   1599          	{
   1600          		oled_display_6x8char((start_x+loop_i*6), page, 32);
   \                     ??oled_clear_1: (+1)
   \   0000000E   0x2220             MOVS     R2,#+32
   \   00000010   0x0029             MOVS     R1,R5
   \   00000012   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000014   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000016   0x2006             MOVS     R0,#+6
   \   00000018   0xFB00 0xF006      MUL      R0,R0,R6
   \   0000001C   0xFA50 0xF084      UXTAB    R0,R0,R4
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x.... 0x....      BL       oled_display_6x8char
   1601          	}
   \   00000026   0x1C76             ADDS     R6,R6,#+1
   \                     ??oled_clear_0: (+1)
   \   00000028   0x0030             MOVS     R0,R6
   \   0000002A   0x0039             MOVS     R1,R7
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000030   0x4288             CMP      R0,R1
   \   00000032   0xD3EC             BCC.N    ??oled_clear_1
   1602          }
   \   00000034   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   1603          
   1604          
   1605          

   \                                 In section .text, align 2, keep-with-next
   1606          void  oled_one_group(uint8 my_x, uint8 my_y, uint16 my_data)
   1607          {
   \                     oled_one_group: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   1608              uint8  i = 0;
   \   00000004   0x2400             MOVS     R4,#+0
   1609              uint8  j = 0;
   \   00000006   0x2500             MOVS     R5,#+0
   1610              uint8  k = 0;
   \   00000008   0x2600             MOVS     R6,#+0
   1611              uint16 data = my_data;
   1612              uint8  uc_posx = 0;
   \   0000000A   0x2700             MOVS     R7,#+0
   1613              uint8  uc_posy = 0;
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   1614          
   1615              data = my_data;
   1616          
   1617              i = (data % 1000)  / 100;
   \   00000010   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000012   0xF44F 0x737A      MOV      R3,#+1000
   \   00000016   0xFB92 0xF4F3      SDIV     R4,R2,R3
   \   0000001A   0xFB03 0x2314      MLS      R3,R3,R4,R2
   \   0000001E   0x2464             MOVS     R4,#+100
   \   00000020   0xFB93 0xF4F4      SDIV     R4,R3,R4
   1618              j = (data % 100)   / 10;
   \   00000024   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000026   0x2364             MOVS     R3,#+100
   \   00000028   0xFB92 0xF5F3      SDIV     R5,R2,R3
   \   0000002C   0xFB03 0x2315      MLS      R3,R3,R5,R2
   \   00000030   0x250A             MOVS     R5,#+10
   \   00000032   0xFB93 0xF5F5      SDIV     R5,R3,R5
   1619              k =  data % 10;
   \   00000036   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000038   0x230A             MOVS     R3,#+10
   \   0000003A   0xFB92 0xF6F3      SDIV     R6,R2,R3
   \   0000003E   0xFB03 0x2616      MLS      R6,R3,R6,R2
   1620          
   1621              switch(my_x)
   \   00000042   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD005             BEQ.N    ??oled_one_group_0
   \   00000048   0x2802             CMP      R0,#+2
   \   0000004A   0xD007             BEQ.N    ??oled_one_group_1
   \   0000004C   0xD304             BCC.N    ??oled_one_group_2
   \   0000004E   0x2803             CMP      R0,#+3
   \   00000050   0xD006             BEQ.N    ??oled_one_group_3
   \   00000052   0xE007             B.N      ??oled_one_group_4
   1622              {
   1623              	case 0 : uc_posx = 6;   break;
   \                     ??oled_one_group_0: (+1)
   \   00000054   0x2706             MOVS     R7,#+6
   \   00000056   0xE006             B.N      ??oled_one_group_5
   1624              	case 1 : uc_posx = 36;  break;
   \                     ??oled_one_group_2: (+1)
   \   00000058   0x2724             MOVS     R7,#+36
   \   0000005A   0xE004             B.N      ??oled_one_group_5
   1625              	case 2 : uc_posx = 78;  break;
   \                     ??oled_one_group_1: (+1)
   \   0000005C   0x274E             MOVS     R7,#+78
   \   0000005E   0xE002             B.N      ??oled_one_group_5
   1626              	case 3 : uc_posx = 108; break;
   \                     ??oled_one_group_3: (+1)
   \   00000060   0x276C             MOVS     R7,#+108
   \   00000062   0xE000             B.N      ??oled_one_group_5
   1627              	default: uc_posx = 0;   break;
   \                     ??oled_one_group_4: (+1)
   \   00000064   0x2700             MOVS     R7,#+0
   1628              }
   1629          
   1630              uc_posy = (uint8)2 * my_y;
   \                     ??oled_one_group_5: (+1)
   \   00000066   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000068   0xEA5F 0x0841      LSLS     R8,R1,#+1
   1631          
   1632          	oled_display_6x8char(uc_posx, uc_posy, 32);
   \   0000006C   0x2220             MOVS     R2,#+32
   \   0000006E   0x4641             MOV      R1,R8
   \   00000070   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000072   0x0038             MOVS     R0,R7
   \   00000074   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000076   0x.... 0x....      BL       oled_display_6x8char
   1633          	oled_display_6x8char(uc_posx+6, uc_posy, 32);
   \   0000007A   0x2220             MOVS     R2,#+32
   \   0000007C   0x4641             MOV      R1,R8
   \   0000007E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000080   0x1DB8             ADDS     R0,R7,#+6
   \   00000082   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000084   0x.... 0x....      BL       oled_display_6x8char
   1634          	oled_display_6x8char(uc_posx+12, uc_posy, 32);
   \   00000088   0x2220             MOVS     R2,#+32
   \   0000008A   0x4641             MOV      R1,R8
   \   0000008C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000008E   0xF117 0x000C      ADDS     R0,R7,#+12
   \   00000092   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000094   0x.... 0x....      BL       oled_display_6x8char
   1635          
   1636              if(i != 0)
   \   00000098   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000009A   0x2C00             CMP      R4,#+0
   \   0000009C   0xD01C             BEQ.N    ??oled_one_group_6
   1637              {
   1638              	oled_display_6x8char(uc_posx, uc_posy, i+48);
   \   0000009E   0xF114 0x0230      ADDS     R2,R4,#+48
   \   000000A2   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000A4   0x4641             MOV      R1,R8
   \   000000A6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A8   0x0038             MOVS     R0,R7
   \   000000AA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AC   0x.... 0x....      BL       oled_display_6x8char
   1639              	oled_display_6x8char(uc_posx+6, uc_posy, j+48);
   \   000000B0   0xF115 0x0230      ADDS     R2,R5,#+48
   \   000000B4   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000B6   0x4641             MOV      R1,R8
   \   000000B8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000BA   0x1DB8             ADDS     R0,R7,#+6
   \   000000BC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000BE   0x.... 0x....      BL       oled_display_6x8char
   1640              	oled_display_6x8char(uc_posx+12, uc_posy, k+48);
   \   000000C2   0xF116 0x0230      ADDS     R2,R6,#+48
   \   000000C6   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000C8   0x4641             MOV      R1,R8
   \   000000CA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000CC   0xF117 0x000C      ADDS     R0,R7,#+12
   \   000000D0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D2   0x.... 0x....      BL       oled_display_6x8char
   \   000000D6   0xE029             B.N      ??oled_one_group_7
   1641              }
   1642              else if((i == 0) && (j != 0))
   \                     ??oled_one_group_6: (+1)
   \   000000D8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000DA   0x2C00             CMP      R4,#+0
   \   000000DC   0xD116             BNE.N    ??oled_one_group_8
   \   000000DE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000E0   0x2D00             CMP      R5,#+0
   \   000000E2   0xD013             BEQ.N    ??oled_one_group_8
   1643              {
   1644              	oled_display_6x8char(uc_posx+6, uc_posy, j+48);
   \   000000E4   0xF115 0x0230      ADDS     R2,R5,#+48
   \   000000E8   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000EA   0x4641             MOV      R1,R8
   \   000000EC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000EE   0x1DB8             ADDS     R0,R7,#+6
   \   000000F0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000F2   0x.... 0x....      BL       oled_display_6x8char
   1645          		oled_display_6x8char(uc_posx+12, uc_posy, k+48);
   \   000000F6   0xF116 0x0230      ADDS     R2,R6,#+48
   \   000000FA   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000FC   0x4641             MOV      R1,R8
   \   000000FE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000100   0xF117 0x000C      ADDS     R0,R7,#+12
   \   00000104   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000106   0x.... 0x....      BL       oled_display_6x8char
   \   0000010A   0xE00F             B.N      ??oled_one_group_7
   1646              }
   1647              else if((i == 0) && (j == 0))
   \                     ??oled_one_group_8: (+1)
   \   0000010C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000010E   0x2C00             CMP      R4,#+0
   \   00000110   0xD10C             BNE.N    ??oled_one_group_7
   \   00000112   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000114   0x2D00             CMP      R5,#+0
   \   00000116   0xD109             BNE.N    ??oled_one_group_7
   1648              {
   1649          		oled_display_6x8char(uc_posx+12, uc_posy, k+48);
   \   00000118   0xF116 0x0230      ADDS     R2,R6,#+48
   \   0000011C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000011E   0x4641             MOV      R1,R8
   \   00000120   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000122   0xF117 0x000C      ADDS     R0,R7,#+12
   \   00000126   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000128   0x.... 0x....      BL       oled_display_6x8char
   1650              }
   1651          }
   \                     ??oled_one_group_7: (+1)
   \   0000012C   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
   1652          
   1653          /*------------------------------------------------------------------
   1654          *Function Name:     oled_my_show
   1655          *Parameter(s):      uint8 my_x, uint8 my_y, int16 mydata
   1656          *Return:            None
   1657          *Description:       将一行分为4个位置，x范围0~3，y范围0~7
   1658          -----------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1659          void oled_my_show(uint8 my_x, uint8 my_y, int16 mydata)
   1660          {
   \                     oled_my_show: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0016             MOVS     R6,R2
   1661              uint16 i, j, k, us_data;
   1662              uint8  uc_posx = 0;
   \   00000004   0x2400             MOVS     R4,#+0
   1663              uint8  uc_posy = 0;
   \   00000006   0x2500             MOVS     R5,#+0
   1664          
   1665              switch(my_x)
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD005             BEQ.N    ??oled_my_show_0
   \   0000000E   0x2802             CMP      R0,#+2
   \   00000010   0xD007             BEQ.N    ??oled_my_show_1
   \   00000012   0xD304             BCC.N    ??oled_my_show_2
   \   00000014   0x2803             CMP      R0,#+3
   \   00000016   0xD006             BEQ.N    ??oled_my_show_3
   \   00000018   0xE007             B.N      ??oled_my_show_4
   1666              {
   1667              	case 0 : uc_posx = 0;   break;
   \                     ??oled_my_show_0: (+1)
   \   0000001A   0x2400             MOVS     R4,#+0
   \   0000001C   0xE006             B.N      ??oled_my_show_5
   1668              	case 1 : uc_posx = 36;  break;
   \                     ??oled_my_show_2: (+1)
   \   0000001E   0x2424             MOVS     R4,#+36
   \   00000020   0xE004             B.N      ??oled_my_show_5
   1669              	case 2 : uc_posx = 72;  break;
   \                     ??oled_my_show_1: (+1)
   \   00000022   0x2448             MOVS     R4,#+72
   \   00000024   0xE002             B.N      ??oled_my_show_5
   1670              	case 3 : uc_posx = 102; break;
   \                     ??oled_my_show_3: (+1)
   \   00000026   0x2466             MOVS     R4,#+102
   \   00000028   0xE000             B.N      ??oled_my_show_5
   1671              	default: uc_posx = 0;   break;
   \                     ??oled_my_show_4: (+1)
   \   0000002A   0x2400             MOVS     R4,#+0
   1672              }
   1673          
   1674              uc_posy = my_y;
   \                     ??oled_my_show_5: (+1)
   \   0000002C   0x000D             MOVS     R5,R1
   1675          
   1676              if(uc_posy > 7)
   \   0000002E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000030   0x2D08             CMP      R5,#+8
   \   00000032   0xDB00             BLT.N    ??oled_my_show_6
   1677                  uc_posy = 7;
   \   00000034   0x2507             MOVS     R5,#+7
   1678          
   1679              if(mydata < 0)
   \                     ??oled_my_show_6: (+1)
   \   00000036   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000038   0x2E00             CMP      R6,#+0
   \   0000003A   0xD509             BPL.N    ??oled_my_show_7
   1680              {
   1681              	oled_display_6x8char(uc_posx,uc_posy,'-');
   \   0000003C   0x222D             MOVS     R2,#+45
   \   0000003E   0x0029             MOVS     R1,R5
   \   00000040   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000042   0x0020             MOVS     R0,R4
   \   00000044   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000046   0x.... 0x....      BL       oled_display_6x8char
   1682                  us_data = (uint16)(-mydata);
   \   0000004A   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   0000004C   0x4276             RSBS     R6,R6,#+0
   \   0000004E   0xE007             B.N      ??oled_my_show_8
   1683              }
   1684              else
   1685              {
   1686              	oled_display_6x8char(uc_posx,uc_posy,'+');
   \                     ??oled_my_show_7: (+1)
   \   00000050   0x222B             MOVS     R2,#+43
   \   00000052   0x0029             MOVS     R1,R5
   \   00000054   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000056   0x0020             MOVS     R0,R4
   \   00000058   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005A   0x.... 0x....      BL       oled_display_6x8char
   1687                  us_data = (uint16)mydata;
   \   0000005E   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   1688              }
   1689          
   1690          
   1691              i = (us_data % 1000)  / 100;
   \                     ??oled_my_show_8: (+1)
   \   00000060   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000062   0xF44F 0x707A      MOV      R0,#+1000
   \   00000066   0xFB96 0xF1F0      SDIV     R1,R6,R0
   \   0000006A   0xFB00 0x6011      MLS      R0,R0,R1,R6
   \   0000006E   0x2164             MOVS     R1,#+100
   \   00000070   0xFB90 0xF0F1      SDIV     R0,R0,R1
   1692              j = (us_data % 100)   / 10;
   \   00000074   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000076   0x2164             MOVS     R1,#+100
   \   00000078   0xFB96 0xF2F1      SDIV     R2,R6,R1
   \   0000007C   0xFB01 0x6112      MLS      R1,R1,R2,R6
   \   00000080   0x220A             MOVS     R2,#+10
   \   00000082   0xFB91 0xF7F2      SDIV     R7,R1,R2
   1693              k =  us_data % 10;
   \   00000086   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000088   0x210A             MOVS     R1,#+10
   \   0000008A   0xFB96 0xF2F1      SDIV     R2,R6,R1
   \   0000008E   0xFB01 0x6612      MLS      R6,R1,R2,R6
   1694          
   1695              oled_display_6x8char(uc_posx+6,  uc_posy, i+48);
   \   00000092   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000096   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000098   0x0029             MOVS     R1,R5
   \   0000009A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000009C   0x1DA0             ADDS     R0,R4,#+6
   \   0000009E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A0   0x.... 0x....      BL       oled_display_6x8char
   1696              oled_display_6x8char(uc_posx+12, uc_posy, j+48);
   \   000000A4   0xF117 0x0230      ADDS     R2,R7,#+48
   \   000000A8   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000AA   0x0029             MOVS     R1,R5
   \   000000AC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000AE   0xF114 0x000C      ADDS     R0,R4,#+12
   \   000000B2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B4   0x.... 0x....      BL       oled_display_6x8char
   1697              oled_display_6x8char(uc_posx+18, uc_posy, k+48);
   \   000000B8   0xF116 0x0230      ADDS     R2,R6,#+48
   \   000000BC   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000BE   0x0029             MOVS     R1,R5
   \   000000C0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C2   0xF114 0x0012      ADDS     R0,R4,#+18
   \   000000C6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C8   0x.... 0x....      BL       oled_display_6x8char
   1698          
   1699              return;
   \   000000CC   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   1700          }
   1701          
   1702          /**********
   1703          *CCD图像信息显示
   1704          **********
   1705          void oled_display_image(CCD_STRUCT *pccd)
   1706          {
   1707          	uint8 pos_x = 0, pos_y = 0;
   1708          
   1709          	for(pos_y = 0;pos_y<128;pos_y++)
   1710          	{
   1711          		pos_x = (pccd->image[pos_y]*64)/255;
   1712          		oled_set_pos(pos_x,pos_y);
   1713          		oled_write_data(0x80);
   1714          	}
   1715          }*/
   1716          

   \                                 In section .text, align 2, keep-with-next
   1717          void oled_display_6x8char_hl(uint8 uc_posx, uint8 uc_posy, char uc_data)
   1718          {
   \                     oled_display_6x8char_hl: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0014             MOVS     R4,R2
   1719              uint8 i, uc_dataTmp;
   1720          
   1721              uc_dataTmp = uc_data;
   1722              if(uc_posx > 122)
   \   00000004   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000006   0x287B             CMP      R0,#+123
   \   00000008   0xDB01             BLT.N    ??oled_display_6x8char_hl_0
   1723              {
   1724                  uc_posx = 0;
   \   0000000A   0x2000             MOVS     R0,#+0
   1725                  uc_posy ++;
   \   0000000C   0x1C49             ADDS     R1,R1,#+1
   1726              }
   1727          
   1728              oled_set_pos(uc_posx, uc_posy);
   \                     ??oled_display_6x8char_hl_0: (+1)
   \   0000000E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x.... 0x....      BL       oled_set_pos
   1729          
   1730              for(i = 0; i < 6; i++)
   \   00000016   0x2500             MOVS     R5,#+0
   \   00000018   0xE00C             B.N      ??oled_display_6x8char_hl_1
   1731              {
   1732                  oled_write_data((~F6x8[uc_dataTmp][i]));
   \                     ??oled_display_6x8char_hl_2: (+1)
   \   0000001A   0x....             LDR.N    R0,??DataTable14
   \   0000001C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001E   0x2106             MOVS     R1,#+6
   \   00000020   0xFB01 0xF104      MUL      R1,R1,R4
   \   00000024   0x4408             ADD      R0,R0,R1
   \   00000026   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000028   0x5D40             LDRB     R0,[R0, R5]
   \   0000002A   0x43C0             MVNS     R0,R0
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x.... 0x....      BL       oled_write_data
   1733              }
   \   00000032   0x1C6D             ADDS     R5,R5,#+1
   \                     ??oled_display_6x8char_hl_1: (+1)
   \   00000034   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000036   0x2D06             CMP      R5,#+6
   \   00000038   0xDBEF             BLT.N    ??oled_display_6x8char_hl_2
   1734          }
   \   0000003A   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
   1735          void oled_display_6x8str_hl(uint8 uc_posx, uint8 uc_posy, char uc_dataStr[])
   1736          {
   \                     oled_display_6x8str_hl: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   1737              uint8 i, j, uc_dataTmp;
   1738          
   1739              for (j = 0; uc_dataStr[j] != '\0'; j++)
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xE017             B.N      ??oled_display_6x8str_hl_0
   1740              {
   1741                  uc_dataTmp = uc_dataStr[j];
   1742          
   1743                  if(uc_posx > 122)
   1744                  {
   1745                      uc_posx = 0;
   1746                      uc_posy++;
   1747                  }
   1748          
   1749                  oled_set_pos(uc_posx,uc_posy);
   1750          
   1751                  for(i = 0; i < 6; i++)
   1752                  {
   1753                      oled_write_data((~F6x8[uc_dataTmp][i]));
   \                     ??oled_display_6x8str_hl_1: (+1)
   \   0000000E   0x....             LDR.N    R0,??DataTable14
   \   00000010   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000014   0x2106             MOVS     R1,#+6
   \   00000016   0xFB01 0xF109      MUL      R1,R1,R9
   \   0000001A   0x4408             ADD      R0,R0,R1
   \   0000001C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000020   0xF810 0x0008      LDRB     R0,[R0, R8]
   \   00000024   0x43C0             MVNS     R0,R0
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0x.... 0x....      BL       oled_write_data
   1754                  }
   \   0000002C   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??oled_display_6x8str_hl_2: (+1)
   \   00000030   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000034   0xF1B8 0x0F06      CMP      R8,#+6
   \   00000038   0xDBE9             BLT.N    ??oled_display_6x8str_hl_1
   1755          
   1756                  uc_posx += 6;
   \   0000003A   0x1DA4             ADDS     R4,R4,#+6
   \   0000003C   0x1C7F             ADDS     R7,R7,#+1
   \                     ??oled_display_6x8str_hl_0: (+1)
   \   0000003E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000040   0x5DF0             LDRB     R0,[R6, R7]
   \   00000042   0x2800             CMP      R0,#+0
   \   00000044   0xD010             BEQ.N    ??oled_display_6x8str_hl_3
   \   00000046   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000048   0xF816 0x9007      LDRB     R9,[R6, R7]
   \   0000004C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004E   0x2C7B             CMP      R4,#+123
   \   00000050   0xDB01             BLT.N    ??oled_display_6x8str_hl_4
   \   00000052   0x2400             MOVS     R4,#+0
   \   00000054   0x1C6D             ADDS     R5,R5,#+1
   \                     ??oled_display_6x8str_hl_4: (+1)
   \   00000056   0x0029             MOVS     R1,R5
   \   00000058   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005A   0x0020             MOVS     R0,R4
   \   0000005C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005E   0x.... 0x....      BL       oled_set_pos
   \   00000062   0xF05F 0x0800      MOVS     R8,#+0
   \   00000066   0xE7E3             B.N      ??oled_display_6x8str_hl_2
   1757              }
   1758          
   1759              return;
   \                     ??oled_display_6x8str_hl_3: (+1)
   \   00000068   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
   1760          }
   1761          

   \                                 In section .text, align 2, keep-with-next
   1762          void oled_print_char_hl(uint8 uc_posx, uint8 uc_posy, int8 c_data)
   1763          {
   \                     oled_print_char_hl: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   1764              uint16 i, j, k, us_data;
   1765          
   1766              if(c_data < 0)
   \   00000008   0xB276             SXTB     R6,R6            ;; SignExt  R6,R6,#+24,#+24
   \   0000000A   0x2E00             CMP      R6,#+0
   \   0000000C   0xD509             BPL.N    ??oled_print_char_hl_0
   1767              {
   1768              	oled_display_6x8char_hl(uc_posx, uc_posy, '-');
   \   0000000E   0x222D             MOVS     R2,#+45
   \   00000010   0x0029             MOVS     R1,R5
   \   00000012   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       oled_display_6x8char_hl
   1769                  us_data = (uint16)(-c_data);
   \   0000001C   0xB276             SXTB     R6,R6            ;; SignExt  R6,R6,#+24,#+24
   \   0000001E   0x4276             RSBS     R6,R6,#+0
   \   00000020   0xE007             B.N      ??oled_print_char_hl_1
   1770              }
   1771              else
   1772              {
   1773              	oled_display_6x8char_hl(uc_posx, uc_posy, '+');
   \                     ??oled_print_char_hl_0: (+1)
   \   00000022   0x222B             MOVS     R2,#+43
   \   00000024   0x0029             MOVS     R1,R5
   \   00000026   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000028   0x0020             MOVS     R0,R4
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x.... 0x....      BL       oled_display_6x8char_hl
   1774                  us_data = (uint16)c_data;
   \   00000030   0xB276             SXTB     R6,R6            ;; SignExt  R6,R6,#+24,#+24
   1775              }
   1776          
   1777              i =  us_data / 100;
   \                     ??oled_print_char_hl_1: (+1)
   \   00000032   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000034   0x2064             MOVS     R0,#+100
   \   00000036   0xFB96 0xF0F0      SDIV     R0,R6,R0
   1778              j = (us_data % 100) / 10;
   \   0000003A   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000003C   0x2164             MOVS     R1,#+100
   \   0000003E   0xFB96 0xF2F1      SDIV     R2,R6,R1
   \   00000042   0xFB01 0x6112      MLS      R1,R1,R2,R6
   \   00000046   0x220A             MOVS     R2,#+10
   \   00000048   0xFB91 0xF7F2      SDIV     R7,R1,R2
   1779              k =  us_data % 10;
   \   0000004C   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000004E   0x210A             MOVS     R1,#+10
   \   00000050   0xFB96 0xF2F1      SDIV     R2,R6,R1
   \   00000054   0xFB01 0x6612      MLS      R6,R1,R2,R6
   1780          
   1781              oled_display_6x8char_hl(uc_posx+6, uc_posy, i+48);
   \   00000058   0xF110 0x0230      ADDS     R2,R0,#+48
   \   0000005C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000005E   0x0029             MOVS     R1,R5
   \   00000060   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000062   0x1DA0             ADDS     R0,R4,#+6
   \   00000064   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000066   0x.... 0x....      BL       oled_display_6x8char_hl
   1782              oled_display_6x8char_hl(uc_posx+12, uc_posy, j+48);
   \   0000006A   0xF117 0x0230      ADDS     R2,R7,#+48
   \   0000006E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000070   0x0029             MOVS     R1,R5
   \   00000072   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000074   0xF114 0x000C      ADDS     R0,R4,#+12
   \   00000078   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007A   0x.... 0x....      BL       oled_display_6x8char_hl
   1783              oled_display_6x8char_hl(uc_posx+18, uc_posy, k+48);
   \   0000007E   0xF116 0x0230      ADDS     R2,R6,#+48
   \   00000082   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000084   0x0029             MOVS     R1,R5
   \   00000086   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000088   0xF114 0x0012      ADDS     R0,R4,#+18
   \   0000008C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008E   0x.... 0x....      BL       oled_display_6x8char_hl
   1784          
   1785              return;
   \   00000092   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   1786          }

   \                                 In section .text, align 2, keep-with-next
   1787          void oled_print_short_hl(uint8 uc_posx, uint8 uc_posy, int16 s_data, int8 bits_num)
   1788          {
   \                     oled_print_short_hl: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x4693             MOV      R11,R2
   \   0000000A   0x001E             MOVS     R6,R3
   1789              uint16 i, j, k, l, m, us_data;
   1790          
   1791              if(s_data < 0)
   \   0000000C   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000010   0xF1BB 0x0F00      CMP      R11,#+0
   \   00000014   0xD50B             BPL.N    ??oled_print_short_hl_0
   1792              {
   1793              	oled_display_6x8char(uc_posx,uc_posy,'-');
   \   00000016   0x222D             MOVS     R2,#+45
   \   00000018   0x0029             MOVS     R1,R5
   \   0000001A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001C   0x0020             MOVS     R0,R4
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0x.... 0x....      BL       oled_display_6x8char
   1794                  us_data = (uint16)(-s_data);
   \   00000024   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000028   0xF1DB 0x0B00      RSBS     R11,R11,#+0
   \   0000002C   0xE008             B.N      ??oled_print_short_hl_1
   1795              }
   1796              else
   1797              {
   1798              	oled_display_6x8char(uc_posx,uc_posy,'+');
   \                     ??oled_print_short_hl_0: (+1)
   \   0000002E   0x222B             MOVS     R2,#+43
   \   00000030   0x0029             MOVS     R1,R5
   \   00000032   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000034   0x0020             MOVS     R0,R4
   \   00000036   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000038   0x.... 0x....      BL       oled_display_6x8char
   1799                  us_data = (uint16)s_data;
   \   0000003C   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   1800              }
   1801          
   1802              l =  us_data          / 10000;
   \                     ??oled_print_short_hl_1: (+1)
   \   00000040   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000044   0xF242 0x7010      MOVW     R0,#+10000
   \   00000048   0xFB9B 0xF7F0      SDIV     R7,R11,R0
   1803              m = (us_data % 10000) / 1000;
   \   0000004C   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000050   0xF242 0x7010      MOVW     R0,#+10000
   \   00000054   0xFB9B 0xF1F0      SDIV     R1,R11,R0
   \   00000058   0xFB00 0xB011      MLS      R0,R0,R1,R11
   \   0000005C   0xF44F 0x717A      MOV      R1,#+1000
   \   00000060   0xFB90 0xF8F1      SDIV     R8,R0,R1
   1804              i = (us_data % 1000)  / 100;
   \   00000064   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000068   0xF44F 0x707A      MOV      R0,#+1000
   \   0000006C   0xFB9B 0xF1F0      SDIV     R1,R11,R0
   \   00000070   0xFB00 0xB011      MLS      R0,R0,R1,R11
   \   00000074   0x2164             MOVS     R1,#+100
   \   00000076   0xFB90 0xF9F1      SDIV     R9,R0,R1
   1805              j = (us_data % 100)   / 10;
   \   0000007A   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   0000007E   0x2064             MOVS     R0,#+100
   \   00000080   0xFB9B 0xF1F0      SDIV     R1,R11,R0
   \   00000084   0xFB00 0xB011      MLS      R0,R0,R1,R11
   \   00000088   0x210A             MOVS     R1,#+10
   \   0000008A   0xFB90 0xFAF1      SDIV     R10,R0,R1
   1806              k =  us_data % 10;
   \   0000008E   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000092   0x200A             MOVS     R0,#+10
   \   00000094   0xFB9B 0xF1F0      SDIV     R1,R11,R0
   \   00000098   0xFB00 0xBB11      MLS      R11,R0,R1,R11
   1807          
   1808              oled_display_6x8char(uc_posx+6,  uc_posy, l+48);
   \   0000009C   0xF117 0x0230      ADDS     R2,R7,#+48
   \   000000A0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000A2   0x0029             MOVS     R1,R5
   \   000000A4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A6   0x1DA0             ADDS     R0,R4,#+6
   \   000000A8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AA   0x.... 0x....      BL       oled_display_6x8char
   1809              oled_display_6x8char(uc_posx+12, uc_posy, m+48);
   \   000000AE   0xF118 0x0230      ADDS     R2,R8,#+48
   \   000000B2   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000B4   0x0029             MOVS     R1,R5
   \   000000B6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B8   0xF114 0x000C      ADDS     R0,R4,#+12
   \   000000BC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000BE   0x.... 0x....      BL       oled_display_6x8char
   1810              oled_display_6x8char(uc_posx+18, uc_posy, i+48);
   \   000000C2   0xF119 0x0230      ADDS     R2,R9,#+48
   \   000000C6   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000C8   0x0029             MOVS     R1,R5
   \   000000CA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000CC   0xF114 0x0012      ADDS     R0,R4,#+18
   \   000000D0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D2   0x.... 0x....      BL       oled_display_6x8char
   1811              oled_display_6x8char(uc_posx+24, uc_posy, j+48);
   \   000000D6   0xF11A 0x0230      ADDS     R2,R10,#+48
   \   000000DA   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000DC   0x0029             MOVS     R1,R5
   \   000000DE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000E0   0xF114 0x0018      ADDS     R0,R4,#+24
   \   000000E4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E6   0x.... 0x....      BL       oled_display_6x8char
   1812              oled_display_6x8char(uc_posx+30, uc_posy, k+48);
   \   000000EA   0xF11B 0x0230      ADDS     R2,R11,#+48
   \   000000EE   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000F0   0x0029             MOVS     R1,R5
   \   000000F2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000F4   0xF114 0x001E      ADDS     R0,R4,#+30
   \   000000F8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000FA   0x.... 0x....      BL       oled_display_6x8char
   1813          
   1814              switch(bits_num)
   \   000000FE   0xB276             SXTB     R6,R6            ;; SignExt  R6,R6,#+24,#+24
   \   00000100   0x2E01             CMP      R6,#+1
   \   00000102   0xD007             BEQ.N    ??oled_print_short_hl_2
   \   00000104   0xD33C             BCC.N    ??oled_print_short_hl_3
   \   00000106   0x2E03             CMP      R6,#+3
   \   00000108   0xD019             BEQ.N    ??oled_print_short_hl_4
   \   0000010A   0xD30D             BCC.N    ??oled_print_short_hl_5
   \   0000010C   0x2E05             CMP      R6,#+5
   \   0000010E   0xD02C             BEQ.N    ??oled_print_short_hl_6
   \   00000110   0xD320             BCC.N    ??oled_print_short_hl_7
   \   00000112   0xE035             B.N      ??oled_print_short_hl_3
   1815              {
   1816              	case 1: oled_display_6x8char_hl(uc_posx+6,  uc_posy, l+48);
   \                     ??oled_print_short_hl_2: (+1)
   \   00000114   0xF117 0x0230      ADDS     R2,R7,#+48
   \   00000118   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000011A   0x0029             MOVS     R1,R5
   \   0000011C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000011E   0x1DA0             ADDS     R0,R4,#+6
   \   00000120   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000122   0x.... 0x....      BL       oled_display_6x8char_hl
   1817              	        break;
   \   00000126   0xE02B             B.N      ??oled_print_short_hl_8
   1818              	case 2: oled_display_6x8char_hl(uc_posx+12, uc_posy, m+48);
   \                     ??oled_print_short_hl_5: (+1)
   \   00000128   0xF118 0x0230      ADDS     R2,R8,#+48
   \   0000012C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000012E   0x0029             MOVS     R1,R5
   \   00000130   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000132   0xF114 0x000C      ADDS     R0,R4,#+12
   \   00000136   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000138   0x.... 0x....      BL       oled_display_6x8char_hl
   1819              	        break;
   \   0000013C   0xE020             B.N      ??oled_print_short_hl_8
   1820                  case 3: oled_display_6x8char_hl(uc_posx+18, uc_posy, i+48);
   \                     ??oled_print_short_hl_4: (+1)
   \   0000013E   0xF119 0x0230      ADDS     R2,R9,#+48
   \   00000142   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000144   0x0029             MOVS     R1,R5
   \   00000146   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000148   0xF114 0x0012      ADDS     R0,R4,#+18
   \   0000014C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000014E   0x.... 0x....      BL       oled_display_6x8char_hl
   1821              	        break;
   \   00000152   0xE015             B.N      ??oled_print_short_hl_8
   1822                 	case 4: oled_display_6x8char_hl(uc_posx+24, uc_posy, j+48);
   \                     ??oled_print_short_hl_7: (+1)
   \   00000154   0xF11A 0x0230      ADDS     R2,R10,#+48
   \   00000158   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000015A   0x0029             MOVS     R1,R5
   \   0000015C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000015E   0xF114 0x0018      ADDS     R0,R4,#+24
   \   00000162   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000164   0x.... 0x....      BL       oled_display_6x8char_hl
   1823              	        break;
   \   00000168   0xE00A             B.N      ??oled_print_short_hl_8
   1824                  case 5: oled_display_6x8char_hl(uc_posx+30, uc_posy, k+48);
   \                     ??oled_print_short_hl_6: (+1)
   \   0000016A   0xF11B 0x0230      ADDS     R2,R11,#+48
   \   0000016E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000170   0x0029             MOVS     R1,R5
   \   00000172   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000174   0xF114 0x001E      ADDS     R0,R4,#+30
   \   00000178   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000017A   0x.... 0x....      BL       oled_display_6x8char_hl
   1825              	        break;
   \   0000017E   0xE7FF             B.N      ??oled_print_short_hl_8
   1826              	default: break;
   1827              }
   1828          
   1829              return;
   \                     ??oled_print_short_hl_3: (+1)
   \                     ??oled_print_short_hl_8: (+1)
   \   00000180   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
   1830          }
   1831          
   1832          //显示汉字

   \                                 In section .text, align 2, keep-with-next
   1833          void oled_display_chinese(uint8 uc_posx, uint8 uc_posy, uint8 Chinese_str_num, enum OLED_LIGHT_MODE mode)
   1834          {
   \                     oled_display_chinese: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   1835              uint8 i = 0, uc_dataTmp = 0;
   \   00000008   0xF05F 0x0800      MOVS     R8,#+0
   \   0000000C   0xF05F 0x0900      MOVS     R9,#+0
   1836          	uint16 j = 0, start_char = 0, end_char = 0;
   \   00000010   0x2700             MOVS     R7,#+0
   \   00000012   0x2700             MOVS     R7,#+0
   \   00000014   0x2600             MOVS     R6,#+0
   1837          
   1838          	switch (Chinese_str_num)
   \   00000016   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000018   0x2A00             CMP      R2,#+0
   \   0000001A   0xD009             BEQ.N    ??oled_display_chinese_0
   \   0000001C   0x2A02             CMP      R2,#+2
   \   0000001E   0xD00D             BEQ.N    ??oled_display_chinese_1
   \   00000020   0xD309             BCC.N    ??oled_display_chinese_2
   \   00000022   0x2A04             CMP      R2,#+4
   \   00000024   0xD010             BEQ.N    ??oled_display_chinese_3
   \   00000026   0xD30C             BCC.N    ??oled_display_chinese_4
   \   00000028   0x2A06             CMP      R2,#+6
   \   0000002A   0xD013             BEQ.N    ??oled_display_chinese_5
   \   0000002C   0xD30F             BCC.N    ??oled_display_chinese_6
   \   0000002E   0xE014             B.N      ??oled_display_chinese_7
   1839          	{
   1840          		//华中科技大学
   1841          		case HUST_UNIVERSITY:
   1842          			start_char = 0;
   \                     ??oled_display_chinese_0: (+1)
   \   00000030   0x2700             MOVS     R7,#+0
   1843          			end_char = 5;
   \   00000032   0x2605             MOVS     R6,#+5
   1844          			break;
   \   00000034   0xE011             B.N      ??oled_display_chinese_8
   1845          		//信标
   1846          		case SMART_BEACON:
   1847          			start_char = 6;
   \                     ??oled_display_chinese_2: (+1)
   \   00000036   0x2706             MOVS     R7,#+6
   1848          			end_char = 8;
   \   00000038   0x2608             MOVS     R6,#+8
   1849          			break;
   \   0000003A   0xE00E             B.N      ??oled_display_chinese_8
   1850          		//调参
   1851          		case SET_PARAM:
   1852          			start_char = 9;
   \                     ??oled_display_chinese_1: (+1)
   \   0000003C   0x2709             MOVS     R7,#+9
   1853          			end_char = 10;
   \   0000003E   0x260A             MOVS     R6,#+10
   1854          			break;
   \   00000040   0xE00B             B.N      ??oled_display_chinese_8
   1855          		//测试
   1856          		case HARDWARE_TEST:
   1857          			start_char = 11;
   \                     ??oled_display_chinese_4: (+1)
   \   00000042   0x270B             MOVS     R7,#+11
   1858          			end_char = 12;
   \   00000044   0x260C             MOVS     R6,#+12
   1859          			break;
   \   00000046   0xE008             B.N      ??oled_display_chinese_8
   1860          		//图像
   1861          		case DISPLAY_IMAGE:
   1862          			start_char = 13;
   \                     ??oled_display_chinese_3: (+1)
   \   00000048   0x270D             MOVS     R7,#+13
   1863          			end_char = 14;
   \   0000004A   0x260E             MOVS     R6,#+14
   1864          			break;
   \   0000004C   0xE005             B.N      ??oled_display_chinese_8
   1865          		//飙车
   1866          		case CAR_RUNNING:
   1867          			start_char = 15;
   \                     ??oled_display_chinese_6: (+1)
   \   0000004E   0x270F             MOVS     R7,#+15
   1868          			end_char = 16;
   \   00000050   0x2610             MOVS     R6,#+16
   1869          			break;
   \   00000052   0xE002             B.N      ??oled_display_chinese_8
   1870                          //薛博阳
   1871                          case XUE_BOYANG:
   1872                                  start_char = 17;
   \                     ??oled_display_chinese_5: (+1)
   \   00000054   0x2711             MOVS     R7,#+17
   1873          			end_char = 19;
   \   00000056   0x2613             MOVS     R6,#+19
   1874          			break;
   \   00000058   0xE7FF             B.N      ??oled_display_chinese_8
   1875          		default:
   1876          			break;
   1877          	}
   1878          
   1879          	if (mode == LOW_LIGHT_MODE)
   \                     ??oled_display_chinese_7: (+1)
   \                     ??oled_display_chinese_8: (+1)
   \   0000005A   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000005C   0x2B00             CMP      R3,#+0
   \   0000005E   0xD141             BNE.N    ??oled_display_chinese_9
   1880          	{
   1881          		for (j=start_char ; j<=end_char ; j++)
   \   00000060   0xE014             B.N      ??oled_display_chinese_10
   1882          		{
   1883          			uc_dataTmp = j;
   1884          
   1885          			oled_set_pos(uc_posx,uc_posy);
   1886          
   1887          			for (i=0 ; i<16 ; i++)
   1888          			{
   1889          				oled_write_data(OLED_16X8GB2312[uc_dataTmp][i]);
   1890          			}
   1891          
   1892          			oled_set_pos(uc_posx,uc_posy+1);
   1893          
   1894          			for (i=16 ; i<32 ; i++)
   1895          			{
   1896          				oled_write_data(OLED_16X8GB2312[uc_dataTmp][i]);
   \                     ??oled_display_chinese_11: (+1)
   \   00000062   0x....             LDR.N    R0,??DataTable17_3
   \   00000064   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000068   0xEA5F 0x1149      LSLS     R1,R9,#+5
   \   0000006C   0x4408             ADD      R0,R0,R1
   \   0000006E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000072   0xF810 0x0008      LDRB     R0,[R0, R8]
   \   00000076   0x.... 0x....      BL       oled_write_data
   1897          			}
   \   0000007A   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??oled_display_chinese_12: (+1)
   \   0000007E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000082   0xF1B8 0x0F20      CMP      R8,#+32
   \   00000086   0xDBEC             BLT.N    ??oled_display_chinese_11
   1898          
   1899          			uc_posx += 16;
   \   00000088   0x3410             ADDS     R4,R4,#+16
   \   0000008A   0x1C7F             ADDS     R7,R7,#+1
   \                     ??oled_display_chinese_10: (+1)
   \   0000008C   0x0030             MOVS     R0,R6
   \   0000008E   0x0039             MOVS     R1,R7
   \   00000090   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000092   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000094   0x4288             CMP      R0,R1
   \   00000096   0xD36E             BCC.N    ??oled_display_chinese_13
   \   00000098   0x46B9             MOV      R9,R7
   \   0000009A   0x0029             MOVS     R1,R5
   \   0000009C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000009E   0x0020             MOVS     R0,R4
   \   000000A0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A2   0x.... 0x....      BL       oled_set_pos
   \   000000A6   0xF05F 0x0800      MOVS     R8,#+0
   \   000000AA   0xE00D             B.N      ??oled_display_chinese_14
   \                     ??oled_display_chinese_15: (+1)
   \   000000AC   0x....             LDR.N    R0,??DataTable17_3
   \   000000AE   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000B2   0xEA5F 0x1149      LSLS     R1,R9,#+5
   \   000000B6   0x4408             ADD      R0,R0,R1
   \   000000B8   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000BC   0xF810 0x0008      LDRB     R0,[R0, R8]
   \   000000C0   0x.... 0x....      BL       oled_write_data
   \   000000C4   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??oled_display_chinese_14: (+1)
   \   000000C8   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000CC   0xF1B8 0x0F10      CMP      R8,#+16
   \   000000D0   0xDBEC             BLT.N    ??oled_display_chinese_15
   \   000000D2   0x1C69             ADDS     R1,R5,#+1
   \   000000D4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000D6   0x0020             MOVS     R0,R4
   \   000000D8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000DA   0x.... 0x....      BL       oled_set_pos
   \   000000DE   0xF05F 0x0810      MOVS     R8,#+16
   \   000000E2   0xE7CC             B.N      ??oled_display_chinese_12
   1900          		}
   1901          	}
   1902          	else if (mode == HIGH_LIGHT_MODE)
   \                     ??oled_display_chinese_9: (+1)
   \   000000E4   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000E6   0x2B01             CMP      R3,#+1
   \   000000E8   0xD145             BNE.N    ??oled_display_chinese_13
   1903          	{
   1904          		for (j=start_char ; j<=end_char ; j++)
   \   000000EA   0xE016             B.N      ??oled_display_chinese_16
   1905          		{
   1906          			uc_dataTmp = j;
   1907          
   1908          			oled_set_pos(uc_posx,uc_posy);
   1909          
   1910          			for (i=0 ; i<16 ; i++)
   1911          			{
   1912          				oled_write_data(~OLED_16X8GB2312[uc_dataTmp][i]);
   1913          			}
   1914          
   1915          			oled_set_pos(uc_posx,uc_posy+1);
   1916          
   1917          			for (i=16 ; i<32 ; i++)
   1918          			{
   1919          				oled_write_data(~OLED_16X8GB2312[uc_dataTmp][i]);
   \                     ??oled_display_chinese_17: (+1)
   \   000000EC   0x....             LDR.N    R0,??DataTable17_3
   \   000000EE   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000F2   0xEA5F 0x1149      LSLS     R1,R9,#+5
   \   000000F6   0x4408             ADD      R0,R0,R1
   \   000000F8   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000FC   0xF810 0x0008      LDRB     R0,[R0, R8]
   \   00000100   0x43C0             MVNS     R0,R0
   \   00000102   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000104   0x.... 0x....      BL       oled_write_data
   1920          			}
   \   00000108   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??oled_display_chinese_18: (+1)
   \   0000010C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000110   0xF1B8 0x0F20      CMP      R8,#+32
   \   00000114   0xDBEA             BLT.N    ??oled_display_chinese_17
   1921          
   1922          			uc_posx += 16;
   \   00000116   0x3410             ADDS     R4,R4,#+16
   \   00000118   0x1C7F             ADDS     R7,R7,#+1
   \                     ??oled_display_chinese_16: (+1)
   \   0000011A   0x0030             MOVS     R0,R6
   \   0000011C   0x0039             MOVS     R1,R7
   \   0000011E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000120   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000122   0x4288             CMP      R0,R1
   \   00000124   0xD327             BCC.N    ??oled_display_chinese_13
   \   00000126   0x46B9             MOV      R9,R7
   \   00000128   0x0029             MOVS     R1,R5
   \   0000012A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000012C   0x0020             MOVS     R0,R4
   \   0000012E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000130   0x.... 0x....      BL       oled_set_pos
   \   00000134   0xF05F 0x0800      MOVS     R8,#+0
   \   00000138   0xE00F             B.N      ??oled_display_chinese_19
   \                     ??oled_display_chinese_20: (+1)
   \   0000013A   0x....             LDR.N    R0,??DataTable17_3
   \   0000013C   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000140   0xEA5F 0x1149      LSLS     R1,R9,#+5
   \   00000144   0x4408             ADD      R0,R0,R1
   \   00000146   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000014A   0xF810 0x0008      LDRB     R0,[R0, R8]
   \   0000014E   0x43C0             MVNS     R0,R0
   \   00000150   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000152   0x.... 0x....      BL       oled_write_data
   \   00000156   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??oled_display_chinese_19: (+1)
   \   0000015A   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000015E   0xF1B8 0x0F10      CMP      R8,#+16
   \   00000162   0xDBEA             BLT.N    ??oled_display_chinese_20
   \   00000164   0x1C69             ADDS     R1,R5,#+1
   \   00000166   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000168   0x0020             MOVS     R0,R4
   \   0000016A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000016C   0x.... 0x....      BL       oled_set_pos
   \   00000170   0xF05F 0x0810      MOVS     R8,#+16
   \   00000174   0xE7CA             B.N      ??oled_display_chinese_18
   1923          		}
   1924          	}
   1925          }
   \                     ??oled_display_chinese_13: (+1)
   \   00000176   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
   1926          
   1927          /*
   1928           * 显示布尔变量值
   1929           */

   \                                 In section .text, align 2, keep-with-next
   1930          void oled_display_boolean(uint8 uc_posx, uint8 uc_posy, char bool_data)
   1931          {
   \                     oled_display_boolean: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1932          	uint8 i = 0, uc_dataTmp = 0;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x2500             MOVS     R5,#+0
   1933          
   1934          	if (bool_data == 1)
   \   00000006   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000008   0x2A01             CMP      R2,#+1
   \   0000000A   0xD101             BNE.N    ??oled_display_boolean_0
   1935          	{
   1936          		uc_dataTmp = '|' + 1;
   \   0000000C   0x257D             MOVS     R5,#+125
   \   0000000E   0xE005             B.N      ??oled_display_boolean_1
   1937          	}
   1938          	else if (bool_data == 0)
   \                     ??oled_display_boolean_0: (+1)
   \   00000010   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000012   0x2A00             CMP      R2,#+0
   \   00000014   0xD101             BNE.N    ??oled_display_boolean_2
   1939          	{
   1940          		uc_dataTmp = 'x';
   \   00000016   0x2578             MOVS     R5,#+120
   \   00000018   0xE000             B.N      ??oled_display_boolean_1
   1941          	}
   1942          	else
   1943          	{
   1944          		uc_dataTmp = '?';
   \                     ??oled_display_boolean_2: (+1)
   \   0000001A   0x253F             MOVS     R5,#+63
   1945          	}
   1946          
   1947              if(uc_posx > 122)
   \                     ??oled_display_boolean_1: (+1)
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0x287B             CMP      R0,#+123
   \   00000020   0xDB01             BLT.N    ??oled_display_boolean_3
   1948          	{
   1949          		uc_posx = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   1950          		uc_posy ++;
   \   00000024   0x1C49             ADDS     R1,R1,#+1
   1951          	}
   1952          
   1953          	oled_set_pos(uc_posx, uc_posy);
   \                     ??oled_display_boolean_3: (+1)
   \   00000026   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x.... 0x....      BL       oled_set_pos
   1954          
   1955          	for (i = 0; i < 6; i++)
   \   0000002E   0x2400             MOVS     R4,#+0
   \   00000030   0xE00A             B.N      ??oled_display_boolean_4
   1956          	{
   1957          		oled_write_data(F6x8[uc_dataTmp][i]);
   \                     ??oled_display_boolean_5: (+1)
   \   00000032   0x....             LDR.N    R0,??DataTable17_4
   \   00000034   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000036   0x2106             MOVS     R1,#+6
   \   00000038   0xFB01 0xF105      MUL      R1,R1,R5
   \   0000003C   0x4408             ADD      R0,R0,R1
   \   0000003E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000040   0x5D00             LDRB     R0,[R0, R4]
   \   00000042   0x.... 0x....      BL       oled_write_data
   1958          	}
   \   00000046   0x1C64             ADDS     R4,R4,#+1
   \                     ??oled_display_boolean_4: (+1)
   \   00000048   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004A   0x2C06             CMP      R4,#+6
   \   0000004C   0xDBF1             BLT.N    ??oled_display_boolean_5
   1959          }
   \   0000004E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   1960          
   1961          /*
   1962           * 显示左右变量值
   1963           */

   \                                 In section .text, align 2, keep-with-next
   1964          void oled_display_direction(uint8 uc_posx, uint8 uc_posy, char dir_data)
   1965          {
   \                     oled_display_direction: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1966          	uint8 i = 0, uc_dataTmp = 0;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x2500             MOVS     R5,#+0
   1967          
   1968          	if (dir_data == 1)
   \   00000006   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000008   0x2A01             CMP      R2,#+1
   \   0000000A   0xD101             BNE.N    ??oled_display_direction_0
   1969          	{
   1970          		uc_dataTmp = 'r';
   \   0000000C   0x2572             MOVS     R5,#+114
   \   0000000E   0xE005             B.N      ??oled_display_direction_1
   1971          	}
   1972          	else if (dir_data == 0)
   \                     ??oled_display_direction_0: (+1)
   \   00000010   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000012   0x2A00             CMP      R2,#+0
   \   00000014   0xD101             BNE.N    ??oled_display_direction_2
   1973          	{
   1974          		uc_dataTmp = 'l';
   \   00000016   0x256C             MOVS     R5,#+108
   \   00000018   0xE000             B.N      ??oled_display_direction_1
   1975          	}
   1976          	else
   1977          	{
   1978          		uc_dataTmp = '?';
   \                     ??oled_display_direction_2: (+1)
   \   0000001A   0x253F             MOVS     R5,#+63
   1979          	}
   1980          
   1981              if(uc_posx > 122)
   \                     ??oled_display_direction_1: (+1)
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0x287B             CMP      R0,#+123
   \   00000020   0xDB01             BLT.N    ??oled_display_direction_3
   1982          	{
   1983          		uc_posx = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   1984          		uc_posy ++;
   \   00000024   0x1C49             ADDS     R1,R1,#+1
   1985          	}
   1986          
   1987          	oled_set_pos(uc_posx, uc_posy);
   \                     ??oled_display_direction_3: (+1)
   \   00000026   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x.... 0x....      BL       oled_set_pos
   1988          
   1989          	for (i = 0; i < 6; i++)
   \   0000002E   0x2400             MOVS     R4,#+0
   \   00000030   0xE00A             B.N      ??oled_display_direction_4
   1990          	{
   1991          		oled_write_data(F6x8[uc_dataTmp][i]);
   \                     ??oled_display_direction_5: (+1)
   \   00000032   0x....             LDR.N    R0,??DataTable17_4
   \   00000034   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000036   0x2106             MOVS     R1,#+6
   \   00000038   0xFB01 0xF105      MUL      R1,R1,R5
   \   0000003C   0x4408             ADD      R0,R0,R1
   \   0000003E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000040   0x5D00             LDRB     R0,[R0, R4]
   \   00000042   0x.... 0x....      BL       oled_write_data
   1992          	}
   \   00000046   0x1C64             ADDS     R4,R4,#+1
   \                     ??oled_display_direction_4: (+1)
   \   00000048   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004A   0x2C06             CMP      R4,#+6
   \   0000004C   0xDBF1             BLT.N    ??oled_display_direction_5
   1993          }
   \   0000004E   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x........         DC32     ocb_table

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x........         DC32     gl_gpio_oled_sclk

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x........         DC32     gl_gpio_oled_sdin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x........         DC32     gl_gpio_oled_dc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0x........         DC32     gl_gpio_oled_rst

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x........         DC32     F6x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \   00000000   0x........         DC32     OLED_ASCII16X8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_2:
   \   00000000   0x........         DC32     guc_camera_image_Ok

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   0x........         DC32     guc_corrected_image

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_1:
   \   00000000   0x........         DC32     `oled_twink::s_countchar`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_2:
   \   00000000   0x........         DC32     `oled_twink::s_num`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_3:
   \   00000000   0x........         DC32     OLED_16X8GB2312

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_4:
   \   00000000   0x........         DC32     F6x8

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   SetAddressingMode
         8   -> oled_write_command
       8   SetChargePump
         8   -> oled_write_command
      16   SetColumnAddress
        16   -> oled_write_command
       8   SetCommonConfig
         8   -> oled_write_command
       8   SetCommonRemap
         8   -> oled_write_command
       8   SetContrastControl
         8   -> oled_write_command
       8   SetDisplayClock
         8   -> oled_write_command
       8   SetDisplayOffset
         8   -> oled_write_command
       8   SetDisplayOnOff
         8   -> oled_write_command
       8   SetEntireDisplay
         8   -> oled_write_command
       8   SetInvcharseDisplay
         8   -> oled_write_command
       8   SetMultiplexRatio
         8   -> oled_write_command
       8   SetNop
         8   -> oled_write_command
      16   SetPageAddress
        16   -> oled_write_command
       8   SetPrechargePchariod
         8   -> oled_write_command
       8   SetSegmentRemap
         8   -> oled_write_command
       8   SetStartColumn
         8   -> oled_write_command
       8   SetStartLine
         8   -> oled_write_command
       8   SetStartPage
         8   -> oled_write_command
       8   SetVCOMH
         8   -> oled_write_command
      24   oled_clear
        24   -> oled_display_6x8char
      24   oled_display_16x8char
        24   -> oled_set_pos
        24   -> oled_write_data
      24   oled_display_16x8char_hl
        24   -> oled_set_pos
        24   -> oled_write_data
      32   oled_display_16x8str
        32   -> oled_set_pos
        32   -> oled_write_data
      32   oled_display_16x8str_hl
        32   -> oled_set_pos
        32   -> oled_write_data
      16   oled_display_6x8char
        16   -> oled_set_pos
        16   -> oled_write_data
      16   oled_display_6x8char_hl
        16   -> oled_set_pos
        16   -> oled_write_data
      32   oled_display_6x8str
        32   -> oled_set_pos
        32   -> oled_write_data
      32   oled_display_6x8str_hl
        32   -> oled_set_pos
        32   -> oled_write_data
      16   oled_display_boolean
        16   -> oled_set_pos
        16   -> oled_write_data
      32   oled_display_chinese
        32   -> oled_set_pos
        32   -> oled_write_data
      16   oled_display_direction
        16   -> oled_set_pos
        16   -> oled_write_data
      16   oled_fill
        16   -> oled_write_data
       8   oled_gap
         8   -> oled_display_6x8char
       8   oled_init
         8   -> LPLD_GPIO_Output_b
         8   -> SetAddressingMode
         8   -> SetChargePump
         8   -> SetCommonConfig
         8   -> SetCommonRemap
         8   -> SetContrastControl
         8   -> SetDisplayClock
         8   -> SetDisplayOffset
         8   -> SetDisplayOnOff
         8   -> SetEntireDisplay
         8   -> SetInvcharseDisplay
         8   -> SetMultiplexRatio
         8   -> SetPrechargePchariod
         8   -> SetSegmentRemap
         8   -> SetStartLine
         8   -> SetVCOMH
         8   -> oled_fill
         8   -> oled_pin_init
         8   -> oled_set_pos
      24   oled_my_show
        24   -> oled_display_6x8char
      24   oled_one_group
        24   -> oled_display_6x8char
      24   oled_pin_init
         8   -> LPLD_GPIO_Init
         8   -> LPLD_GPIO_Output_b
        24   -> __aeabi_memcpy4
      24   oled_print_16x8char
        24   -> oled_display_16x8char
      32   oled_print_16x8short
        32   -> oled_display_16x8char
      40   oled_print_16x8short_hl
        40   -> oled_display_16x8char
        40   -> oled_display_16x8char_hl
      24   oled_print_char
        24   -> oled_display_6x8char
      24   oled_print_char_hl
        24   -> oled_display_6x8char_hl
      32   oled_print_image
        32   -> oled_set_pos
        32   -> oled_write_data
      32   oled_print_mirror_image
        32   -> oled_set_pos
        32   -> oled_write_data
      32   oled_print_short
        32   -> oled_display_6x8char
      40   oled_print_short_hl
        40   -> oled_display_6x8char
        40   -> oled_display_6x8char_hl
       8   oled_print_std_image
         8   -> oled_print_mirror_image
       8   oled_set_pos
         8   -> oled_write_command
       8   oled_twink
         8   -> oled_display_6x8char
      16   oled_write_command
        16   -> LPLD_GPIO_Output_b
      16   oled_write_data
        16   -> LPLD_GPIO_Output_b


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_2
       4  ??DataTable12_3
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable14_2
       4  ??DataTable17
       4  ??DataTable17_1
       4  ??DataTable17_2
       4  ??DataTable17_3
       4  ??DataTable17_4
     756  F6x8
     640  OLED_16X8GB2312
    2032  OLED_ASCII16X8
      20  SetAddressingMode
      22  SetChargePump
      30  SetColumnAddress
      22  SetCommonConfig
      14  SetCommonRemap
      20  SetContrastControl
      20  SetDisplayClock
      20  SetDisplayOffset
      14  SetDisplayOnOff
      14  SetEntireDisplay
      14  SetInvcharseDisplay
      20  SetMultiplexRatio
      10  SetNop
      30  SetPageAddress
      20  SetPrechargePchariod
      14  SetSegmentRemap
      40  SetStartColumn
      14  SetStartLine
      14  SetStartPage
      20  SetVCOMH
      20  gl_gpio_oled_dc
      20  gl_gpio_oled_rst
      20  gl_gpio_oled_sclk
      20  gl_gpio_oled_sdin
      12  ocb_table
      54  oled_clear
     104  oled_display_16x8char
     112  oled_display_16x8char_hl
     162  oled_display_16x8str
     170  oled_display_16x8str_hl
      58  oled_display_6x8char
      60  oled_display_6x8char_hl
     116  oled_display_6x8str
     108  oled_display_6x8str_hl
      80  oled_display_boolean
     378  oled_display_chinese
      80  oled_display_direction
      38  oled_fill
      44  oled_gap
     144  oled_init
     206  oled_my_show
     304  oled_one_group
     158  oled_pin_init
     150  oled_print_16x8char
     238  oled_print_16x8short
     392  oled_print_16x8short_hl
     148  oled_print_char
     148  oled_print_char_hl
     264  oled_print_image
     264  oled_print_mirror_image
     246  oled_print_short
     388  oled_print_short_hl
      16  oled_print_std_image
      40  oled_set_pos
     152  oled_twink
     102  oled_write_command
     102  oled_write_data
       2  s_countchar
       1  s_num

 
    15 bytes in section .bss
    80 bytes in section .data
 3 428 bytes in section .rodata
 5 474 bytes in section .text
 
 5 474 bytes of CODE  memory
 3 428 bytes of CONST memory
    95 bytes of DATA  memory

Errors: none
Warnings: none
