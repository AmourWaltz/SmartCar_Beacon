###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       04/Jul/2018  11:08:38
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\app\control\src\speed.c
#    Command line =  
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\app\control\src\speed.c
#        -D LPLD_K60 -lCN
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\RAM\List -lB
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\RAM\List -o
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\RAM\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\ -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\CPU\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\common\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\LPLD\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\LPLD\HW\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\FatFs\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\FatFs\option\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\USB\common\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\USB\driver\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\USB\descriptor\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\..\..\lib\USB\class\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\control\inc\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\control\src\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\debug\inc\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\debug\src\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\device\inc\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\device\src\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\driver\inc\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\driver\src\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\signal\inc\
#        -I
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\signal\src\
#        -I D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\..\app\system\
#        -Ol -I "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\"
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\RAM\List\speed.lst
#    Object file  =  
#        D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\iar\RAM\Obj\speed.o
#
###############################################################################

D:\Freescale\信标\Beacon_C1\project\Beacon_XBY\app\control\src\speed.c
      1          /*=============================================
      2              @file         speed.c
      3              @brief        速度控制
      4              @programmer   XBY
      5          =============================================*/
      6          #include "speed.h"
      7           
      8          /*===============================================================
      9          	@brief     速度控制函数
     10          	@function  增量式PI控制速度输出（未加编码器，暂为开环控制）
     11          	@note      加入编码器后改为闭环控制
     12          ==================================================================*/
     13          

   \                                 In section .text, align 2, keep-with-next
     14          void Speed_Control()
     15          {
   \                     Speed_Control: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     16            static int32 car_speed = 0;
     17            static int32 prev_error = 0;
     18            static int32 last_error = 0;
     19            static int32 last_speed_out = 0;
     20            int speed_error;
     21          
     22             car_speed = gl_speed_set;
   \   00000002   0x....             LDR.N    R0,??DataTable2
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x....             LDR.N    R1,??DataTable2_1
   \   00000008   0x6008             STR      R0,[R1, #+0]
     23          
     24          //   car_speed -= Set_Image_Speed();
     25             car_speed -= Set_Angle_Speed();
   \   0000000A   0x....             LDR.N    R0,??DataTable2_1
   \   0000000C   0x6804             LDR      R4,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       Set_Angle_Speed
   \   00000012   0x1A20             SUBS     R0,R4,R0
   \   00000014   0x....             LDR.N    R1,??DataTable2_1
   \   00000016   0x6008             STR      R0,[R1, #+0]
     26            
     27             //speed_error = (int)(car_speed - gf_car_speed);//给定速度-实际速度
     28            
     29             gl_pwm_out = (int32)(gf_speed_p * car_speed);
   \   00000018   0x....             LDR.N    R0,??DataTable2_1
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x.... 0x....      BL       __aeabi_i2f
   \   00000020   0x....             LDR.N    R1,??DataTable2_2
   \   00000022   0x6809             LDR      R1,[R1, #+0]
   \   00000024   0x.... 0x....      BL       __aeabi_fmul
   \   00000028   0x.... 0x....      BL       __aeabi_f2iz
   \   0000002C   0x....             LDR.N    R1,??DataTable2_3
   \   0000002E   0x6008             STR      R0,[R1, #+0]
     30          //                  - gf_speed_i * last_error);
     31          //                  + gf_speed_d * prev_error);
     32             
     33             //存储误差，用于下次计算
     34          //   prev_error=last_error;
     35          //   last_error=speed_error;
     36              
     37             Motor_Output(gl_pwm_out);
   \   00000030   0x....             LDR.N    R0,??DataTable2_3
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0x.... 0x....      BL       Motor_Output
     38          }
   \   00000038   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 4
   \                     `Speed_Control::car_speed`:
   \   00000000                      DS8 4
     39          
     40          /*===============================================================
     41          	@brief     设定图像速度值
     42          	@function  根据图像大小间接反映距离信标灯距离改变速度，设定一阈值，达到后减速
     43          	@return    改变后的速度值
     44          	@note      阈值不确定，通过建模软件分析二次函数关系确定阈值
     45          ==================================================================*/
     46          

   \                                 In section .text, align 2, keep-with-next
     47          int Set_Image_Speed()
     48          {
   \                     Set_Image_Speed: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     49            uint32 area_temp;
     50            static float acce_kp;
     51            static float dece_kp;
     52            
     53            int img_speed_delta;//根据图像距离设定速度变化量
     54            
     55            area_temp = gi_image_area_ave;
   \   00000002   0x....             LDR.N    R0,??DataTable2_4
   \   00000004   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
     56            if(area_temp < AREA_THRESHOLD)
   \   00000008   0xF240 0x51DC      MOVW     R1,#+1500
   \   0000000C   0x4288             CMP      R0,R1
   \   0000000E   0xD20B             BCS.N    ??Set_Image_Speed_0
     57            {
     58                img_speed_delta = (int)((AREA_THRESHOLD - area_temp) *acce_kp);
   \   00000010   0xF240 0x51DC      MOVW     R1,#+1500
   \   00000014   0x1A08             SUBS     R0,R1,R0
   \   00000016   0x.... 0x....      BL       __aeabi_ui2f
   \   0000001A   0x....             LDR.N    R1,??DataTable2_5
   \   0000001C   0x6809             LDR      R1,[R1, #+0]
   \   0000001E   0x.... 0x....      BL       __aeabi_fmul
   \   00000022   0x.... 0x....      BL       __aeabi_f2iz
   \   00000026   0xE009             B.N      ??Set_Image_Speed_1
     59            }
     60            else
     61                img_speed_delta = (int)((area_temp - AREA_THRESHOLD) *dece_kp);
   \                     ??Set_Image_Speed_0: (+1)
   \   00000028   0xF2A0 0x50DC      SUBW     R0,R0,#+1500
   \   0000002C   0x.... 0x....      BL       __aeabi_ui2f
   \   00000030   0x....             LDR.N    R1,??DataTable2_6
   \   00000032   0x6809             LDR      R1,[R1, #+0]
   \   00000034   0x.... 0x....      BL       __aeabi_fmul
   \   00000038   0x.... 0x....      BL       __aeabi_f2iz
     62            
     63            return img_speed_delta;
   \                     ??Set_Image_Speed_1: (+1)
   \   0000003C   0xBD02             POP      {R1,PC}          ;; return
     64          }

   \                                 In section .bss, align 4
   \                     `Set_Image_Speed::acce_kp`:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     `Set_Image_Speed::dece_kp`:
   \   00000000                      DS8 4
     65          
     66          /*===============================================================
     67          	@brief     弯道减速
     68          	@function  根据舵机打角程度将速度减小至某一值   
     69          	@return    改变后的速度值
     70          	@note      只为初期预判值，后期需精调
     71          ==================================================================*/
     72          

   \                                 In section .text, align 2, keep-with-next
     73          int Set_Angle_Speed()
     74          {   
   \                     Set_Angle_Speed: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     75            int32 servo_output;
     76            int servo_angle;
     77            int angle_speed_delta;
     78            static float angle_speed_kp = 2;
     79            
     80            servo_output = gl_servo_pwm;
   \   00000002   0x....             LDR.N    R0,??DataTable2_7
   \   00000004   0x6800             LDR      R0,[R0, #+0]
     81            //servo_angle = Servo_Angle(servo_output);
     82            servo_angle = gl_direction_set;
   \   00000006   0x....             LDR.N    R0,??DataTable2_8
   \   00000008   0x6800             LDR      R0,[R0, #+0]
     83            
     84            if(servo_angle < 0)
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD500             BPL.N    ??Set_Angle_Speed_0
     85              servo_angle = -servo_angle;
   \   0000000E   0x4240             RSBS     R0,R0,#+0
     86            
     87            angle_speed_delta = (int)(angle_speed_kp * servo_angle);
   \                     ??Set_Angle_Speed_0: (+1)
   \   00000010   0x.... 0x....      BL       __aeabi_i2f
   \   00000014   0x....             LDR.N    R1,??DataTable2_9
   \   00000016   0x6809             LDR      R1,[R1, #+0]
   \   00000018   0x.... 0x....      BL       __aeabi_fmul
   \   0000001C   0x.... 0x....      BL       __aeabi_f2iz
     88            
     89            return angle_speed_delta;
   \   00000020   0xBD02             POP      {R1,PC}          ;; return
     90          }

   \                                 In section .data, align 4
   \                     `Set_Angle_Speed::angle_speed_kp`:
   \   00000000   0x40000000         DC32 40000000H

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     gl_speed_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     `Speed_Control::car_speed`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     gf_speed_p

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     gl_pwm_out

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     gi_image_area_ave

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     `Set_Image_Speed::acce_kp`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     `Set_Image_Speed::dece_kp`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     gl_servo_pwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     gl_direction_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     `Set_Angle_Speed::angle_speed_kp`

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Set_Angle_Speed
         8   -> __aeabi_f2iz
         8   -> __aeabi_fmul
         8   -> __aeabi_i2f
       8   Set_Image_Speed
         8   -> __aeabi_f2iz
         8   -> __aeabi_fmul
         8   -> __aeabi_ui2f
       8   Speed_Control
         8   -> Motor_Output
         8   -> Set_Angle_Speed
         8   -> __aeabi_f2iz
         8   -> __aeabi_fmul
         8   -> __aeabi_i2f


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
      34  Set_Angle_Speed
      62  Set_Image_Speed
      58  Speed_Control
       4  acce_kp
       4  angle_speed_kp
       4  car_speed
       4  dece_kp

 
  12 bytes in section .bss
   4 bytes in section .data
 194 bytes in section .text
 
 194 bytes of CODE memory
  16 bytes of DATA memory

Errors: none
Warnings: 5
