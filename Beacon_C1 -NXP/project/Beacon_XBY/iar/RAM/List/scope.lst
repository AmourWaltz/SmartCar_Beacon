###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       19/Jul/2019  16:52:18
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\debug\src\scope.c
#    Command line =  
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\debug\src\scope.c" -D LPLD_K60 -lCN
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\RAM\List" -lB
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\RAM\List" -o
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\RAM\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\CPU\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\HW\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\DEV\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\FUNC\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\option\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\driver\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\descriptor\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\class\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\control\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\control\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\debug\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\debug\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\device\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\device\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\driver\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\driver\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\signal\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\signal\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\system\" -Ol -I "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\RAM\List\scope.lst
#    Object file  =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\RAM\Obj\scope.o
#
###############################################################################

D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\debug\src\scope.c
      1          //************************串口示波器握手程序******************
      2          #include "scope.h"
      3          #include "uart.h"
      4          #include "include.h"
      5          
      6          

   \                                 In section .text, align 2, keep-with-next
      7          unsigned short CRC_CHECK(unsigned char *Buf, unsigned char CRC_CNT)
      8          {
   \                     CRC_CHECK: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
      9              unsigned short CRC_Temp;
     10              unsigned char i,j;
     11              CRC_Temp = 0xffff;
   \   00000002   0xF64F 0x72FF      MOVW     R2,#+65535
     12          
     13              for (i=0;i<CRC_CNT; i++)
   \   00000006   0x2300             MOVS     R3,#+0
   \   00000008   0xE000             B.N      ??CRC_CHECK_0
   \                     ??CRC_CHECK_1: (+1)
   \   0000000A   0x1C5B             ADDS     R3,R3,#+1
   \                     ??CRC_CHECK_0: (+1)
   \   0000000C   0x001C             MOVS     R4,R3
   \   0000000E   0x000D             MOVS     R5,R1
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000014   0x42AC             CMP      R4,R5
   \   00000016   0xD213             BCS.N    ??CRC_CHECK_2
     14          	{      
     15                  CRC_Temp ^= Buf[i];
   \   00000018   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000001A   0x5CC4             LDRB     R4,[R0, R3]
   \   0000001C   0x4062             EORS     R2,R4,R2
     16                  
     17          		for (j=0;j<8;j++)
   \   0000001E   0x2400             MOVS     R4,#+0
   \   00000020   0xE002             B.N      ??CRC_CHECK_3
     18          		{
     19                      if (CRC_Temp & 0x01)
     20          			{
     21                          CRC_Temp = (CRC_Temp >>1 ) ^ 0xa001;
     22                      }
     23          			else
     24                      {
     25          				CRC_Temp = CRC_Temp >> 1;
   \                     ??CRC_CHECK_4: (+1)
   \   00000022   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000024   0x0852             LSRS     R2,R2,#+1
     26                  	}
   \                     ??CRC_CHECK_5: (+1)
   \   00000026   0x1C64             ADDS     R4,R4,#+1
   \                     ??CRC_CHECK_3: (+1)
   \   00000028   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002A   0x2C08             CMP      R4,#+8
   \   0000002C   0xDAED             BGE.N    ??CRC_CHECK_1
   \   0000002E   0x07D5             LSLS     R5,R2,#+31
   \   00000030   0xD5F7             BPL.N    ??CRC_CHECK_4
   \   00000032   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000034   0x0852             LSRS     R2,R2,#+1
   \   00000036   0xF482 0x4220      EOR      R2,R2,#0xA000
   \   0000003A   0xF092 0x0201      EORS     R2,R2,#0x1
   \   0000003E   0xE7F2             B.N      ??CRC_CHECK_5
     27          		}
     28              }
     29          	
     30              return(CRC_Temp);
   \                     ??CRC_CHECK_2: (+1)
   \   00000040   0x0010             MOVS     R0,R2
   \   00000042   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000044   0xBC30             POP      {R4,R5}
   \   00000046   0x4770             BX       LR               ;; return
     31          }
     32          
     33          //还没写与摄像头有关的优化

   \                                 In section .text, align 2, keep-with-next
     34          void VisualScope_Send(uint8 u8Mode)
     35          {
   \                     VisualScope_Send: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
   \   00000004   0x0004             MOVS     R4,R0
     36              unsigned char i, j;
     37              //SCOPE_MODE
     38          	int temp[4] = {0};
   \   00000006   0xA807             ADD      R0,SP,#+28
   \   00000008   0x2110             MOVS     R1,#+16
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
     39          	unsigned int temp1[4] = {0};
   \   0000000E   0xA803             ADD      R0,SP,#+12
   \   00000010   0x2110             MOVS     R1,#+16
   \   00000012   0x.... 0x....      BL       __aeabi_memclr4
     40          	unsigned char databuf[10] = {0};	
   \   00000016   0x4668             MOV      R0,SP
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0x2200             MOVS     R2,#+0
   \   0000001C   0x2300             MOVS     R3,#+0
   \   0000001E   0xC00E             STM      R0!,{R1-R3}
   \   00000020   0x380C             SUBS     R0,R0,#+12
     41          	unsigned short CRC16 = 0;
   \   00000022   0x2000             MOVS     R0,#+0
     42              //IMAGE_MODE
     43          
     44              
     45              switch (u8Mode)
   \   00000024   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000026   0x2C00             CMP      R4,#+0
   \   00000028   0xD002             BEQ.N    ??VisualScope_Send_0
   \   0000002A   0x2C01             CMP      R4,#+1
   \   0000002C   0xD050             BEQ.N    ??VisualScope_Send_1
   \   0000002E   0xE070             B.N      ??VisualScope_Send_2
     46              {
     47                  case SCOPE_DATA_MODE: 
     48                      for(i=0 ; i<4 ; i++)
   \                     ??VisualScope_Send_0: (+1)
   \   00000030   0x2400             MOVS     R4,#+0
   \   00000032   0xE012             B.N      ??VisualScope_Send_3
     49                      {
     50                          temp[i]  = (int)gf_VisualScopeData[i];
   \                     ??VisualScope_Send_4: (+1)
   \   00000034   0x....             LDR.N    R0,??DataTable0
   \   00000036   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000038   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000003C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000040   0xA907             ADD      R1,SP,#+28
   \   00000042   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000044   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
     51                          temp1[i] = (unsigned int)temp[i];
   \   00000048   0xA807             ADD      R0,SP,#+28
   \   0000004A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004C   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000050   0xA903             ADD      R1,SP,#+12
   \   00000052   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000054   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
     52                      }
   \   00000058   0x1C64             ADDS     R4,R4,#+1
   \                     ??VisualScope_Send_3: (+1)
   \   0000005A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005C   0x2C04             CMP      R4,#+4
   \   0000005E   0xDBE9             BLT.N    ??VisualScope_Send_4
     53                     
     54                      for(i=0 ; i<4 ; i++) 
   \   00000060   0x2400             MOVS     R4,#+0
   \   00000062   0xE012             B.N      ??VisualScope_Send_5
     55                      {
     56                          databuf[i*2]   = (unsigned char)(temp1[i]%256);
   \                     ??VisualScope_Send_6: (+1)
   \   00000064   0xA803             ADD      R0,SP,#+12
   \   00000066   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000068   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000006C   0x4669             MOV      R1,SP
   \   0000006E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000070   0xF801 0x0014      STRB     R0,[R1, R4, LSL #+1]
     57                          databuf[i*2+1] = (unsigned char)(temp1[i]/256);
   \   00000074   0xA803             ADD      R0,SP,#+12
   \   00000076   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000078   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000007C   0x0A00             LSRS     R0,R0,#+8
   \   0000007E   0x4669             MOV      R1,SP
   \   00000080   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000082   0xEB01 0x0144      ADD      R1,R1,R4, LSL #+1
   \   00000086   0x7048             STRB     R0,[R1, #+1]
     58                      }
   \   00000088   0x1C64             ADDS     R4,R4,#+1
   \                     ??VisualScope_Send_5: (+1)
   \   0000008A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000008C   0x2C04             CMP      R4,#+4
   \   0000008E   0xDBE9             BLT.N    ??VisualScope_Send_6
     59                    
     60                      CRC16 = CRC_CHECK(databuf,8);
   \   00000090   0x2108             MOVS     R1,#+8
   \   00000092   0x4668             MOV      R0,SP
   \   00000094   0x.... 0x....      BL       CRC_CHECK
     61                      databuf[8] = CRC16%256;
   \   00000098   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000009A   0xF44F 0x7180      MOV      R1,#+256
   \   0000009E   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000000A2   0xFB01 0x0112      MLS      R1,R1,R2,R0
   \   000000A6   0xF88D 0x1008      STRB     R1,[SP, #+8]
     62                      databuf[9] = CRC16/256;
   \   000000AA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000AC   0xF44F 0x7180      MOV      R1,#+256
   \   000000B0   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000B4   0xF88D 0x0009      STRB     R0,[SP, #+9]
     63          
     64                      for(i=0;i<10;i++)
   \   000000B8   0x2400             MOVS     R4,#+0
   \   000000BA   0xE005             B.N      ??VisualScope_Send_7
     65                      {
     66                          UART_Sendchar(databuf[i]);
   \                     ??VisualScope_Send_8: (+1)
   \   000000BC   0x4668             MOV      R0,SP
   \   000000BE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000C0   0x5D00             LDRB     R0,[R0, R4]
   \   000000C2   0x.... 0x....      BL       UART_Sendchar
     67                      }            
   \   000000C6   0x1C64             ADDS     R4,R4,#+1
   \                     ??VisualScope_Send_7: (+1)
   \   000000C8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000CA   0x2C0A             CMP      R4,#+10
   \   000000CC   0xDBF6             BLT.N    ??VisualScope_Send_8
     68                      break;
   \   000000CE   0xE020             B.N      ??VisualScope_Send_9
     69                      
     70                  case SCOPE_IMAGE_MODE: 
     71                      
     72                      for(i = 0; i < 64; i++)
   \                     ??VisualScope_Send_1: (+1)
   \   000000D0   0x2400             MOVS     R4,#+0
   \   000000D2   0xE000             B.N      ??VisualScope_Send_10
   \                     ??VisualScope_Send_11: (+1)
   \   000000D4   0x1C64             ADDS     R4,R4,#+1
   \                     ??VisualScope_Send_10: (+1)
   \   000000D6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000D8   0x2C40             CMP      R4,#+64
   \   000000DA   0xDA16             BGE.N    ??VisualScope_Send_12
     73                      {
     74                          for(j = 0; j < 128; j++)
   \   000000DC   0x2500             MOVS     R5,#+0
   \   000000DE   0xE003             B.N      ??VisualScope_Send_13
     75                          {
     76                              if (guc_corrected_image[i][j] == IMAGE_WHITE)
     77                              {
     78                                  UART_Sendchar(0xfe);
     79                              }
     80                              else
     81                              {
     82                                  UART_Sendchar(0x00);
   \                     ??VisualScope_Send_14: (+1)
   \   000000E0   0x2000             MOVS     R0,#+0
   \   000000E2   0x.... 0x....      BL       UART_Sendchar
     83                              }
   \                     ??VisualScope_Send_15: (+1)
   \   000000E6   0x1C6D             ADDS     R5,R5,#+1
   \                     ??VisualScope_Send_13: (+1)
   \   000000E8   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000EA   0x2D80             CMP      R5,#+128
   \   000000EC   0xDAF2             BGE.N    ??VisualScope_Send_11
   \   000000EE   0x....             LDR.N    R0,??DataTable0_1
   \   000000F0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000F2   0x2180             MOVS     R1,#+128
   \   000000F4   0xFB01 0xF104      MUL      R1,R1,R4
   \   000000F8   0x4408             ADD      R0,R0,R1
   \   000000FA   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000FC   0x5D40             LDRB     R0,[R0, R5]
   \   000000FE   0x2801             CMP      R0,#+1
   \   00000100   0xD1EE             BNE.N    ??VisualScope_Send_14
   \   00000102   0x20FE             MOVS     R0,#+254
   \   00000104   0x.... 0x....      BL       UART_Sendchar
   \   00000108   0xE7ED             B.N      ??VisualScope_Send_15
     84                          }                            
     85                      }       
     86                      
     87                      UART_Sendchar(0xff);
   \                     ??VisualScope_Send_12: (+1)
   \   0000010A   0x20FF             MOVS     R0,#+255
   \   0000010C   0x.... 0x....      BL       UART_Sendchar
     88                      
     89                      
     90                      break;
   \   00000110   0xE7FF             B.N      ??VisualScope_Send_9
     91                      
     92                  default : break;
     93              }
     94          }
   \                     ??VisualScope_Send_2: (+1)
   \                     ??VisualScope_Send_9: (+1)
   \   00000112   0xB00B             ADD      SP,SP,#+44
   \   00000114   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     gf_VisualScopeData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     guc_corrected_image

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0, 0, 0, 0
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0, 0, 0, 0
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     95          
     96          
     97          
     98          
     99          
    100          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   CRC_CHECK
      56   VisualScope_Send
        56   -> CRC_CHECK
        56   -> UART_Sendchar
        56   -> __aeabi_f2iz
        56   -> __aeabi_memclr4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
      16  ?_0
      16  ?_1
      12  ?_2
      72  CRC_CHECK
     278  VisualScope_Send

 
  44 bytes in section .rodata
 358 bytes in section .text
 
 358 bytes of CODE  memory
  44 bytes of CONST memory

Errors: none
Warnings: none
