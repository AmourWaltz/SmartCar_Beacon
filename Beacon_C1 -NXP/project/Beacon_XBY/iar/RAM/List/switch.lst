###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       19/Jul/2019  16:52:19
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\debug\src\switch.c
#    Command line =  
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\debug\src\switch.c" -D LPLD_K60 -lCN
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\RAM\List" -lB
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\RAM\List" -o
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\RAM\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\CPU\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\HW\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\DEV\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\FUNC\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\option\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\driver\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\descriptor\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\class\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\control\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\control\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\debug\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\debug\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\device\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\device\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\driver\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\driver\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\signal\inc\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\signal\src\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\system\" -Ol -I "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\RAM\List\switch.lst
#    Object file  =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\RAM\Obj\switch.o
#
###############################################################################

D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\debug\src\switch.c
      1          #include "switch.h"
      2          

   \                                 In section .text, align 2, keep-with-next
      3          void Switch_Init()
      4          {
   \                     Switch_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
      5              /*SW0*/
      6              GPIO_Init(SW0_BIT0_PORT, SW0_BIT0_PIN_MASK, DIR_INPUT, OUTPUT_L);
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0xF45F 0x2180      MOVS     R1,#+262144
   \   0000000A   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   0000000C   0x.... 0x....      BL       GPIO_Init
      7              GPIO_Init(SW0_BIT1_PORT, SW0_BIT1_PIN_MASK, DIR_INPUT, OUTPUT_L);             
   \   00000010   0x2300             MOVS     R3,#+0
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0xF45F 0x2100      MOVS     R1,#+524288
   \   00000018   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   0000001A   0x.... 0x....      BL       GPIO_Init
      8          }
   \   0000001E   0xBD01             POP      {R0,PC}          ;; return
      9          
     10          //输入引脚编号,返回开关全部位值 传入空指针只返回不修改

   \                                 In section .text, align 2, keep-with-next
     11          uint8 Switch_Get_Value(uint8 *pu8SwitchPinValue, uint8 u8SwitchPin)
     12          {
   \                     Switch_Get_Value: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000E             MOVS     R6,R1
     13              uint8 u8SwBitTemp[2];
     14              uint8 u8SwitchValue = 0;
   \   00000008   0x2400             MOVS     R4,#+0
     15          
     16              u8SwBitTemp[0] = LPLD_GPIO_Input_b(SW0_BIT0_PORT, SW0_BIT0_PIN);
   \   0000000A   0x2112             MOVS     R1,#+18
   \   0000000C   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   0000000E   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   00000012   0xF88D 0x0000      STRB     R0,[SP, #+0]
     17              u8SwBitTemp[1] = LPLD_GPIO_Input_b(SW0_BIT1_PORT, SW0_BIT1_PIN);
   \   00000016   0x2113             MOVS     R1,#+19
   \   00000018   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff080
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   0000001E   0xF88D 0x0001      STRB     R0,[SP, #+1]
     18              
     19              /*获取位值*/
     20              if (pu8SwitchPinValue != NULL)
   \   00000022   0x2D00             CMP      R5,#+0
   \   00000024   0xD003             BEQ.N    ??Switch_Get_Value_0
     21              {
     22                  *pu8SwitchPinValue = u8SwBitTemp[u8SwitchPin];       
   \   00000026   0x4668             MOV      R0,SP
   \   00000028   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002A   0x5D80             LDRB     R0,[R0, R6]
   \   0000002C   0x7028             STRB     R0,[R5, #+0]
     23              }
     24              
     25              /*获取所有位值*/
     26              u8SwitchValue |= u8SwBitTemp[0]<<0;
   \                     ??Switch_Get_Value_0: (+1)
   \   0000002E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000032   0x4304             ORRS     R4,R0,R4
     27              u8SwitchValue |= u8SwBitTemp[1]<<1;
   \   00000034   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \   00000038   0xEA54 0x0440      ORRS     R4,R4,R0, LSL #+1
     28              
     29              return u8SwitchValue;
   \   0000003C   0x0020             MOVS     R0,R4
   \   0000003E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000040   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
     30          }
     31          

   \                                 In section .text, align 2, keep-with-next
     32          uint8 Switch_Read_Value(uint8 u8SwitchPin)
     33          {
   \                     Switch_Read_Value: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     34              uint8 switch_value;
     35              Switch_Get_Value(&switch_value,u8SwitchPin);
   \   00000002   0x0001             MOVS     R1,R0
   \   00000004   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000006   0x4668             MOV      R0,SP
   \   00000008   0x.... 0x....      BL       Switch_Get_Value
     36              return switch_value;
   \   0000000C   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000010   0xBD02             POP      {R1,PC}          ;; return
     37          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x400FF080         DC32     0x400ff080
     38          
     39          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   Switch_Get_Value
        24   -> LPLD_GPIO_Input_b
       8   Switch_Init
         8   -> GPIO_Init
       8   Switch_Read_Value
         8   -> Switch_Get_Value


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
      66  Switch_Get_Value
      32  Switch_Init
      18  Switch_Read_Value

 
 120 bytes in section .text
 
 120 bytes of CODE memory

Errors: none
Warnings: none
