###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       27/Jul/2018  20:43:46
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\debug\src\dir_kbi.c
#    Command line =  
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\debug\src\dir_kbi.c" -D LPLD_K60 -lCN
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\FLASH\List"
#        -lB "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\List" -o
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\CPU\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\HW\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\DEV\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\option\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\driver\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\descriptor\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\class\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\FUNC\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\driver\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\driver\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\control\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\control\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\debug\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\debug\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\device\src\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\device\inc\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\signal\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\signal\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\system\" -Ol
#        -I "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\List\dir_kbi.lst
#    Object file  =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\Obj\dir_kbi.o
#
###############################################################################

D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\debug\src\dir_kbi.c
      1          #include "dir_kbi.h"
      2          
      3          

   \                                 In section .text, align 2, keep-with-next
      4          void Five_Dir_Init()
      5          {
   \                     Five_Dir_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
      6              GPIO_Init(FIVE_DIR_O_PORT, FIVE_DIR_O_PIN_MASK, DIR_INPUT, OUTPUT_L);
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x2101             MOVS     R1,#+1
   \   00000008   0x....             LDR.N    R0,??DataTable3_2  ;; 0x400ff080
   \   0000000A   0x.... 0x....      BL       GPIO_Init
      7              GPIO_Init(FIVE_DIR_U_PORT, FIVE_DIR_U_PIN_MASK, DIR_INPUT, OUTPUT_L);
   \   0000000E   0x2300             MOVS     R3,#+0
   \   00000010   0x2200             MOVS     R2,#+0
   \   00000012   0xF44F 0x7180      MOV      R1,#+256
   \   00000016   0x....             LDR.N    R0,??DataTable3_2  ;; 0x400ff080
   \   00000018   0x.... 0x....      BL       GPIO_Init
      8              GPIO_Init(FIVE_DIR_D_PORT, FIVE_DIR_D_PIN_MASK, DIR_INPUT, OUTPUT_L); 
   \   0000001C   0x2300             MOVS     R3,#+0
   \   0000001E   0x2200             MOVS     R2,#+0
   \   00000020   0x2180             MOVS     R1,#+128
   \   00000022   0x....             LDR.N    R0,??DataTable3_2  ;; 0x400ff080
   \   00000024   0x.... 0x....      BL       GPIO_Init
      9              GPIO_Init(FIVE_DIR_L_PORT, FIVE_DIR_L_PIN_MASK, DIR_INPUT, OUTPUT_L);
   \   00000028   0x2300             MOVS     R3,#+0
   \   0000002A   0x2200             MOVS     R2,#+0
   \   0000002C   0x2140             MOVS     R1,#+64
   \   0000002E   0x....             LDR.N    R0,??DataTable3_2  ;; 0x400ff080
   \   00000030   0x.... 0x....      BL       GPIO_Init
     10              GPIO_Init(FIVE_DIR_R_PORT, FIVE_DIR_R_PIN_MASK, DIR_INPUT, OUTPUT_L);     
   \   00000034   0x2300             MOVS     R3,#+0
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0xF44F 0x7100      MOV      R1,#+512
   \   0000003C   0x....             LDR.N    R0,??DataTable3_2  ;; 0x400ff080
   \   0000003E   0x.... 0x....      BL       GPIO_Init
     11          }
   \   00000042   0xBD01             POP      {R0,PC}          ;; return
     12          
     13          //按下电平为0

   \                                 In section .text, align 2, keep-with-next
     14          uint8 Get_Five_Dir_Value()
     15          {
   \                     Get_Five_Dir_Value: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     16          
     17          
     18              if(!LPLD_GPIO_Input_b(FIVE_DIR_R_PORT, FIVE_DIR_R_PIN))
   \   00000002   0x2109             MOVS     R1,#+9
   \   00000004   0x....             LDR.N    R0,??DataTable3_2  ;; 0x400ff080
   \   00000006   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD101             BNE.N    ??Get_Five_Dir_Value_0
     19                return FIVE_DIR_RIGHT;
   \   0000000E   0x2004             MOVS     R0,#+4
   \   00000010   0xE018             B.N      ??Get_Five_Dir_Value_1
     20              
     21              if(!LPLD_GPIO_Input_b(FIVE_DIR_U_PORT, FIVE_DIR_U_PIN))
   \                     ??Get_Five_Dir_Value_0: (+1)
   \   00000012   0x2108             MOVS     R1,#+8
   \   00000014   0x....             LDR.N    R0,??DataTable3_2  ;; 0x400ff080
   \   00000016   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD101             BNE.N    ??Get_Five_Dir_Value_2
     22                return FIVE_DIR_UP;
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0xE010             B.N      ??Get_Five_Dir_Value_1
     23              
     24              if(!LPLD_GPIO_Input_b(FIVE_DIR_D_PORT, FIVE_DIR_D_PIN))
   \                     ??Get_Five_Dir_Value_2: (+1)
   \   00000022   0x2107             MOVS     R1,#+7
   \   00000024   0x....             LDR.N    R0,??DataTable3_2  ;; 0x400ff080
   \   00000026   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD101             BNE.N    ??Get_Five_Dir_Value_3
     25                return FIVE_DIR_DOWN;
   \   0000002E   0x2002             MOVS     R0,#+2
   \   00000030   0xE008             B.N      ??Get_Five_Dir_Value_1
     26          
     27          //    if(!LPLD_GPIO_Input_b(FIVE_DIR_L_PORT, FIVE_DIR_L_PIN))
     28          //      return FIVE_DIR_LEFT;
     29              
     30              if(!LPLD_GPIO_Input_b(FIVE_DIR_O_PORT, FIVE_DIR_O_PIN))
   \                     ??Get_Five_Dir_Value_3: (+1)
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x....             LDR.N    R0,??DataTable3_2  ;; 0x400ff080
   \   00000036   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD101             BNE.N    ??Get_Five_Dir_Value_4
     31                return FIVE_DIR_OK;
   \   0000003E   0x2005             MOVS     R0,#+5
   \   00000040   0xE000             B.N      ??Get_Five_Dir_Value_1
     32                
     33              else 
     34                return FIVE_DIR_NULL;
   \                     ??Get_Five_Dir_Value_4: (+1)
   \   00000042   0x2000             MOVS     R0,#+0
   \                     ??Get_Five_Dir_Value_1: (+1)
   \   00000044   0xBD02             POP      {R1,PC}          ;; return
     35          }
     36          

   \                                 In section .text, align 2, keep-with-next
     37          void Test_Dir()
     38          {
   \                     Test_Dir: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xE008             B.N      ??Test_Dir_0
     39              uint8 button;
     40              while(1)
     41              {
     42                  button=button_scan();
     43                  
     44                  switch(button)
     45                  {
     46                  case FIVE_DIR_UP:
     47                    oled_display_6x8str(1,1,"up");
   \                     ??Test_Dir_1: (+1)
   \   00000004   0x....             ADR.N    R2,??DataTable3  ;; 0x75, 0x70, 0x00, 0x00
   \   00000006   0x2101             MOVS     R1,#+1
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0x.... 0x....      BL       oled_display_6x8str
     48                    SetLEDBit(1,LED_1);
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x.... 0x....      BL       SetLEDBit
     49                    break;
   \                     ??Test_Dir_0: (+1)
   \   00000016   0x.... 0x....      BL       button_scan
   \   0000001A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001C   0x2801             CMP      R0,#+1
   \   0000001E   0xD0F1             BEQ.N    ??Test_Dir_1
   \   00000020   0xD33A             BCC.N    ??Test_Dir_2
   \   00000022   0x2803             CMP      R0,#+3
   \   00000024   0xD004             BEQ.N    ??Test_Dir_3
   \   00000026   0xD30D             BCC.N    ??Test_Dir_4
   \   00000028   0x2805             CMP      R0,#+5
   \   0000002A   0xD01F             BEQ.N    ??Test_Dir_5
   \   0000002C   0xD314             BCC.N    ??Test_Dir_6
   \   0000002E   0xE033             B.N      ??Test_Dir_2
     50                    
     51                  case FIVE_DIR_LEFT:
     52                    oled_display_6x8str(1,2,"left");
   \                     ??Test_Dir_3: (+1)
   \   00000030   0x....             LDR.N    R2,??DataTable3_3
   \   00000032   0x2102             MOVS     R1,#+2
   \   00000034   0x2001             MOVS     R0,#+1
   \   00000036   0x.... 0x....      BL       oled_display_6x8str
     53                    SetLEDBit(1,LED_2);
   \   0000003A   0x2102             MOVS     R1,#+2
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0x.... 0x....      BL       SetLEDBit
     54                    break;  
   \   00000042   0xE7E8             B.N      ??Test_Dir_0
     55                    
     56                  case FIVE_DIR_DOWN:
     57                    oled_display_6x8str(1,3,"down");
   \                     ??Test_Dir_4: (+1)
   \   00000044   0x....             LDR.N    R2,??DataTable3_4
   \   00000046   0x2103             MOVS     R1,#+3
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0x.... 0x....      BL       oled_display_6x8str
     58                    SetLEDBit(1,LED_3);
   \   0000004E   0x2103             MOVS     R1,#+3
   \   00000050   0x2001             MOVS     R0,#+1
   \   00000052   0x.... 0x....      BL       SetLEDBit
     59                    break;
   \   00000056   0xE7DE             B.N      ??Test_Dir_0
     60                    
     61                  case FIVE_DIR_RIGHT:
     62                    oled_display_6x8str(1,4,"right");
   \                     ??Test_Dir_6: (+1)
   \   00000058   0x....             LDR.N    R2,??DataTable3_5
   \   0000005A   0x2104             MOVS     R1,#+4
   \   0000005C   0x2001             MOVS     R0,#+1
   \   0000005E   0x.... 0x....      BL       oled_display_6x8str
     63                    SetLEDBit(1,LED_4);
   \   00000062   0x2104             MOVS     R1,#+4
   \   00000064   0x2001             MOVS     R0,#+1
   \   00000066   0x.... 0x....      BL       SetLEDBit
     64                    break;
   \   0000006A   0xE7D4             B.N      ??Test_Dir_0
     65                  
     66                  case FIVE_DIR_OK:
     67                    oled_display_6x8str(1,5,"ok");
   \                     ??Test_Dir_5: (+1)
   \   0000006C   0x....             ADR.N    R2,??DataTable3_1  ;; 0x6F, 0x6B, 0x00, 0x00
   \   0000006E   0x2105             MOVS     R1,#+5
   \   00000070   0x2001             MOVS     R0,#+1
   \   00000072   0x.... 0x....      BL       oled_display_6x8str
     68                    SetLEDBit(1,LED_1);
   \   00000076   0x2101             MOVS     R1,#+1
   \   00000078   0x2001             MOVS     R0,#+1
   \   0000007A   0x.... 0x....      BL       SetLEDBit
     69                    SetLEDBit(0,LED_2);
   \   0000007E   0x2102             MOVS     R1,#+2
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x.... 0x....      BL       SetLEDBit
     70                    SetLEDBit(1,LED_3);
   \   00000086   0x2103             MOVS     R1,#+3
   \   00000088   0x2001             MOVS     R0,#+1
   \   0000008A   0x.... 0x....      BL       SetLEDBit
     71                    SetLEDBit(0,LED_4);
   \   0000008E   0x2104             MOVS     R1,#+4
   \   00000090   0x2000             MOVS     R0,#+0
   \   00000092   0x.... 0x....      BL       SetLEDBit
     72                    break;
   \   00000096   0xE7BE             B.N      ??Test_Dir_0
     73                    
     74                  default:
     75                    oled_fill(0x00);
   \                     ??Test_Dir_2: (+1)
   \   00000098   0x2000             MOVS     R0,#+0
   \   0000009A   0x.... 0x....      BL       oled_fill
     76                    SetLEDBit(LED_1,0);
   \   0000009E   0x2100             MOVS     R1,#+0
   \   000000A0   0x2001             MOVS     R0,#+1
   \   000000A2   0x.... 0x....      BL       SetLEDBit
     77                    SetLEDBit(LED_2,0);
   \   000000A6   0x2100             MOVS     R1,#+0
   \   000000A8   0x2002             MOVS     R0,#+2
   \   000000AA   0x.... 0x....      BL       SetLEDBit
     78                    SetLEDBit(LED_3,0);
   \   000000AE   0x2100             MOVS     R1,#+0
   \   000000B0   0x2003             MOVS     R0,#+3
   \   000000B2   0x.... 0x....      BL       SetLEDBit
     79                    SetLEDBit(LED_4,0);
   \   000000B6   0x2100             MOVS     R1,#+0
   \   000000B8   0x2004             MOVS     R0,#+4
   \   000000BA   0x.... 0x....      BL       SetLEDBit
     80                    break;
   \   000000BE   0xE7AA             B.N      ??Test_Dir_0
     81                  }
     82              }
     83          }
     84          
     85          

   \                                 In section .text, align 2, keep-with-next
     86          uint8 Five_Dir_Button(uint8 *pu8FiveDirValue)
     87          {
   \                     Five_Dir_Button: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
     88              uint8 u8ValueTemp = 0;
   \   00000004   0x2400             MOVS     R4,#+0
     89              static uint8 last_value;
     90              static int scan_delay = 50; //按键延时
     91              static uint8 change_flag=0;  
     92          
     93              *pu8FiveDirValue = 0;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x7028             STRB     R0,[R5, #+0]
     94              if(sleep_ms(scan_delay,0))
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x....             LDR.N    R0,??DataTable3_6
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x.... 0x....      BL       sleep_ms
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD022             BEQ.N    ??Five_Dir_Button_0
     95              {
     96                  Get_Five_Dir_Value();
   \   00000018   0x.... 0x....      BL       Get_Five_Dir_Value
     97                  if ((u8ValueTemp>=1) & (u8ValueTemp<=5)) //值能识别为正常按键
   \   0000001C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001E   0x2C00             CMP      R4,#+0
   \   00000020   0xD010             BEQ.N    ??Five_Dir_Button_1
   \   00000022   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000024   0x2C06             CMP      R4,#+6
   \   00000026   0xDA0D             BGE.N    ??Five_Dir_Button_1
     98                  {
     99                      
    100                      *pu8FiveDirValue = u8ValueTemp;
   \   00000028   0x702C             STRB     R4,[R5, #+0]
    101                      if(u8ValueTemp != last_value)
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0x....             LDR.N    R1,??DataTable3_7
   \   0000002E   0x7809             LDRB     R1,[R1, #+0]
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x4288             CMP      R0,R1
   \   00000034   0xD003             BEQ.N    ??Five_Dir_Button_2
    102                      {
    103                          change_flag = 1;
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x....             LDR.N    R1,??DataTable3_8
   \   0000003A   0x7008             STRB     R0,[R1, #+0]
   \   0000003C   0xE002             B.N      ??Five_Dir_Button_1
    104                      }
    105                      else
    106                      {
    107                          change_flag = 0;
   \                     ??Five_Dir_Button_2: (+1)
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x....             LDR.N    R1,??DataTable3_8
   \   00000042   0x7008             STRB     R0,[R1, #+0]
    108                      }
    109                      
    110                  }
    111                  if(change_flag == 1)   //确认按下一次之后，等待较长时间再进行第二次检测
   \                     ??Five_Dir_Button_1: (+1)
   \   00000044   0x....             LDR.N    R0,??DataTable3_8
   \   00000046   0x7800             LDRB     R0,[R0, #+0]
   \   00000048   0x2801             CMP      R0,#+1
   \   0000004A   0xD103             BNE.N    ??Five_Dir_Button_3
    112                  {
    113                      scan_delay =200;
   \   0000004C   0x20C8             MOVS     R0,#+200
   \   0000004E   0x....             LDR.N    R1,??DataTable3_6
   \   00000050   0x6008             STR      R0,[R1, #+0]
   \   00000052   0xE002             B.N      ??Five_Dir_Button_4
    114                  }
    115                  else
    116                  {
    117                     scan_delay = 100;
   \                     ??Five_Dir_Button_3: (+1)
   \   00000054   0x2064             MOVS     R0,#+100
   \   00000056   0x....             LDR.N    R1,??DataTable3_6
   \   00000058   0x6008             STR      R0,[R1, #+0]
    118                  }
    119                  last_value = u8ValueTemp;
   \                     ??Five_Dir_Button_4: (+1)
   \   0000005A   0x....             LDR.N    R0,??DataTable3_7
   \   0000005C   0x7004             STRB     R4,[R0, #+0]
    120              }
    121              return u8ValueTemp;
   \                     ??Five_Dir_Button_0: (+1)
   \   0000005E   0x0020             MOVS     R0,R4
   \   00000060   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000062   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    122          }

   \                                 In section .bss, align 1
   \                     `Five_Dir_Button::last_value`:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
   \                     `Five_Dir_Button::scan_delay`:
   \   00000000   0x00000032         DC32 50

   \                                 In section .bss, align 1
   \                     `Five_Dir_Button::change_flag`:
   \   00000000                      DS8 1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x75 0x70          DC8      0x75, 0x70, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x6F 0x6B          DC8      0x6F, 0x6B, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x400FF080         DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     `Five_Dir_Button::scan_delay`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     `Five_Dir_Button::last_value`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     `Five_Dir_Button::change_flag`

   \                                 In section .rodata, align 4
   \   00000000   0x75 0x70          DC8 "up"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x6C 0x65          DC8 "left"
   \              0x66 0x74    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x64 0x6F          DC8 "down"
   \              0x77 0x6E    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x72 0x69          DC8 "right"
   \              0x67 0x68    
   \              0x74 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x6F 0x6B          DC8 "ok"
   \              0x00         
   \   00000003   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   Five_Dir_Button
        16   -> Get_Five_Dir_Value
        16   -> sleep_ms
       8   Five_Dir_Init
         8   -> GPIO_Init
       8   Get_Five_Dir_Value
         8   -> LPLD_GPIO_Input_b
       8   Test_Dir
         8   -> SetLEDBit
         8   -> button_scan
         8   -> oled_display_6x8str
         8   -> oled_fill


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ?_0
       8  ?_1
       8  ?_2
       8  ?_3
       4  ?_4
     100  Five_Dir_Button
      68  Five_Dir_Init
      70  Get_Five_Dir_Value
     192  Test_Dir
       1  change_flag
       1  last_value
       4  scan_delay

 
   2 bytes in section .bss
   4 bytes in section .data
  32 bytes in section .rodata
 466 bytes in section .text
 
 466 bytes of CODE  memory
  32 bytes of CONST memory
   6 bytes of DATA  memory

Errors: none
Warnings: none
