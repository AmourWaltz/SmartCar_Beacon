###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       27/Jul/2018  20:43:47
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\signal\src\inductor.c
#    Command line =  
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\signal\src\inductor.c" -D LPLD_K60 -lCN
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\FLASH\List"
#        -lB "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\List" -o
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\CPU\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\HW\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\DEV\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\option\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\driver\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\descriptor\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\class\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\FUNC\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\driver\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\driver\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\control\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\control\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\debug\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\debug\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\device\src\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\device\inc\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\signal\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\signal\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\system\" -Ol
#        -I "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\List\inductor.lst
#    Object file  =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\Obj\inductor.o
#
###############################################################################

D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\signal\src\inductor.c
      1          /*=============================================
      2              @file         inductor.c
      3              @brief        超声波模拟定向
      4              @programmer   XBY
      5              @note         超声波通道：前       1
      6                                        后       2
      7                                        左上     3
      8                                        右上     4
      9                                        左下     5
     10                                        右下     6  
     11          =============================================*/
     12          
     13          #include "inductor.h"
     14          #include "include.h"
     15          
     16          /*===============================================================
     17          	@brief      六路超声波模拟转换使能
     18          ==================================================================*/
     19          

   \                                 In section .text, align 2, keep-with-next
     20          void ADC_Ultrasonic_Init()
     21          {
   \                     ADC_Ultrasonic_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     22              //使能相应通道
     23              LPLD_ADC_Chn_Enable(ULTRA_1_ADC_ID, ULTRA_1_ADC_CH);
   \   00000002   0x2110             MOVS     R1,#+16
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x4003b000
   \   00000008   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     24              LPLD_ADC_Chn_Enable(ULTRA_2_ADC_ID, ULTRA_2_ADC_CH);
   \   0000000C   0x2111             MOVS     R1,#+17
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x4003b000
   \   00000012   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     25              LPLD_ADC_Chn_Enable(ULTRA_3_ADC_ID, ULTRA_3_ADC_CH);
   \   00000016   0x2114             MOVS     R1,#+20
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x4003b000
   \   0000001C   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     26              LPLD_ADC_Chn_Enable(ULTRA_4_ADC_ID, ULTRA_4_ADC_CH);
   \   00000020   0x2114             MOVS     R1,#+20
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable6_1  ;; 0x400bb000
   \   00000026   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     27              LPLD_ADC_Chn_Enable(ULTRA_5_ADC_ID, ULTRA_5_ADC_CH);
   \   0000002A   0x2101             MOVS     R1,#+1
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable6_1  ;; 0x400bb000
   \   00000030   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     28              LPLD_ADC_Chn_Enable(ULTRA_6_ADC_ID, ULTRA_6_ADC_CH);
   \   00000034   0x2103             MOVS     R1,#+3
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable6_1  ;; 0x400bb000
   \   0000003A   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     29          }
   \   0000003E   0xBD01             POP      {R0,PC}          ;; return
     30          
     31          /*===============================================================
     32          	@brief      获取六路超声波AD转换结果
     33          ==================================================================*/
     34          

   \                                 In section .text, align 2, keep-with-next
     35          uint16 Get_Ultrasonic_ADC(uint8 inductor_num)
     36          {
   \                     Get_Ultrasonic_ADC: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x0001             MOVS     R1,R0
     37              uint16 inductor_adc_temp = 0;
   \   00000004   0x2000             MOVS     R0,#+0
     38              switch (inductor_num)
   \   00000006   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000008   0x2900             CMP      R1,#+0
   \   0000000A   0xD008             BEQ.N    ??Get_Ultrasonic_ADC_0
   \   0000000C   0x2902             CMP      R1,#+2
   \   0000000E   0xD012             BEQ.N    ??Get_Ultrasonic_ADC_1
   \   00000010   0xD30B             BCC.N    ??Get_Ultrasonic_ADC_2
   \   00000012   0x2904             CMP      R1,#+4
   \   00000014   0xD01B             BEQ.N    ??Get_Ultrasonic_ADC_3
   \   00000016   0xD314             BCC.N    ??Get_Ultrasonic_ADC_4
   \   00000018   0x2905             CMP      R1,#+5
   \   0000001A   0xD01E             BEQ.N    ??Get_Ultrasonic_ADC_5
   \   0000001C   0xE023             B.N      ??Get_Ultrasonic_ADC_6
     39              {
     40                  case ULTRA_FRONT:
     41                          inductor_adc_temp = LPLD_ADC_Get(ULTRA_1_ADC_ID, ULTRA_1_ADC_CH);
   \                     ??Get_Ultrasonic_ADC_0: (+1)
   \   0000001E   0x2110             MOVS     R1,#+16
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x4003b000
   \   00000024   0x.... 0x....      BL       LPLD_ADC_Get
     42                          break;
   \   00000028   0xE01D             B.N      ??Get_Ultrasonic_ADC_7
     43                  case ULTRA_BACK:
     44                          inductor_adc_temp = LPLD_ADC_Get(ULTRA_2_ADC_ID, ULTRA_2_ADC_CH);
   \                     ??Get_Ultrasonic_ADC_2: (+1)
   \   0000002A   0x2111             MOVS     R1,#+17
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x4003b000
   \   00000030   0x.... 0x....      BL       LPLD_ADC_Get
     45                          break;
   \   00000034   0xE017             B.N      ??Get_Ultrasonic_ADC_7
     46                  case ULTRA_LEFT_F:
     47                          inductor_adc_temp = LPLD_ADC_Get(ULTRA_3_ADC_ID, ULTRA_3_ADC_CH);
   \                     ??Get_Ultrasonic_ADC_1: (+1)
   \   00000036   0x2114             MOVS     R1,#+20
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x4003b000
   \   0000003C   0x.... 0x....      BL       LPLD_ADC_Get
     48                          break;
   \   00000040   0xE011             B.N      ??Get_Ultrasonic_ADC_7
     49                  case ULTRA_RIGHT_F:
     50                          inductor_adc_temp = LPLD_ADC_Get(ULTRA_4_ADC_ID, ULTRA_4_ADC_CH);
   \                     ??Get_Ultrasonic_ADC_4: (+1)
   \   00000042   0x2114             MOVS     R1,#+20
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable6_1  ;; 0x400bb000
   \   00000048   0x.... 0x....      BL       LPLD_ADC_Get
     51                          break;
   \   0000004C   0xE00B             B.N      ??Get_Ultrasonic_ADC_7
     52                  case ULTRA_LEFT_B:
     53                          inductor_adc_temp = LPLD_ADC_Get(ULTRA_5_ADC_ID, ULTRA_5_ADC_CH);
   \                     ??Get_Ultrasonic_ADC_3: (+1)
   \   0000004E   0x2101             MOVS     R1,#+1
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable6_1  ;; 0x400bb000
   \   00000054   0x.... 0x....      BL       LPLD_ADC_Get
     54                          break;
   \   00000058   0xE005             B.N      ??Get_Ultrasonic_ADC_7
     55                  case ULTRA_RIGHT_B:
     56                          inductor_adc_temp = LPLD_ADC_Get(ULTRA_6_ADC_ID, ULTRA_6_ADC_CH);
   \                     ??Get_Ultrasonic_ADC_5: (+1)
   \   0000005A   0x2103             MOVS     R1,#+3
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable6_1  ;; 0x400bb000
   \   00000060   0x.... 0x....      BL       LPLD_ADC_Get
     57                          break;
   \   00000064   0xE7FF             B.N      ??Get_Ultrasonic_ADC_7
     58                  default:
     59                          break;   
     60              }
     61              return inductor_adc_temp;
   \                     ??Get_Ultrasonic_ADC_6: (+1)
   \                     ??Get_Ultrasonic_ADC_7: (+1)
   \   00000066   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000068   0xBD02             POP      {R1,PC}          ;; return
     62          }
     63          
     64          /*===============================================================
     65          	@brief      均值处理六路超声波AD转换结果
     66          ==================================================================*/
     67          

   \                                 In section .text, align 2, keep-with-next
     68          void Get_Ultrasonic_Value_Ave()
     69          {
   \                     Get_Ultrasonic_Value_Ave: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB08A             SUB      SP,SP,#+40
     70              uint16 adc_value[NUM_ULTRASONIC][AVE_TIMES] = {0};
   \   00000004   0x4668             MOV      R0,SP
   \   00000006   0x2124             MOVS     R1,#+36
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
     71              uint16 temp_sum = 0;
   \   0000000C   0x2000             MOVS     R0,#+0
     72              int i = 0, j = 0;
   \   0000000E   0x2400             MOVS     R4,#+0
   \   00000010   0x2500             MOVS     R5,#+0
     73              for (j = 0; j < AVE_TIMES; j++)
   \   00000012   0x2500             MOVS     R5,#+0
   \   00000014   0xE00F             B.N      ??Get_Ultrasonic_Value_Ave_0
     74              {
     75                  for (i = 0; i < NUM_ULTRASONIC; i++)
     76                  {
     77                      adc_value[i][j] = Get_Ultrasonic_ADC(i);
   \                     ??Get_Ultrasonic_Value_Ave_1: (+1)
   \   00000016   0x4668             MOV      R0,SP
   \   00000018   0x2106             MOVS     R1,#+6
   \   0000001A   0xFB01 0xF104      MUL      R1,R1,R4
   \   0000001E   0xEB00 0x0601      ADD      R6,R0,R1
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       Get_Ultrasonic_ADC
   \   0000002A   0xF826 0x0015      STRH     R0,[R6, R5, LSL #+1]
     78                  }
   \   0000002E   0x1C64             ADDS     R4,R4,#+1
   \                     ??Get_Ultrasonic_Value_Ave_2: (+1)
   \   00000030   0x2C06             CMP      R4,#+6
   \   00000032   0xDBF0             BLT.N    ??Get_Ultrasonic_Value_Ave_1
   \   00000034   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Get_Ultrasonic_Value_Ave_0: (+1)
   \   00000036   0x2D03             CMP      R5,#+3
   \   00000038   0xDA01             BGE.N    ??Get_Ultrasonic_Value_Ave_3
   \   0000003A   0x2400             MOVS     R4,#+0
   \   0000003C   0xE7F8             B.N      ??Get_Ultrasonic_Value_Ave_2
     79              }
     80              
     81              for (i = 0; i < NUM_ULTRASONIC; i++)
   \                     ??Get_Ultrasonic_Value_Ave_3: (+1)
   \   0000003E   0x2400             MOVS     R4,#+0
   \   00000040   0xE01E             B.N      ??Get_Ultrasonic_Value_Ave_4
     82              {
     83                  temp_sum = 0;
     84                  for (j = 0; j < AVE_TIMES; j++)
     85                  {
     86                      temp_sum += adc_value[i][j];
   \                     ??Get_Ultrasonic_Value_Ave_5: (+1)
   \   00000042   0x4669             MOV      R1,SP
   \   00000044   0x2206             MOVS     R2,#+6
   \   00000046   0xFB02 0xF204      MUL      R2,R2,R4
   \   0000004A   0x4411             ADD      R1,R1,R2
   \   0000004C   0xF831 0x1015      LDRH     R1,[R1, R5, LSL #+1]
   \   00000050   0x1808             ADDS     R0,R1,R0
     87                  }
   \   00000052   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Get_Ultrasonic_Value_Ave_6: (+1)
   \   00000054   0x2D03             CMP      R5,#+3
   \   00000056   0xDBF4             BLT.N    ??Get_Ultrasonic_Value_Ave_5
     88                  gi_ultrasonic_value[i] = (int16)((temp_sum+0.5*AVE_TIMES) / AVE_TIMES);
   \   00000058   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000005A   0x.... 0x....      BL       __aeabi_ui2d
   \   0000005E   0x2200             MOVS     R2,#+0
   \   00000060   0x.... 0x....      LDR.W    R3,??DataTable6_2  ;; 0x3ff80000
   \   00000064   0x.... 0x....      BL       __aeabi_dadd
   \   00000068   0x2200             MOVS     R2,#+0
   \   0000006A   0x.... 0x....      LDR.W    R3,??DataTable6_3  ;; 0x40080000
   \   0000006E   0x.... 0x....      BL       __aeabi_ddiv
   \   00000072   0x.... 0x....      BL       __aeabi_d2iz
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   0000007A   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000007E   0x1C64             ADDS     R4,R4,#+1
   \                     ??Get_Ultrasonic_Value_Ave_4: (+1)
   \   00000080   0x2C06             CMP      R4,#+6
   \   00000082   0xDA02             BGE.N    ??Get_Ultrasonic_Value_Ave_7
   \   00000084   0x2000             MOVS     R0,#+0
   \   00000086   0x2500             MOVS     R5,#+0
   \   00000088   0xE7E4             B.N      ??Get_Ultrasonic_Value_Ave_6
     89              }
     90          }
   \                     ??Get_Ultrasonic_Value_Ave_7: (+1)
   \   0000008A   0xB00A             ADD      SP,SP,#+40
   \   0000008C   0xBD70             POP      {R4-R6,PC}       ;; return
     91          
     92          /*===============================================================
     93          	@brief      超声波值检测跳变最小二乘法滤波器
     94                  @function   超声波值跳变计数，超过一定次数，认为当前信标灯被灭掉，可用于信标计数
     95          ==================================================================*/
     96          

   \                                 In section .text, align 2, keep-with-next
     97          void Filter_Ultrasonic_Value(int16 ultrasonic_value[])
     98          {
   \                     Filter_Ultrasonic_Value: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
     99              static int si_last_ultrasonic_value[NUM_ULTRASONIC] = {0};
    100              static int si_jump_ultrasonic_times[NUM_ULTRASONIC] = {0};
    101              static int8 sc_jump_count = 0;
    102              int i = 0, j = 0;
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0x2000             MOVS     R0,#+0
    103           
    104              for(i = 0; i < NUM_ULTRASONIC; i++)
   \   00000008   0x2500             MOVS     R5,#+0
   \   0000000A   0xE00A             B.N      ??Filter_Ultrasonic_Value_0
    105              {
    106          	si_last_ultrasonic_value[i] = gi_ultrasonic_history[i][0];
   \                     ??Filter_Ultrasonic_Value_1: (+1)
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000010   0x210A             MOVS     R1,#+10
   \   00000012   0xFB01 0xF105      MUL      R1,R1,R5
   \   00000016   0x5E40             LDRSH    R0,[R0, R1]
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   0000001C   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
    107              }
   \   00000020   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Filter_Ultrasonic_Value_0: (+1)
   \   00000022   0x2D06             CMP      R5,#+6
   \   00000024   0xDBF2             BLT.N    ??Filter_Ultrasonic_Value_1
    108              
    109              for(i = 0; i < NUM_ULTRASONIC; i++)
   \   00000026   0x2500             MOVS     R5,#+0
   \   00000028   0xE00B             B.N      ??Filter_Ultrasonic_Value_2
    110              {
    111          	if(ultrasonic_value[i] <= si_last_ultrasonic_value[i])
    112          	{
    113                      if(ultrasonic_value[i] < (si_last_ultrasonic_value[i] - 30))
    114                      {//用滤波后的超声波值数组滤波
    115                          si_last_ultrasonic_value[i] = least_squares_value(gi_ultrasonic_history[i]);
    116          		si_jump_ultrasonic_times[i] ++;
    117                          
    118                          //跳变超过一定次数，认为当前超声波值为正确值
    119          		if(si_jump_ultrasonic_times[i] >= JUMP_MAX_TIMES)
    120          		{
    121                              si_last_ultrasonic_value[i] = ultrasonic_value[i];
    122                              si_jump_ultrasonic_times[i] = 0;
    123                              sc_jump_count++;
    124          		}
    125                      }
    126                      else if(ultrasonic_value[i] < (si_last_ultrasonic_value[i] - 15))
    127                      {
    128                          si_last_ultrasonic_value[i] = si_last_ultrasonic_value[i] - 5;
    129          		si_jump_ultrasonic_times[i] = 0;
    130                      }
    131                      else
    132                      {
    133          		si_last_ultrasonic_value[i] = ultrasonic_value[i];
    134          		si_jump_ultrasonic_times[i] = 0;
    135                      }
    136                  }
    137                  else
    138                  {
    139                      if(ultrasonic_value[i] > (si_last_ultrasonic_value[i] + 30))
    140                      {
    141          		si_last_ultrasonic_value[i] = least_squares_value(gi_ultrasonic_history[i]);
    142          		si_jump_ultrasonic_times[i] ++;
    143          
    144          		if(si_jump_ultrasonic_times[i] >= JUMP_MAX_TIMES)
    145          		{
    146                              si_last_ultrasonic_value[i] = ultrasonic_value[i];
    147                              si_jump_ultrasonic_times[i] = 0;
    148                              sc_jump_count++;
    149          		}
    150                      }
    151                      else if(ultrasonic_value[i] > (si_last_ultrasonic_value[i] + 15))
    152                      {
    153                          si_last_ultrasonic_value[i] = si_last_ultrasonic_value[i] + 5;
    154                          si_jump_ultrasonic_times[i] = 0;
    155                      }
    156                      else
    157                      {
    158          		si_last_ultrasonic_value[i] = ultrasonic_value[i];
   \                     ??Filter_Ultrasonic_Value_3: (+1)
   \   0000002A   0xF934 0x0015      LDRSH    R0,[R4, R5, LSL #+1]
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   00000032   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
    159          		si_jump_ultrasonic_times[i] = 0;
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable6_7
   \   0000003C   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
    160                      }
   \                     ??Filter_Ultrasonic_Value_4: (+1)
   \   00000040   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Filter_Ultrasonic_Value_2: (+1)
   \   00000042   0x2D06             CMP      R5,#+6
   \   00000044   0xF280 0x8095      BGE.W    ??Filter_Ultrasonic_Value_5
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   0000004C   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   00000050   0xF934 0x1015      LDRSH    R1,[R4, R5, LSL #+1]
   \   00000054   0x4288             CMP      R0,R1
   \   00000056   0xDB4A             BLT.N    ??Filter_Ultrasonic_Value_6
   \   00000058   0xF934 0x0015      LDRSH    R0,[R4, R5, LSL #+1]
   \   0000005C   0x....             LDR.N    R1,??DataTable6_6
   \   0000005E   0xF851 0x1025      LDR      R1,[R1, R5, LSL #+2]
   \   00000062   0x391E             SUBS     R1,R1,#+30
   \   00000064   0x4288             CMP      R0,R1
   \   00000066   0xDA24             BGE.N    ??Filter_Ultrasonic_Value_7
   \   00000068   0x....             LDR.N    R0,??DataTable6_5
   \   0000006A   0x210A             MOVS     R1,#+10
   \   0000006C   0xFB01 0xF105      MUL      R1,R1,R5
   \   00000070   0x4408             ADD      R0,R0,R1
   \   00000072   0x.... 0x....      BL       least_squares_value
   \   00000076   0x....             LDR.N    R1,??DataTable6_6
   \   00000078   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   0000007C   0x....             LDR.N    R0,??DataTable6_7
   \   0000007E   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   00000082   0x1C40             ADDS     R0,R0,#+1
   \   00000084   0x....             LDR.N    R1,??DataTable6_7
   \   00000086   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   0000008A   0x....             LDR.N    R0,??DataTable6_7
   \   0000008C   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   00000090   0x2805             CMP      R0,#+5
   \   00000092   0xDBD5             BLT.N    ??Filter_Ultrasonic_Value_4
   \   00000094   0xF934 0x0015      LDRSH    R0,[R4, R5, LSL #+1]
   \   00000098   0x....             LDR.N    R1,??DataTable6_6
   \   0000009A   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   0000009E   0x2000             MOVS     R0,#+0
   \   000000A0   0x....             LDR.N    R1,??DataTable6_7
   \   000000A2   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   000000A6   0x....             LDR.N    R0,??DataTable6_8
   \   000000A8   0x7800             LDRB     R0,[R0, #+0]
   \   000000AA   0x1C40             ADDS     R0,R0,#+1
   \   000000AC   0x....             LDR.N    R1,??DataTable6_8
   \   000000AE   0x7008             STRB     R0,[R1, #+0]
   \   000000B0   0xE7C6             B.N      ??Filter_Ultrasonic_Value_4
   \                     ??Filter_Ultrasonic_Value_7: (+1)
   \   000000B2   0xF934 0x0015      LDRSH    R0,[R4, R5, LSL #+1]
   \   000000B6   0x....             LDR.N    R1,??DataTable6_6
   \   000000B8   0xF851 0x1025      LDR      R1,[R1, R5, LSL #+2]
   \   000000BC   0x390F             SUBS     R1,R1,#+15
   \   000000BE   0x4288             CMP      R0,R1
   \   000000C0   0xDA0B             BGE.N    ??Filter_Ultrasonic_Value_8
   \   000000C2   0x....             LDR.N    R0,??DataTable6_6
   \   000000C4   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   000000C8   0x1F40             SUBS     R0,R0,#+5
   \   000000CA   0x....             LDR.N    R1,??DataTable6_6
   \   000000CC   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   000000D0   0x2000             MOVS     R0,#+0
   \   000000D2   0x....             LDR.N    R1,??DataTable6_7
   \   000000D4   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   000000D8   0xE7B2             B.N      ??Filter_Ultrasonic_Value_4
   \                     ??Filter_Ultrasonic_Value_8: (+1)
   \   000000DA   0xF934 0x0015      LDRSH    R0,[R4, R5, LSL #+1]
   \   000000DE   0x....             LDR.N    R1,??DataTable6_6
   \   000000E0   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0x....             LDR.N    R1,??DataTable6_7
   \   000000E8   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   000000EC   0xE7A8             B.N      ??Filter_Ultrasonic_Value_4
   \                     ??Filter_Ultrasonic_Value_6: (+1)
   \   000000EE   0x....             LDR.N    R0,??DataTable6_6
   \   000000F0   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   000000F4   0x301E             ADDS     R0,R0,#+30
   \   000000F6   0xF934 0x1015      LDRSH    R1,[R4, R5, LSL #+1]
   \   000000FA   0x4288             CMP      R0,R1
   \   000000FC   0xDA24             BGE.N    ??Filter_Ultrasonic_Value_9
   \   000000FE   0x....             LDR.N    R0,??DataTable6_5
   \   00000100   0x210A             MOVS     R1,#+10
   \   00000102   0xFB01 0xF105      MUL      R1,R1,R5
   \   00000106   0x4408             ADD      R0,R0,R1
   \   00000108   0x.... 0x....      BL       least_squares_value
   \   0000010C   0x....             LDR.N    R1,??DataTable6_6
   \   0000010E   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   00000112   0x....             LDR.N    R0,??DataTable6_7
   \   00000114   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   00000118   0x1C40             ADDS     R0,R0,#+1
   \   0000011A   0x....             LDR.N    R1,??DataTable6_7
   \   0000011C   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   00000120   0x....             LDR.N    R0,??DataTable6_7
   \   00000122   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   00000126   0x2805             CMP      R0,#+5
   \   00000128   0xDB8A             BLT.N    ??Filter_Ultrasonic_Value_4
   \   0000012A   0xF934 0x0015      LDRSH    R0,[R4, R5, LSL #+1]
   \   0000012E   0x....             LDR.N    R1,??DataTable6_6
   \   00000130   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   00000134   0x2000             MOVS     R0,#+0
   \   00000136   0x....             LDR.N    R1,??DataTable6_7
   \   00000138   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   0000013C   0x....             LDR.N    R0,??DataTable6_8
   \   0000013E   0x7800             LDRB     R0,[R0, #+0]
   \   00000140   0x1C40             ADDS     R0,R0,#+1
   \   00000142   0x....             LDR.N    R1,??DataTable6_8
   \   00000144   0x7008             STRB     R0,[R1, #+0]
   \   00000146   0xE77B             B.N      ??Filter_Ultrasonic_Value_4
   \                     ??Filter_Ultrasonic_Value_9: (+1)
   \   00000148   0x....             LDR.N    R0,??DataTable6_6
   \   0000014A   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   0000014E   0x300F             ADDS     R0,R0,#+15
   \   00000150   0xF934 0x1015      LDRSH    R1,[R4, R5, LSL #+1]
   \   00000154   0x4288             CMP      R0,R1
   \   00000156   0xF6BF 0xAF68      BGE.W    ??Filter_Ultrasonic_Value_3
   \   0000015A   0x....             LDR.N    R0,??DataTable6_6
   \   0000015C   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   00000160   0x1D40             ADDS     R0,R0,#+5
   \   00000162   0x....             LDR.N    R1,??DataTable6_6
   \   00000164   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   00000168   0x2000             MOVS     R0,#+0
   \   0000016A   0x....             LDR.N    R1,??DataTable6_7
   \   0000016C   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   00000170   0xE766             B.N      ??Filter_Ultrasonic_Value_4
    161          	}
    162              }
    163              //更新超声波值
    164              for(i = 0; i < NUM_ULTRASONIC; i++)
   \                     ??Filter_Ultrasonic_Value_5: (+1)
   \   00000172   0x2500             MOVS     R5,#+0
   \   00000174   0xE005             B.N      ??Filter_Ultrasonic_Value_10
    165              {
    166          	ultrasonic_value[i] = si_last_ultrasonic_value[i];
   \                     ??Filter_Ultrasonic_Value_11: (+1)
   \   00000176   0x....             LDR.N    R0,??DataTable6_6
   \   00000178   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   0000017C   0xF824 0x0015      STRH     R0,[R4, R5, LSL #+1]
    167              }
   \   00000180   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Filter_Ultrasonic_Value_10: (+1)
   \   00000182   0x2D06             CMP      R5,#+6
   \   00000184   0xDBF7             BLT.N    ??Filter_Ultrasonic_Value_11
    168              //更新历史超声波值
    169              for(i = 0; i < NUM_ULTRASONIC; i++)
   \   00000186   0x2500             MOVS     R5,#+0
   \   00000188   0xE01A             B.N      ??Filter_Ultrasonic_Value_12
    170              {
    171          	for(j = NUM_ULTRASONIC_HISTORY-1; j >= 1; j--)
    172          	{			
    173                      gi_ultrasonic_history[i][j] = gi_ultrasonic_history[i][j-1];
   \                     ??Filter_Ultrasonic_Value_13: (+1)
   \   0000018A   0x....             LDR.N    R1,??DataTable6_5
   \   0000018C   0x220A             MOVS     R2,#+10
   \   0000018E   0xFB02 0xF205      MUL      R2,R2,R5
   \   00000192   0x4411             ADD      R1,R1,R2
   \   00000194   0x....             LDR.N    R2,??DataTable6_5
   \   00000196   0x230A             MOVS     R3,#+10
   \   00000198   0xFB03 0xF305      MUL      R3,R3,R5
   \   0000019C   0x441A             ADD      R2,R2,R3
   \   0000019E   0xEB02 0x0240      ADD      R2,R2,R0, LSL #+1
   \   000001A2   0xF832 0x2C02      LDRH     R2,[R2, #-2]
   \   000001A6   0xF821 0x2010      STRH     R2,[R1, R0, LSL #+1]
    174          	}
   \   000001AA   0x1E40             SUBS     R0,R0,#+1
   \                     ??Filter_Ultrasonic_Value_14: (+1)
   \   000001AC   0x2801             CMP      R0,#+1
   \   000001AE   0xDAEC             BGE.N    ??Filter_Ultrasonic_Value_13
    175          	gi_ultrasonic_history[i][0] = ultrasonic_value[i];
   \   000001B0   0xF834 0x0015      LDRH     R0,[R4, R5, LSL #+1]
   \   000001B4   0x....             LDR.N    R1,??DataTable6_5
   \   000001B6   0x220A             MOVS     R2,#+10
   \   000001B8   0xFB02 0xF205      MUL      R2,R2,R5
   \   000001BC   0x5288             STRH     R0,[R1, R2]
   \   000001BE   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Filter_Ultrasonic_Value_12: (+1)
   \   000001C0   0x2D06             CMP      R5,#+6
   \   000001C2   0xDA01             BGE.N    ??Filter_Ultrasonic_Value_15
   \   000001C4   0x2004             MOVS     R0,#+4
   \   000001C6   0xE7F1             B.N      ??Filter_Ultrasonic_Value_14
    176              }
    177              //根据跳变超声波通道数量判断是否灭灯并计数
    178              if(sc_jump_count > 1)
   \                     ??Filter_Ultrasonic_Value_15: (+1)
   \   000001C8   0x....             LDR.N    R0,??DataTable6_8
   \   000001CA   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   000001CE   0x2802             CMP      R0,#+2
   \   000001D0   0xDB04             BLT.N    ??Filter_Ultrasonic_Value_16
    179              {
    180                  guc_beacon_count++;
   \   000001D2   0x....             LDR.N    R0,??DataTable6_9
   \   000001D4   0x7800             LDRB     R0,[R0, #+0]
   \   000001D6   0x1C40             ADDS     R0,R0,#+1
   \   000001D8   0x....             LDR.N    R1,??DataTable6_9
   \   000001DA   0x7008             STRB     R0,[R1, #+0]
    181              }
    182              
    183              sc_jump_count = 0;
   \                     ??Filter_Ultrasonic_Value_16: (+1)
   \   000001DC   0x2000             MOVS     R0,#+0
   \   000001DE   0x....             LDR.N    R1,??DataTable6_8
   \   000001E0   0x7008             STRB     R0,[R1, #+0]
    184          }
   \   000001E2   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .bss, align 4
   \                     `Filter_Ultrasonic_Value::si_last_ultrasonic_value`:
   \   00000000                      DS8 24

   \                                 In section .bss, align 4
   \                     `Filter_Ultrasonic_Value::si_jump_ultrasonic_times`:
   \   00000000                      DS8 24

   \                                 In section .bss, align 1
   \                     `Filter_Ultrasonic_Value::sc_jump_count`:
   \   00000000                      DS8 1
    185          
    186          /*===============================================================
    187          	@brief      超声波值动态标定，得出差比和
    188          ==================================================================*/
    189          

   \                                 In section .text, align 2, keep-with-next
    190          void Get_Standard_Ultrasonic(int16 ultrasonic_value[])
    191          {
   \                     Get_Standard_Ultrasonic: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    192              int16 sensor_front = 0;
   \   00000002   0x2100             MOVS     R1,#+0
    193              int16 sensor_back = 0;
   \   00000004   0x2200             MOVS     R2,#+0
    194          //    int16 sensor_left = 0;
    195          //    int16 sensor_right = 0;
    196          
    197          //    float  sensor_offset_x_temp = 0;
    198              float  sensor_offset_y_temp = 0;
   \   00000006   0x2100             MOVS     R1,#+0
    199             
    200          
    201              sensor_front = ultrasonic_value[ULTRA_FRONT];
   \   00000008   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
    202              sensor_back  = ultrasonic_value[ULTRA_BACK];
   \   0000000C   0xF9B0 0x2002      LDRSH    R2,[R0, #+2]
    203          //    sensor_left =  ultrasonic_value[ULTRA_LEFT_F];
    204          //    sensor_right = ultrasonic_value[ULTRA_RIGHT_F];    
    205              
    206          //    sensor_left  = (int16)((ultrasonic_value[ULTRA_LEFT_F] + ultrasonic_value[ULTRA_LEFT_B]) / 2);
    207          //    sensor_right = (int16)((ultrasonic_value[ULTRA_RIGHT_F]+ ultrasonic_value[ULTRA_RIGHT_B]) / 2);
    208          
    209              //纵向超声波差比和
    210              sensor_offset_y_temp = ((ORIGINAL_LINEAR_X)*(sensor_front - sensor_back)/(sensor_front + sensor_back));
   \   00000010   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000012   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000014   0x1A88             SUBS     R0,R1,R2
   \   00000016   0xF242 0x7310      MOVW     R3,#+10000
   \   0000001A   0x4358             MULS     R0,R3,R0
   \   0000001C   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000001E   0xFA02 0xF181      SXTAH    R1,R2,R1
   \   00000022   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000026   0x.... 0x....      BL       __aeabi_i2f
   \   0000002A   0x0001             MOVS     R1,R0
    211              //横向超声波差比和
    212          //    sensor_offset_y_temp = (ORIGINAL_LINEAR_Y)*((sensor_left - sensor_right)/(sensor_left + sensor_right));
    213          
    214          //    gi_ultrasonic_offset_x = (int16)sensor_offset_x_temp;
    215              gi_ultrasonic_offset_y = (int16)sensor_offset_y_temp;
   \   0000002C   0x0008             MOVS     R0,R1
   \   0000002E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000032   0x....             LDR.N    R1,??DataTable6_10
   \   00000034   0x8008             STRH     R0,[R1, #+0]
    216          }
   \   00000036   0xBD01             POP      {R0,PC}          ;; return
    217          
    218          /*===============================================================
    219          	@brief      比较检测超声波得出定向角度
    220          ==================================================================*/
    221          

   \                                 In section .text, align 2, keep-with-next
    222          void Directional_Calculate()
    223          {
   \                     Directional_Calculate: (+1)
   \   00000000   0xB410             PUSH     {R4}
    224              int16 i;
    225              int8 ultra_max_beacon;
    226              int16 ultra_max_value;
    227              
    228              ultra_max_value = gi_ultrasonic_value[0];
   \   00000002   0x....             LDR.N    R0,??DataTable6_4
   \   00000004   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
    229              ultra_max_beacon = 0;
   \   00000008   0x2100             MOVS     R1,#+0
    230              
    231              for(i=1; i<NUM_ULTRASONIC;i++)
   \   0000000A   0x2001             MOVS     R0,#+1
   \   0000000C   0xE00D             B.N      ??Directional_Calculate_0
    232              {
    233                  if(gi_ultrasonic_value[i] > ultra_max_value)
   \                     ??Directional_Calculate_1: (+1)
   \   0000000E   0x0013             MOVS     R3,R2
   \   00000010   0x....             LDR.N    R4,??DataTable6_4
   \   00000012   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000014   0xF934 0x4010      LDRSH    R4,[R4, R0, LSL #+1]
   \   00000018   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \   0000001A   0x42A3             CMP      R3,R4
   \   0000001C   0xDA04             BGE.N    ??Directional_Calculate_2
    234                  {
    235                      ultra_max_value = gi_ultrasonic_value[i];
   \   0000001E   0x....             LDR.N    R1,??DataTable6_4
   \   00000020   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000022   0xF931 0x2010      LDRSH    R2,[R1, R0, LSL #+1]
    236                      ultra_max_beacon= i;
   \   00000026   0x0001             MOVS     R1,R0
    237                  }
    238              }
   \                     ??Directional_Calculate_2: (+1)
   \   00000028   0x1C40             ADDS     R0,R0,#+1
   \                     ??Directional_Calculate_0: (+1)
   \   0000002A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000002C   0x2806             CMP      R0,#+6
   \   0000002E   0xDBEE             BLT.N    ??Directional_Calculate_1
    239              
    240              switch (ultra_max_beacon)
   \   00000030   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000032   0x2900             CMP      R1,#+0
   \   00000034   0xD008             BEQ.N    ??Directional_Calculate_3
   \   00000036   0x2902             CMP      R1,#+2
   \   00000038   0xD01D             BEQ.N    ??Directional_Calculate_4
   \   0000003A   0xD309             BCC.N    ??Directional_Calculate_5
   \   0000003C   0x2904             CMP      R1,#+4
   \   0000003E   0xD028             BEQ.N    ??Directional_Calculate_6
   \   00000040   0xD320             BCC.N    ??Directional_Calculate_7
   \   00000042   0x2905             CMP      R1,#+5
   \   00000044   0xD02C             BEQ.N    ??Directional_Calculate_8
   \   00000046   0xE032             B.N      ??Directional_Calculate_9
    241              {
    242                  case ULTRA_FRONT:
    243                          guc_beacon_directional_y = FRONT;
   \                     ??Directional_Calculate_3: (+1)
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x....             LDR.N    R1,??DataTable6_11
   \   0000004C   0x7008             STRB     R0,[R1, #+0]
    244                          break;
   \   0000004E   0xE02E             B.N      ??Directional_Calculate_10
    245                  case ULTRA_BACK:
    246                    {
    247                        guc_beacon_directional_y = BACK;
   \                     ??Directional_Calculate_5: (+1)
   \   00000050   0x2001             MOVS     R0,#+1
   \   00000052   0x....             LDR.N    R1,??DataTable6_11
   \   00000054   0x7008             STRB     R0,[R1, #+0]
    248                        if(gi_ultrasonic_value[ULTRA_LEFT_B] > gi_ultrasonic_value[ULTRA_RIGHT_B])
   \   00000056   0x....             LDR.N    R0,??DataTable6_4
   \   00000058   0xF9B0 0x000A      LDRSH    R0,[R0, #+10]
   \   0000005C   0x....             LDR.N    R1,??DataTable6_4
   \   0000005E   0xF9B1 0x1008      LDRSH    R1,[R1, #+8]
   \   00000062   0x4288             CMP      R0,R1
   \   00000064   0xDA03             BGE.N    ??Directional_Calculate_11
    249                          guc_beacon_directional_x = LEFT;
   \   00000066   0x2001             MOVS     R0,#+1
   \   00000068   0x....             LDR.N    R1,??DataTable6_12
   \   0000006A   0x7008             STRB     R0,[R1, #+0]
   \   0000006C   0xE002             B.N      ??Directional_Calculate_12
    250                        else 
    251                          guc_beacon_directional_x = RIGHT;
   \                     ??Directional_Calculate_11: (+1)
   \   0000006E   0x2002             MOVS     R0,#+2
   \   00000070   0x....             LDR.N    R1,??DataTable6_12
   \   00000072   0x7008             STRB     R0,[R1, #+0]
    252                    }
    253                          break;
   \                     ??Directional_Calculate_12: (+1)
   \   00000074   0xE01B             B.N      ??Directional_Calculate_10
    254                  case ULTRA_LEFT_F:
    255                          guc_beacon_directional_x = LEFT;
   \                     ??Directional_Calculate_4: (+1)
   \   00000076   0x2001             MOVS     R0,#+1
   \   00000078   0x....             LDR.N    R1,??DataTable6_12
   \   0000007A   0x7008             STRB     R0,[R1, #+0]
    256                          guc_beacon_directional_y = FRONT;
   \   0000007C   0x2000             MOVS     R0,#+0
   \   0000007E   0x....             LDR.N    R1,??DataTable6_11
   \   00000080   0x7008             STRB     R0,[R1, #+0]
    257                          break;
   \   00000082   0xE014             B.N      ??Directional_Calculate_10
    258                  case ULTRA_RIGHT_F:
    259                          guc_beacon_directional_x = RIGHT;
   \                     ??Directional_Calculate_7: (+1)
   \   00000084   0x2002             MOVS     R0,#+2
   \   00000086   0x....             LDR.N    R1,??DataTable6_12
   \   00000088   0x7008             STRB     R0,[R1, #+0]
    260                          guc_beacon_directional_y = FRONT;
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0x....             LDR.N    R1,??DataTable6_11
   \   0000008E   0x7008             STRB     R0,[R1, #+0]
    261                          break;
   \   00000090   0xE00D             B.N      ??Directional_Calculate_10
    262                  case ULTRA_LEFT_B:
    263                          guc_beacon_directional_x = LEFT;
   \                     ??Directional_Calculate_6: (+1)
   \   00000092   0x2001             MOVS     R0,#+1
   \   00000094   0x....             LDR.N    R1,??DataTable6_12
   \   00000096   0x7008             STRB     R0,[R1, #+0]
    264                          guc_beacon_directional_y = BACK;
   \   00000098   0x2001             MOVS     R0,#+1
   \   0000009A   0x....             LDR.N    R1,??DataTable6_11
   \   0000009C   0x7008             STRB     R0,[R1, #+0]
    265                          break;
   \   0000009E   0xE006             B.N      ??Directional_Calculate_10
    266                  case ULTRA_RIGHT_B:
    267                          guc_beacon_directional_x = RIGHT;
   \                     ??Directional_Calculate_8: (+1)
   \   000000A0   0x2002             MOVS     R0,#+2
   \   000000A2   0x....             LDR.N    R1,??DataTable6_12
   \   000000A4   0x7008             STRB     R0,[R1, #+0]
    268                          guc_beacon_directional_y = BACK;
   \   000000A6   0x2001             MOVS     R0,#+1
   \   000000A8   0x....             LDR.N    R1,??DataTable6_11
   \   000000AA   0x7008             STRB     R0,[R1, #+0]
    269                          break;
   \   000000AC   0xE7FF             B.N      ??Directional_Calculate_10
    270                  default:
    271                          break;   
    272              }
    273              
    274          }
   \                     ??Directional_Calculate_9: (+1)
   \                     ??Directional_Calculate_10: (+1)
   \   000000AE   0xBC10             POP      {R4}
   \   000000B0   0x4770             BX       LR               ;; return
    275          
    276          /*===============================================================
    277          	@brief      超声波AD值处理综合函数
    278                  @function   发车一定时间后进行超声波滤波以及信标计数
    279                  @note       可外部调用
    280          ==================================================================*/
    281          

   \                                 In section .text, align 2, keep-with-next
    282          void Get_Ultrasonic_Value(void)
    283          {     
   \                     Get_Ultrasonic_Value: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    284              static int16 cnt = 0;
    285              int16 i = 0, j = 0;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x2100             MOVS     R1,#+0
    286              cnt++;
   \   00000006   0x....             LDR.N    R0,??DataTable6_13
   \   00000008   0x8800             LDRH     R0,[R0, #+0]
   \   0000000A   0x1C40             ADDS     R0,R0,#+1
   \   0000000C   0x....             LDR.N    R1,??DataTable6_13
   \   0000000E   0x8008             STRH     R0,[R1, #+0]
    287              Get_Ultrasonic_Value_Ave();
   \   00000010   0x.... 0x....      BL       Get_Ultrasonic_Value_Ave
    288              if (cnt >= 80)
   \   00000014   0x....             LDR.N    R0,??DataTable6_13
   \   00000016   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000001A   0x2850             CMP      R0,#+80
   \   0000001C   0xDB08             BLT.N    ??Get_Ultrasonic_Value_0
    289              {    
    290                  cnt = 81;
   \   0000001E   0x2051             MOVS     R0,#+81
   \   00000020   0x....             LDR.N    R1,??DataTable6_13
   \   00000022   0x8008             STRH     R0,[R1, #+0]
    291                  Filter_Ultrasonic_Value(gi_ultrasonic_value);//8位精度滤波
   \   00000024   0x....             LDR.N    R0,??DataTable6_4
   \   00000026   0x.... 0x....      BL       Filter_Ultrasonic_Value
    292              }
    293              else
    294              {
    295                  for(i = 0; i < NUM_ULTRASONIC; i++)
    296                  {
    297                      for(j = NUM_ULTRASONIC_HISTORY-1; j >= 1; j--)
    298                      {			
    299                          gi_ultrasonic_history[i][j] = gi_ultrasonic_history[i][j-1];
    300                      }
    301                      gi_ultrasonic_history[i][0] = gi_ultrasonic_value[i];
    302                  }
    303              }
    304              
    305              //Get_Standard_Ultrasonic(gi_ultrasonic_value);
    306              Directional_Calculate();
   \                     ??Get_Ultrasonic_Value_1: (+1)
   \   0000002A   0x.... 0x....      BL       Directional_Calculate
    307          }
   \   0000002E   0xBD10             POP      {R4,PC}          ;; return
   \                     ??Get_Ultrasonic_Value_0: (+1)
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0xE01F             B.N      ??Get_Ultrasonic_Value_2
   \                     ??Get_Ultrasonic_Value_3: (+1)
   \   00000034   0x....             LDR.N    R2,??DataTable6_5
   \   00000036   0x230A             MOVS     R3,#+10
   \   00000038   0xFB10 0xF303      SMULBB   R3,R0,R3
   \   0000003C   0x441A             ADD      R2,R2,R3
   \   0000003E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000040   0x....             LDR.N    R3,??DataTable6_5
   \   00000042   0x240A             MOVS     R4,#+10
   \   00000044   0xFB10 0xF404      SMULBB   R4,R0,R4
   \   00000048   0x4423             ADD      R3,R3,R4
   \   0000004A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000004C   0xEB03 0x0341      ADD      R3,R3,R1, LSL #+1
   \   00000050   0xF833 0x3C02      LDRH     R3,[R3, #-2]
   \   00000054   0xF822 0x3011      STRH     R3,[R2, R1, LSL #+1]
   \   00000058   0x1E49             SUBS     R1,R1,#+1
   \                     ??Get_Ultrasonic_Value_4: (+1)
   \   0000005A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000005C   0x2901             CMP      R1,#+1
   \   0000005E   0xDAE9             BGE.N    ??Get_Ultrasonic_Value_3
   \   00000060   0x....             LDR.N    R1,??DataTable6_4
   \   00000062   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000064   0xF831 0x1010      LDRH     R1,[R1, R0, LSL #+1]
   \   00000068   0x....             LDR.N    R2,??DataTable6_5
   \   0000006A   0x230A             MOVS     R3,#+10
   \   0000006C   0xFB10 0xF303      SMULBB   R3,R0,R3
   \   00000070   0x52D1             STRH     R1,[R2, R3]
   \   00000072   0x1C40             ADDS     R0,R0,#+1
   \                     ??Get_Ultrasonic_Value_2: (+1)
   \   00000074   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000076   0x2806             CMP      R0,#+6
   \   00000078   0xDAD7             BGE.N    ??Get_Ultrasonic_Value_1
   \   0000007A   0x2104             MOVS     R1,#+4
   \   0000007C   0xE7ED             B.N      ??Get_Ultrasonic_Value_4

   \                                 In section .bss, align 2
   \                     `Get_Ultrasonic_Value::cnt`:
   \   00000000                      DS8 2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x4003B000         DC32     0x4003b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x400BB000         DC32     0x400bb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x3FF80000         DC32     0x3ff80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x40080000         DC32     0x40080000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     gi_ultrasonic_value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x........         DC32     gi_ultrasonic_history

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     `Filter_Ultrasonic_Value::si_last_ultrasonic_value`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x........         DC32     `Filter_Ultrasonic_Value::si_jump_ultrasonic_times`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x........         DC32     `Filter_Ultrasonic_Value::sc_jump_count`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x........         DC32     guc_beacon_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \   00000000   0x........         DC32     gi_ultrasonic_offset_y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \   00000000   0x........         DC32     guc_beacon_directional_y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \   00000000   0x........         DC32     guc_beacon_directional_x

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \   00000000   0x........         DC32     `Get_Ultrasonic_Value::cnt`

   \                                 In section .rodata, align 4
   \   00000000   0x0000 0x0000      DC16 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   ADC_Ultrasonic_Init
         8   -> LPLD_ADC_Chn_Enable
       4   Directional_Calculate
      16   Filter_Ultrasonic_Value
        16   -> least_squares_value
       8   Get_Standard_Ultrasonic
         8   -> __aeabi_f2iz
         8   -> __aeabi_i2f
       8   Get_Ultrasonic_ADC
         8   -> LPLD_ADC_Get
       8   Get_Ultrasonic_Value
         8   -> Directional_Calculate
         8   -> Filter_Ultrasonic_Value
         8   -> Get_Ultrasonic_Value_Ave
      56   Get_Ultrasonic_Value_Ave
        56   -> Get_Ultrasonic_ADC
        56   -> __aeabi_d2iz
        56   -> __aeabi_dadd
        56   -> __aeabi_ddiv
        56   -> __aeabi_memclr4
        56   -> __aeabi_ui2d


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
      36  ?_0
      64  ADC_Ultrasonic_Init
     178  Directional_Calculate
     484  Filter_Ultrasonic_Value
      56  Get_Standard_Ultrasonic
     106  Get_Ultrasonic_ADC
     126  Get_Ultrasonic_Value
     142  Get_Ultrasonic_Value_Ave
       2  cnt
       1  sc_jump_count
      24  si_jump_ultrasonic_times
      24  si_last_ultrasonic_value

 
    51 bytes in section .bss
    36 bytes in section .rodata
 1 212 bytes in section .text
 
 1 212 bytes of CODE  memory
    36 bytes of CONST memory
    51 bytes of DATA  memory

Errors: none
Warnings: none
