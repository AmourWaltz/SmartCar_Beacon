###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       27/Jul/2018  21:26:53
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\signal\src\directional.c
#    Command line =  
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\signal\src\directional.c" -D LPLD_K60 -lCN
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\FLASH\List"
#        -lB "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\List" -o
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\CPU\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\HW\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\DEV\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\option\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\driver\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\descriptor\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\class\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\FUNC\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\driver\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\driver\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\control\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\control\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\debug\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\debug\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\device\src\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\device\inc\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\signal\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\signal\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\system\" -Ol
#        -I "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\List\directional.lst
#    Object file  =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\Obj\directional.o
#
###############################################################################

D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\signal\src\directional.c
      1          /*=============================================
      2              @file         directional.c
      3              @brief        红外定向
      4              @programmer   XBY
      5              @note         红外通道：前       1
      6                                      后       5
      7                                      左       3
      8                                      右       7
      9                                      左上     2
     10                                      左下     4
     11                                      右上     8  
     12                                      右下     6  
     13          
     14          备用车：
     15              @note         红外通道：左一      8
     16                                      左二      7
     17                                      左三      6
     18                                      左四      5
     19                                      右一      1
     20                                      右二      2
     21                                      右三      3  
     22                                      右四      4  
     23          =============================================*/
     24          
     25          #include "directional.h"
     26          #include "include.h"
     27          
     28          /*===============================================================
     29          	@brief      八路红外接收初始化
     30          ==================================================================*/
     31          

   \                                 In section .text, align 2, keep-with-next
     32          void Infrared_Init()
     33          {
   \                     Infrared_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     34              GPIO_Init(INFRA_1_PORT_ID, INFRA_1_PORT_PIN, DIR_INPUT, OUTPUT_L);
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x2101             MOVS     R1,#+1
   \   00000008   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff100
   \   0000000A   0x.... 0x....      BL       GPIO_Init
     35              GPIO_Init(INFRA_2_PORT_ID, INFRA_2_PORT_PIN, DIR_INPUT, OUTPUT_L);
   \   0000000E   0x2300             MOVS     R3,#+0
   \   00000010   0x2200             MOVS     R2,#+0
   \   00000012   0x2102             MOVS     R1,#+2
   \   00000014   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff100
   \   00000016   0x.... 0x....      BL       GPIO_Init
     36              GPIO_Init(INFRA_3_PORT_ID, INFRA_3_PORT_PIN, DIR_INPUT, OUTPUT_L); 
   \   0000001A   0x2300             MOVS     R3,#+0
   \   0000001C   0x2200             MOVS     R2,#+0
   \   0000001E   0x2104             MOVS     R1,#+4
   \   00000020   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff100
   \   00000022   0x.... 0x....      BL       GPIO_Init
     37              GPIO_Init(INFRA_4_PORT_ID, INFRA_4_PORT_PIN, DIR_INPUT, OUTPUT_L);
   \   00000026   0x2300             MOVS     R3,#+0
   \   00000028   0x2200             MOVS     R2,#+0
   \   0000002A   0x2108             MOVS     R1,#+8
   \   0000002C   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff100
   \   0000002E   0x.... 0x....      BL       GPIO_Init
     38              GPIO_Init(INFRA_5_PORT_ID, INFRA_5_PORT_PIN, DIR_INPUT, OUTPUT_L);
   \   00000032   0x2300             MOVS     R3,#+0
   \   00000034   0x2200             MOVS     R2,#+0
   \   00000036   0x2110             MOVS     R1,#+16
   \   00000038   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff100
   \   0000003A   0x.... 0x....      BL       GPIO_Init
     39              GPIO_Init(INFRA_6_PORT_ID, INFRA_6_PORT_PIN, DIR_INPUT, OUTPUT_L);
   \   0000003E   0x2300             MOVS     R3,#+0
   \   00000040   0x2200             MOVS     R2,#+0
   \   00000042   0x2120             MOVS     R1,#+32
   \   00000044   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff100
   \   00000046   0x.... 0x....      BL       GPIO_Init
     40              GPIO_Init(INFRA_7_PORT_ID, INFRA_7_PORT_PIN, DIR_INPUT, OUTPUT_L);
   \   0000004A   0x2300             MOVS     R3,#+0
   \   0000004C   0x2200             MOVS     R2,#+0
   \   0000004E   0x2140             MOVS     R1,#+64
   \   00000050   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff100
   \   00000052   0x.... 0x....      BL       GPIO_Init
     41              GPIO_Init(INFRA_8_PORT_ID, INFRA_8_PORT_PIN, DIR_INPUT, OUTPUT_L);
   \   00000056   0x2300             MOVS     R3,#+0
   \   00000058   0x2200             MOVS     R2,#+0
   \   0000005A   0x2180             MOVS     R1,#+128
   \   0000005C   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff100
   \   0000005E   0x.... 0x....      BL       GPIO_Init
     42          }
   \   00000062   0xBD01             POP      {R0,PC}          ;; return
     43          
     44          /*===============================================================
     45          	@brief      八路红外接收数据读取
     46          ==================================================================*/
     47          

   \                                 In section .text, align 2, keep-with-next
     48          void Infrared_Value_Get()
     49          {
   \                     Infrared_Value_Get: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     50              guc_infrared_value[0] = LPLD_GPIO_Input_b(INFRA_1_PORT_ID, INFRA_1_PORT_NUM);
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff100
   \   00000006   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   0000000A   0x....             LDR.N    R1,??DataTable3_1
   \   0000000C   0x7008             STRB     R0,[R1, #+0]
     51              guc_infrared_value[1] = LPLD_GPIO_Input_b(INFRA_2_PORT_ID, INFRA_2_PORT_NUM);
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff100
   \   00000012   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   00000016   0x....             LDR.N    R1,??DataTable3_1
   \   00000018   0x7048             STRB     R0,[R1, #+1]
     52              guc_infrared_value[2] = LPLD_GPIO_Input_b(INFRA_3_PORT_ID, INFRA_3_PORT_NUM);
   \   0000001A   0x2102             MOVS     R1,#+2
   \   0000001C   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff100
   \   0000001E   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   00000022   0x....             LDR.N    R1,??DataTable3_1
   \   00000024   0x7088             STRB     R0,[R1, #+2]
     53              guc_infrared_value[3] = LPLD_GPIO_Input_b(INFRA_4_PORT_ID, INFRA_4_PORT_NUM);
   \   00000026   0x2103             MOVS     R1,#+3
   \   00000028   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff100
   \   0000002A   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   0000002E   0x....             LDR.N    R1,??DataTable3_1
   \   00000030   0x70C8             STRB     R0,[R1, #+3]
     54              guc_infrared_value[4] = LPLD_GPIO_Input_b(INFRA_5_PORT_ID, INFRA_5_PORT_NUM);
   \   00000032   0x2104             MOVS     R1,#+4
   \   00000034   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff100
   \   00000036   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   0000003A   0x....             LDR.N    R1,??DataTable3_1
   \   0000003C   0x7108             STRB     R0,[R1, #+4]
     55              guc_infrared_value[5] = LPLD_GPIO_Input_b(INFRA_6_PORT_ID, INFRA_6_PORT_NUM);
   \   0000003E   0x2105             MOVS     R1,#+5
   \   00000040   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff100
   \   00000042   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   00000046   0x....             LDR.N    R1,??DataTable3_1
   \   00000048   0x7148             STRB     R0,[R1, #+5]
     56              guc_infrared_value[6] = LPLD_GPIO_Input_b(INFRA_7_PORT_ID, INFRA_7_PORT_NUM);
   \   0000004A   0x2106             MOVS     R1,#+6
   \   0000004C   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff100
   \   0000004E   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   00000052   0x....             LDR.N    R1,??DataTable3_1
   \   00000054   0x7188             STRB     R0,[R1, #+6]
     57              guc_infrared_value[7] = LPLD_GPIO_Input_b(INFRA_8_PORT_ID, INFRA_8_PORT_NUM);
   \   00000056   0x2107             MOVS     R1,#+7
   \   00000058   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff100
   \   0000005A   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   0000005E   0x....             LDR.N    R1,??DataTable3_1
   \   00000060   0x71C8             STRB     R0,[R1, #+7]
     58              
     59          }
   \   00000062   0xBD01             POP      {R0,PC}          ;; return
     60          
     61          /*===============================================================
     62          	@brief      红外信号发车
     63          ==================================================================*/
     64          

   \                                 In section .text, align 2, keep-with-next
     65          uint8 Infrared_Start()
     66          {
   \                     Infrared_Start: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     67              uint8 infrared_value;
     68              
     69              infrared_value = 0;
   \   00000002   0x2400             MOVS     R4,#+0
     70              
     71              Infrared_Value_Get();
   \   00000004   0x.... 0x....      BL       Infrared_Value_Get
     72              
     73              infrared_value |= guc_infrared_value[0]<<0;
   \   00000008   0x....             LDR.N    R0,??DataTable3_1
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0x4304             ORRS     R4,R0,R4
     74              infrared_value |= guc_infrared_value[1]<<1;
   \   0000000E   0x....             LDR.N    R0,??DataTable3_1
   \   00000010   0x7840             LDRB     R0,[R0, #+1]
   \   00000012   0xEA54 0x0440      ORRS     R4,R4,R0, LSL #+1
     75              infrared_value |= guc_infrared_value[2]<<2;
   \   00000016   0x....             LDR.N    R0,??DataTable3_1
   \   00000018   0x7880             LDRB     R0,[R0, #+2]
   \   0000001A   0xEA54 0x0480      ORRS     R4,R4,R0, LSL #+2
     76              infrared_value |= guc_infrared_value[3]<<3;
   \   0000001E   0x....             LDR.N    R0,??DataTable3_1
   \   00000020   0x78C0             LDRB     R0,[R0, #+3]
   \   00000022   0xEA54 0x04C0      ORRS     R4,R4,R0, LSL #+3
     77              infrared_value |= guc_infrared_value[4]<<4;
   \   00000026   0x....             LDR.N    R0,??DataTable3_1
   \   00000028   0x7900             LDRB     R0,[R0, #+4]
   \   0000002A   0xEA54 0x1400      ORRS     R4,R4,R0, LSL #+4
     78              infrared_value |= guc_infrared_value[5]<<5;
   \   0000002E   0x....             LDR.N    R0,??DataTable3_1
   \   00000030   0x7940             LDRB     R0,[R0, #+5]
   \   00000032   0xEA54 0x1440      ORRS     R4,R4,R0, LSL #+5
     79              infrared_value |= guc_infrared_value[6]<<6;
   \   00000036   0x....             LDR.N    R0,??DataTable3_1
   \   00000038   0x7980             LDRB     R0,[R0, #+6]
   \   0000003A   0xEA54 0x1480      ORRS     R4,R4,R0, LSL #+6
     80              infrared_value |= guc_infrared_value[7]<<7;
   \   0000003E   0x....             LDR.N    R0,??DataTable3_1
   \   00000040   0x79C0             LDRB     R0,[R0, #+7]
   \   00000042   0xEA54 0x14C0      ORRS     R4,R4,R0, LSL #+7
     81              
     82              return infrared_value;
   \   00000046   0x0020             MOVS     R0,R4
   \   00000048   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004A   0xBD10             POP      {R4,PC}          ;; return
     83          }
     84          
     85          /*===============================================================
     86          	@brief      检测红外信号定向
     87          ==================================================================*/
     88          
     89          //#ifndef BEACON_MAIN
     90          

   \                                 In section .text, align 2, keep-with-next
     91          void Infrared_Directional()
     92          {
   \                     Infrared_Directional: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
     93              int8 i;
     94              
     95              static int8 sc_directional_x;
     96              
     97              int8 front_count;
     98              int8 left_count;
     99              int8 right_count;
    100              int8 back_count;
    101              
    102              front_count = 0;
   \   00000004   0x2400             MOVS     R4,#+0
    103              left_count = 0;
   \   00000006   0xF05F 0x0800      MOVS     R8,#+0
    104              right_count = 0;
   \   0000000A   0x2500             MOVS     R5,#+0
    105              back_count = 0;
   \   0000000C   0x2600             MOVS     R6,#+0
    106              
    107              for(i = 0;i < 5;i++)
   \   0000000E   0x2700             MOVS     R7,#+0
   \   00000010   0xE023             B.N      ??Infrared_Directional_0
    108              {
    109                  Infrared_Value_Get();
   \                     ??Infrared_Directional_1: (+1)
   \   00000012   0x.... 0x....      BL       Infrared_Value_Get
    110          //        if(guc_infrared_value[0])
    111          //        {
    112          //            front_count++;
    113          //        }
    114          //        if(guc_infrared_value[1])
    115          //        {
    116          //            left_count++;
    117          //            front_count++;
    118          //        }
    119                  if(guc_infrared_value[2])
   \   00000016   0x....             LDR.N    R0,??DataTable3_1
   \   00000018   0x7880             LDRB     R0,[R0, #+2]
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD001             BEQ.N    ??Infrared_Directional_2
    120                  {
    121                      left_count++;
   \   0000001E   0xF118 0x0801      ADDS     R8,R8,#+1
    122                  }
    123                  
    124                  if(guc_switch_pin_val[1] == 1)
   \                     ??Infrared_Directional_2: (+1)
   \   00000022   0x....             LDR.N    R0,??DataTable3_2
   \   00000024   0x7840             LDRB     R0,[R0, #+1]
   \   00000026   0x2801             CMP      R0,#+1
   \   00000028   0xD111             BNE.N    ??Infrared_Directional_3
    125                  {
    126                      if(guc_infrared_value[3])
   \   0000002A   0x....             LDR.N    R0,??DataTable3_1
   \   0000002C   0x78C0             LDRB     R0,[R0, #+3]
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD002             BEQ.N    ??Infrared_Directional_4
    127                      {
    128                          back_count++;
   \   00000032   0x1C76             ADDS     R6,R6,#+1
    129                          left_count++;
   \   00000034   0xF118 0x0801      ADDS     R8,R8,#+1
    130                      }
    131                      if(guc_infrared_value[4])
   \                     ??Infrared_Directional_4: (+1)
   \   00000038   0x....             LDR.N    R0,??DataTable3_1
   \   0000003A   0x7900             LDRB     R0,[R0, #+4]
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD000             BEQ.N    ??Infrared_Directional_5
    132                      {
    133                          back_count++;
   \   00000040   0x1C76             ADDS     R6,R6,#+1
    134                      }      
    135                      if(guc_infrared_value[5])
   \                     ??Infrared_Directional_5: (+1)
   \   00000042   0x....             LDR.N    R0,??DataTable3_1
   \   00000044   0x7940             LDRB     R0,[R0, #+5]
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD001             BEQ.N    ??Infrared_Directional_3
    136                      {
    137                          back_count++;
   \   0000004A   0x1C76             ADDS     R6,R6,#+1
    138                          right_count++;
   \   0000004C   0x1C6D             ADDS     R5,R5,#+1
    139                      }
    140                  }
    141                  
    142                  if(guc_infrared_value[6])
   \                     ??Infrared_Directional_3: (+1)
   \   0000004E   0x....             LDR.N    R0,??DataTable3_1
   \   00000050   0x7980             LDRB     R0,[R0, #+6]
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD000             BEQ.N    ??Infrared_Directional_6
    143                  {
    144                      right_count++;
   \   00000056   0x1C6D             ADDS     R5,R5,#+1
    145                  }
    146          //        if(guc_infrared_value[7])
    147          //        {
    148          //            right_count++;
    149          //            front_count++;
    150          //        }
    151              }
   \                     ??Infrared_Directional_6: (+1)
   \   00000058   0x1C7F             ADDS     R7,R7,#+1
   \                     ??Infrared_Directional_0: (+1)
   \   0000005A   0xB27F             SXTB     R7,R7            ;; SignExt  R7,R7,#+24,#+24
   \   0000005C   0x2F05             CMP      R7,#+5
   \   0000005E   0xDBD8             BLT.N    ??Infrared_Directional_1
    152              
    153              if(right_count > left_count)
   \   00000060   0x4640             MOV      R0,R8
   \   00000062   0x0029             MOVS     R1,R5
   \   00000064   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000066   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000068   0x4288             CMP      R0,R1
   \   0000006A   0xDA08             BGE.N    ??Infrared_Directional_7
    154              {
    155                  guc_beacon_directional_x = RIGHT;
   \   0000006C   0x2002             MOVS     R0,#+2
   \   0000006E   0x....             LDR.N    R1,??DataTable3_3
   \   00000070   0x7008             STRB     R0,[R1, #+0]
    156                  sc_directional_x = guc_beacon_directional_x;
   \   00000072   0x....             LDR.N    R0,??DataTable3_3
   \   00000074   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000078   0x....             LDR.N    R1,??DataTable3_4
   \   0000007A   0x7008             STRB     R0,[R1, #+0]
   \   0000007C   0xE017             B.N      ??Infrared_Directional_8
    157              }
    158              else if(right_count < left_count)
   \                     ??Infrared_Directional_7: (+1)
   \   0000007E   0x0028             MOVS     R0,R5
   \   00000080   0x4641             MOV      R1,R8
   \   00000082   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000084   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000086   0x4288             CMP      R0,R1
   \   00000088   0xDA08             BGE.N    ??Infrared_Directional_9
    159              {
    160                  guc_beacon_directional_x = LEFT;
   \   0000008A   0x2001             MOVS     R0,#+1
   \   0000008C   0x....             LDR.N    R1,??DataTable3_3
   \   0000008E   0x7008             STRB     R0,[R1, #+0]
    161                  sc_directional_x = guc_beacon_directional_x;
   \   00000090   0x....             LDR.N    R0,??DataTable3_3
   \   00000092   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000096   0x....             LDR.N    R1,??DataTable3_4
   \   00000098   0x7008             STRB     R0,[R1, #+0]
   \   0000009A   0xE008             B.N      ??Infrared_Directional_8
    162              }
    163              else if(right_count == left_count)
   \                     ??Infrared_Directional_9: (+1)
   \   0000009C   0xB26D             SXTB     R5,R5            ;; SignExt  R5,R5,#+24,#+24
   \   0000009E   0xFA4F 0xF888      SXTB     R8,R8            ;; SignExt  R8,R8,#+24,#+24
   \   000000A2   0x4545             CMP      R5,R8
   \   000000A4   0xD103             BNE.N    ??Infrared_Directional_8
    164              {
    165                  guc_beacon_directional_x = sc_directional_x;
   \   000000A6   0x....             LDR.N    R0,??DataTable3_4
   \   000000A8   0x7800             LDRB     R0,[R0, #+0]
   \   000000AA   0x....             LDR.N    R1,??DataTable3_3
   \   000000AC   0x7008             STRB     R0,[R1, #+0]
    166              }
    167              
    168              if(guc_beacon_directional_x == 0)
   \                     ??Infrared_Directional_8: (+1)
   \   000000AE   0x....             LDR.N    R0,??DataTable3_3
   \   000000B0   0x7800             LDRB     R0,[R0, #+0]
   \   000000B2   0x2800             CMP      R0,#+0
   \   000000B4   0xD103             BNE.N    ??Infrared_Directional_10
    169              {
    170                  guc_beacon_directional_x = guc_center_flag;
   \   000000B6   0x....             LDR.N    R0,??DataTable3_5
   \   000000B8   0x7800             LDRB     R0,[R0, #+0]
   \   000000BA   0x....             LDR.N    R1,??DataTable3_3
   \   000000BC   0x7008             STRB     R0,[R1, #+0]
    171              }
    172                  
    173              if(front_count > back_count)
   \                     ??Infrared_Directional_10: (+1)
   \   000000BE   0x0030             MOVS     R0,R6
   \   000000C0   0x0021             MOVS     R1,R4
   \   000000C2   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   000000C4   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000000C6   0x4288             CMP      R0,R1
   \   000000C8   0xDA03             BGE.N    ??Infrared_Directional_11
    174              {
    175                  guc_beacon_directional_y = FRONT;
   \   000000CA   0x2000             MOVS     R0,#+0
   \   000000CC   0x....             LDR.N    R1,??DataTable3_6
   \   000000CE   0x7008             STRB     R0,[R1, #+0]
   \   000000D0   0xE010             B.N      ??Infrared_Directional_12
    176              }
    177              else if(front_count < back_count)
   \                     ??Infrared_Directional_11: (+1)
   \   000000D2   0x0020             MOVS     R0,R4
   \   000000D4   0x0031             MOVS     R1,R6
   \   000000D6   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   000000D8   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000000DA   0x4288             CMP      R0,R1
   \   000000DC   0xDA03             BGE.N    ??Infrared_Directional_13
    178              {
    179                  guc_beacon_directional_y = BACK;
   \   000000DE   0x2001             MOVS     R0,#+1
   \   000000E0   0x....             LDR.N    R1,??DataTable3_6
   \   000000E2   0x7008             STRB     R0,[R1, #+0]
   \   000000E4   0xE006             B.N      ??Infrared_Directional_12
    180              }
    181              else if(front_count == back_count)
   \                     ??Infrared_Directional_13: (+1)
   \   000000E6   0xB264             SXTB     R4,R4            ;; SignExt  R4,R4,#+24,#+24
   \   000000E8   0xB276             SXTB     R6,R6            ;; SignExt  R6,R6,#+24,#+24
   \   000000EA   0x42B4             CMP      R4,R6
   \   000000EC   0xD102             BNE.N    ??Infrared_Directional_12
    182              {
    183                  guc_beacon_directional_y = FRONT;
   \   000000EE   0x2000             MOVS     R0,#+0
   \   000000F0   0x....             LDR.N    R1,??DataTable3_6
   \   000000F2   0x7008             STRB     R0,[R1, #+0]
    184              }
    185          }
   \                     ??Infrared_Directional_12: (+1)
   \   000000F4   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return

   \                                 In section .bss, align 1
   \                     `Infrared_Directional::sc_directional_x`:
   \   00000000                      DS8 1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     guc_infrared_value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     guc_switch_pin_val

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     guc_beacon_directional_x

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     `Infrared_Directional::sc_directional_x`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     guc_center_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     guc_beacon_directional_y
    186          
    187          //#else
    188          //
    189          //void Infrared_Directional()
    190          //{
    191          //    int8 i;
    192          //    
    193          //    static int8 sc_directional_x;
    194          //    
    195          //    int8 left_count;
    196          //    int8 right_count;
    197          //    
    198          //    left_count = 0;
    199          //    right_count = 0;
    200          //    
    201          //    for(i = 0;i < 5;i++)
    202          //    {
    203          //        Infrared_Value_Get();
    204          ////        if(guc_infrared_value[0])
    205          ////        {
    206          ////            front_count++;
    207          ////        }
    208          //        if(guc_infrared_value[1])
    209          //        {
    210          //            left_count++;
    211          //        }
    212          //        if(guc_infrared_value[2])
    213          //        {
    214          //            left_count++;
    215          //        }
    216          //        if(guc_infrared_value[3])
    217          //        {
    218          //            left_count++;
    219          //        }
    220          //        if(guc_infrared_value[4])
    221          //        {
    222          //            right_count++;
    223          //        }      
    224          //        if(guc_infrared_value[5])
    225          //        {
    226          //            right_count++;
    227          //        }
    228          //        if(guc_infrared_value[6])
    229          //        {
    230          //            right_count++;
    231          //        }
    232          ////        if(guc_infrared_value[7])
    233          ////        {
    234          ////            right_count++;
    235          ////            front_count++;
    236          ////        }
    237          //    }
    238          //    
    239          //    if(right_count > left_count)
    240          //    {
    241          //        guc_beacon_directional_x = RIGHT;
    242          //        sc_directional_x = guc_beacon_directional_x;
    243          //    }
    244          //    else if(right_count < left_count)
    245          //    {
    246          //        guc_beacon_directional_x = LEFT;
    247          //        sc_directional_x = guc_beacon_directional_x;
    248          //    }
    249          //    else if(right_count == left_count)
    250          //    {
    251          //        guc_beacon_directional_x = sc_directional_x;
    252          //    }
    253          //        
    254          ////    if(front_count > back_count)
    255          ////    {
    256          ////        guc_beacon_directional_y = FRONT;
    257          ////    }
    258          ////    else if(front_count < back_count)
    259          ////    {
    260          ////        guc_beacon_directional_y = BACK;
    261          ////    }
    262          ////    else if(front_count == back_count)
    263          ////    {
    264          ////        guc_beacon_directional_y = FRONT;
    265          ////    }
    266          //}
    267          //
    268          //#endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   Infrared_Directional
        24   -> Infrared_Value_Get
       8   Infrared_Init
         8   -> GPIO_Init
       8   Infrared_Start
         8   -> Infrared_Value_Get
       8   Infrared_Value_Get
         8   -> LPLD_GPIO_Input_b


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
     248  Infrared_Directional
     100  Infrared_Init
      76  Infrared_Start
     100  Infrared_Value_Get
       1  sc_directional_x

 
   1 byte  in section .bss
 552 bytes in section .text
 
 552 bytes of CODE memory
   1 byte  of DATA memory

Errors: none
Warnings: none
