###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       27/Jul/2018  20:43:46
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\app\debug\src\display_image.c
#    Command line =  
#        "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\app\debug\src\display_image.c" -D LPLD_K60
#        -lCN "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\List" -lB
#        "D:\Freescale\–≈±Í\Beacon_C1 -NXP\project\Beacon_XBY\iar\FLASH\List"
#        -o "D:\Freescale\–≈±Í\Beacon_C1 -NXP\project\Beacon_XBY\iar\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\" -I "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\CPU\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\common\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\HW\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\DEV\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\option\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\common\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\driver\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\descriptor\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\class\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\FUNC\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1 -NXP\project\Beacon_XBY\app\driver\inc\"
#        -I "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\app\driver\src\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1 -NXP\project\Beacon_XBY\app\control\inc\"
#        -I "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\app\control\src\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1 -NXP\project\Beacon_XBY\app\debug\inc\"
#        -I "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\app\debug\src\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1 -NXP\project\Beacon_XBY\app\device\src\"
#        -I "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\app\device\inc\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1 -NXP\project\Beacon_XBY\app\signal\inc\"
#        -I "D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\app\signal\src\" -I
#        "D:\Freescale\–≈±Í\Beacon_C1 -NXP\project\Beacon_XBY\app\system\" -Ol
#        -I "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\List\display_image.lst
#    Object file  =  
#        D:\Freescale\–≈±Í\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\Obj\display_image.o
#
###############################################################################

D:\Freescale\–≈±Í\Beacon_C1 -NXP\project\Beacon_XBY\app\debug\src\display_image.c
      1          #include "display_image.h"
      2          

   \                                 In section .bss, align 1
      3          static uint8 gs_u8ExitDisplayFlag = FLAG_OFF;
   \                     gs_u8ExitDisplayFlag:
   \   00000000                      DS8 1
      4          

   \                                 In section .bss, align 1
      5          static uint8 gs_u8ImageLineDelayControlFlag = FLAG_OFF;
   \                     gs_u8ImageLineDelayControlFlag:
   \   00000000                      DS8 1
      6          
      7          
      8          /*******************************************************
      9          	ÂáΩÊï∞Âêç: DisplayPage_1                                                   
     10          	Âäü  ËÉΩ: ÊòæÁ§∫È°µ                                                
     11          	ÂèÇ  Êï∞: Êó†                                                                      
     12          	Ëøî  Âõû: ‰∏ã‰∏ÄÈ°µÈ°µÁ†Å                                                          
     13          *********************************************************/

   \                                 In section .text, align 2, keep-with-next
     14          uint8 DisplayPage_1()
     15          {
   \                     DisplayPage_1: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     16              uint8 page_num = 1;
   \   00000002   0x2401             MOVS     R4,#+1
     17              int8  exit_flag = 0;
   \   00000004   0x2500             MOVS     R5,#+0
     18              uint8 button_value = 0;
   \   00000006   0x2000             MOVS     R0,#+0
     19          
     20          	
     21              oled_fill(0x00);
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       oled_fill
     22              oled_display_6x8str(0*OLED_CHAR_WIDTH, 0, "p1:");
   \   0000000E   0x....             ADR.N    R2,??DataTable2  ;; "p1:"
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       oled_display_6x8str
     23              Delay_ms(DISPLAY_IMAGE_DELAY);
   \   00000018   0x2064             MOVS     R0,#+100
   \   0000001A   0x.... 0x....      BL       Delay_ms
   \   0000001E   0xE001             B.N      ??DisplayPage_1_0
     24          
     25              while(exit_flag == 0)
     26              {
     27                          oled_print_std_image(0);
     28                  //ËØªÂèñÊåâÈîÆÂÄº
     29                          button_value=button_scan();
     30                  
     31          #ifdef USE_INFR 
     32                  if (button_value == FIVE_DIR_NULL)//Êó†‰∫îÂêëÊåâÈîÆÊåâ‰∏ãÂàôÂà§Êñ≠Á∫¢Â§ñ
     33                  {
     34                      button_value = get_infrared_command();
     35                      reset_infrared();
     36                      
     37                      switch(button_value)
     38                      {
     39                          case COMMAND_UP:
     40                              button_value = FIVE_DIR_UP;
     41                              break;
     42                          case COMMAND_DOWN:
     43                              button_value = FIVE_DIR_DOWN;
     44                              break;                    
     45                          case COMMAND_LEFT:
     46                              button_value = FIVE_DIR_LEFT;
     47                              break;                    
     48                          case COMMAND_RIGHT:
     49                              button_value = FIVE_DIR_RIGHT;
     50                              break;
     51                          case COMMAND_OK:
     52                              button_value = FIVE_DIR_OK;
     53                              break;     
     54                          default:
     55                              button_value = FIVE_DIR_NULL;//ËØÜÂà´‰∏çÂá∫ÂàôËÆ§‰∏∫Ê≤°Êåâ‰∏ã
     56                              break;                                    
     57                      }
     58                  }
     59          #endif   
     60          
     61                  switch(button_value)
     62                  {
     63                  case BT_UP_PRESS:
     64                      page_num = page_num + SPECIAL_PAGE_OFFSET;
   \                     ??DisplayPage_1_1: (+1)
   \   00000020   0x341E             ADDS     R4,R4,#+30
     65                      exit_flag = 1;
   \   00000022   0x2501             MOVS     R5,#+1
     66                      break;
   \                     ??DisplayPage_1_0: (+1)
   \   00000024   0xB26D             SXTB     R5,R5            ;; SignExt  R5,R5,#+24,#+24
   \   00000026   0x2D00             CMP      R5,#+0
   \   00000028   0xD152             BNE.N    ??DisplayPage_1_2
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       oled_print_std_image
   \   00000030   0x.... 0x....      BL       button_scan
   \   00000034   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000036   0x2801             CMP      R0,#+1
   \   00000038   0xD0F2             BEQ.N    ??DisplayPage_1_1
   \   0000003A   0xD348             BCC.N    ??DisplayPage_1_3
   \   0000003C   0x2803             CMP      R0,#+3
   \   0000003E   0xD007             BEQ.N    ??DisplayPage_1_4
   \   00000040   0xD303             BCC.N    ??DisplayPage_1_5
   \   00000042   0x2805             CMP      R0,#+5
   \   00000044   0xD042             BEQ.N    ??DisplayPage_1_6
   \   00000046   0xD322             BCC.N    ??DisplayPage_1_7
   \   00000048   0xE041             B.N      ??DisplayPage_1_3
     67                  case BT_DN_PRESS:
     68                      page_num = page_num + SPECIAL_PAGE_OFFSET;
   \                     ??DisplayPage_1_5: (+1)
   \   0000004A   0x341E             ADDS     R4,R4,#+30
     69                      exit_flag = 1;                                  
   \   0000004C   0x2501             MOVS     R5,#+1
     70                      break;
   \   0000004E   0xE7E9             B.N      ??DisplayPage_1_0
     71                      //Â∑¶ÈîÆÂêëÂâçÁøªÈ°µ
     72                  case BT_LE_PRESS:
     73                      if (gs_u8ImageLineDelayControlFlag == 1)
   \                     ??DisplayPage_1_4: (+1)
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x2801             CMP      R0,#+1
   \   00000058   0xD10C             BNE.N    ??DisplayPage_1_8
     74                      {
     75                          g_u8DigitalCameraThreshold--;
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   0000005E   0x7800             LDRB     R0,[R0, #+0]
   \   00000060   0x1E40             SUBS     R0,R0,#+1
   \   00000062   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   00000066   0x7008             STRB     R0,[R1, #+0]
     76                          SCCB_WriteByte(OV7725_CNST, g_u8DigitalCameraThreshold);
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   0000006C   0x7801             LDRB     R1,[R0, #+0]
   \   0000006E   0x209C             MOVS     R0,#+156
   \   00000070   0x.... 0x....      BL       SCCB_WriteByte
     77                      }
     78                      
     79                      if (gs_u8ImageLineDelayControlFlag == 0)
   \                     ??DisplayPage_1_8: (+1)
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   00000078   0x7800             LDRB     R0,[R0, #+0]
   \   0000007A   0x2800             CMP      R0,#+0
   \   0000007C   0xD106             BNE.N    ??DisplayPage_1_9
     80                      {
     81                          if(page_num > DISPLAY_PAGE_MIN)
   \   0000007E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000080   0x2C02             CMP      R4,#+2
   \   00000082   0xDB01             BLT.N    ??DisplayPage_1_10
     82                          {
     83                              page_num--;
   \   00000084   0x1E64             SUBS     R4,R4,#+1
   \   00000086   0xE000             B.N      ??DisplayPage_1_11
     84                          }
     85                          //ÂΩìÂâçÈ°µÊòØÊúÄÂâç‰∏ÄÈ°µÔºåÁøªËá≥ÊúÄÂêé‰∏ÄÈ°µ
     86                          else
     87                          {
     88                              page_num = DISPLAY_PAGE_MAX;
   \                     ??DisplayPage_1_10: (+1)
   \   00000088   0x2405             MOVS     R4,#+5
     89                          }
     90                          //ÈÄÄÂá∫Ê†áÂøó‰ΩçÁΩÆ‰Ωç
     91                          exit_flag = 1;                
   \                     ??DisplayPage_1_11: (+1)
   \   0000008A   0x2501             MOVS     R5,#+1
     92                      }
     93          
     94                      break;
   \                     ??DisplayPage_1_9: (+1)
   \   0000008C   0xE7CA             B.N      ??DisplayPage_1_0
     95                      //Âè≥ÈîÆÂêëÂêéÁøªÈ°µ
     96                  case BT_RI_PRESS:
     97                      
     98                      if (gs_u8ImageLineDelayControlFlag == 1)
   \                     ??DisplayPage_1_7: (+1)
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   00000092   0x7800             LDRB     R0,[R0, #+0]
   \   00000094   0x2801             CMP      R0,#+1
   \   00000096   0xD10C             BNE.N    ??DisplayPage_1_12
     99                      {
    100                          g_u8DigitalCameraThreshold++;
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   0000009C   0x7800             LDRB     R0,[R0, #+0]
   \   0000009E   0x1C40             ADDS     R0,R0,#+1
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   000000A4   0x7008             STRB     R0,[R1, #+0]
    101                          SCCB_WriteByte(OV7725_CNST, g_u8DigitalCameraThreshold);
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   000000AA   0x7801             LDRB     R1,[R0, #+0]
   \   000000AC   0x209C             MOVS     R0,#+156
   \   000000AE   0x.... 0x....      BL       SCCB_WriteByte
    102                      }
    103          
    104                      if ((gs_u8ImageLineDelayControlFlag == 0) )//&& (g_carInfo.u8RoadParameterFlag == 0))
   \                     ??DisplayPage_1_12: (+1)
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   000000B6   0x7800             LDRB     R0,[R0, #+0]
   \   000000B8   0x2800             CMP      R0,#+0
   \   000000BA   0xD106             BNE.N    ??DisplayPage_1_13
    105                      {
    106                          if(page_num < DISPLAY_PAGE_MAX)
   \   000000BC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000BE   0x2C05             CMP      R4,#+5
   \   000000C0   0xDA01             BGE.N    ??DisplayPage_1_14
    107                          {
    108                              page_num++;
   \   000000C2   0x1C64             ADDS     R4,R4,#+1
   \   000000C4   0xE000             B.N      ??DisplayPage_1_15
    109                          }
    110                          //ÂΩìÂâçÈ°µÊòØÊúÄÂêé‰∏ÄÈ°µÔºåÂè≥ÈîÆÊåâ‰∏ãÁøªËá≥ÊúÄÂâç‰∏ÄÈ°µ
    111                          else
    112                          {
    113                              page_num = DISPLAY_PAGE_MIN;
   \                     ??DisplayPage_1_14: (+1)
   \   000000C6   0x2401             MOVS     R4,#+1
    114                          }
    115                          //ÈÄÄÂá∫Ê†áÂøó‰ΩçÁΩÆ‰Ωç
    116                          exit_flag = 1;           
   \                     ??DisplayPage_1_15: (+1)
   \   000000C8   0x2501             MOVS     R5,#+1
    117                      }            
    118          
    119                      break;
   \                     ??DisplayPage_1_13: (+1)
   \   000000CA   0xE7AB             B.N      ??DisplayPage_1_0
    120                  case BT_OK_PRESS:
    121                      break;
   \                     ??DisplayPage_1_6: (+1)
   \   000000CC   0xE7AA             B.N      ??DisplayPage_1_0
    122                  default:
    123                      break;
   \                     ??DisplayPage_1_3: (+1)
   \   000000CE   0xE7A9             B.N      ??DisplayPage_1_0
    124                  }
    125              }
    126          
    127              return page_num;
   \                     ??DisplayPage_1_2: (+1)
   \   000000D0   0x0020             MOVS     R0,R4
   \   000000D2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D4   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    128          }
    129          
    130          /*******************************************************
    131          	ÂáΩÊï∞Âêç: DisplayPage_2                                                   
    132          	Âäü  ËÉΩ: ÊòæÁ§∫È°µ                                                
    133          	ÂèÇ  Êï∞: Êó†                                                                      
    134          	Ëøî  Âõû: ‰∏ã‰∏ÄÈ°µÈ°µÁ†Å                                                          
    135          *********************************************************/

   \                                 In section .text, align 2, keep-with-next
    136          uint8 DisplayPage_2()
    137          {
   \                     DisplayPage_2: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    138          	uint8 page_num = 2;
   \   00000002   0x2402             MOVS     R4,#+2
    139              int8  exit_flag = 0;
   \   00000004   0x2500             MOVS     R5,#+0
    140              uint8 button_value = 0;
   \   00000006   0x2000             MOVS     R0,#+0
    141          	
    142              
    143          	oled_fill(0x00);
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       oled_fill
    144              oled_display_6x8str(0*OLED_CHAR_WIDTH, 0, "p2:");
   \   0000000E   0x....             ADR.N    R2,??DataTable3  ;; "p2:"
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       oled_display_6x8str
    145          	Delay_ms(DISPLAY_IMAGE_DELAY);
   \   00000018   0x2064             MOVS     R0,#+100
   \   0000001A   0x.... 0x....      BL       Delay_ms
   \   0000001E   0xE001             B.N      ??DisplayPage_2_0
    146          
    147              while(exit_flag == 0)
    148              {
    149          
    150                  //Show_Image_Process();
    151                  //ËØªÂèñÊåâÈîÆÂÄº
    152                          button_value=button_scan();
    153                  
    154          #ifdef USE_INFR 
    155                  if (button_value == FIVE_DIR_NULL)//Êó†‰∫îÂêëÊåâÈîÆÊåâ‰∏ãÂàôÂà§Êñ≠Á∫¢Â§ñ
    156                  {
    157                      button_value = get_infrared_command();
    158                      reset_infrared();
    159                      
    160                      switch(button_value)
    161                      {
    162                          case COMMAND_UP:
    163                              button_value = FIVE_DIR_UP;
    164                              break;
    165                          case COMMAND_DOWN:
    166                              button_value = FIVE_DIR_DOWN;
    167                              break;                    
    168                          case COMMAND_LEFT:
    169                              button_value = FIVE_DIR_LEFT;
    170                              break;                    
    171                          case COMMAND_RIGHT:
    172                              button_value = FIVE_DIR_RIGHT;
    173                              break;
    174                          case COMMAND_OK:
    175                              button_value = FIVE_DIR_OK;
    176                              break;     
    177                          default:
    178                              button_value = FIVE_DIR_NULL;//ËØÜÂà´‰∏çÂá∫ÂàôËÆ§‰∏∫Ê≤°Êåâ‰∏ã
    179                              break;                                    
    180                      }
    181                  }
    182          #endif   
    183          
    184                  switch(button_value)
    185                  {
    186                  case BT_UP_PRESS:
    187                      page_num = page_num + SPECIAL_PAGE_OFFSET;
   \                     ??DisplayPage_2_1: (+1)
   \   00000020   0x341E             ADDS     R4,R4,#+30
    188                      exit_flag = 1;
   \   00000022   0x2501             MOVS     R5,#+1
    189                      break;
   \                     ??DisplayPage_2_0: (+1)
   \   00000024   0xB26D             SXTB     R5,R5            ;; SignExt  R5,R5,#+24,#+24
   \   00000026   0x2D00             CMP      R5,#+0
   \   00000028   0xD14D             BNE.N    ??DisplayPage_2_2
   \   0000002A   0x.... 0x....      BL       button_scan
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x2801             CMP      R0,#+1
   \   00000032   0xD0F5             BEQ.N    ??DisplayPage_2_1
   \   00000034   0xD346             BCC.N    ??DisplayPage_2_3
   \   00000036   0x2803             CMP      R0,#+3
   \   00000038   0xD007             BEQ.N    ??DisplayPage_2_4
   \   0000003A   0xD303             BCC.N    ??DisplayPage_2_5
   \   0000003C   0x2805             CMP      R0,#+5
   \   0000003E   0xD040             BEQ.N    ??DisplayPage_2_6
   \   00000040   0xD322             BCC.N    ??DisplayPage_2_7
   \   00000042   0xE03F             B.N      ??DisplayPage_2_3
    190                  case BT_DN_PRESS:
    191                      page_num = page_num + SPECIAL_PAGE_OFFSET;
   \                     ??DisplayPage_2_5: (+1)
   \   00000044   0x341E             ADDS     R4,R4,#+30
    192                      exit_flag = 1;                                  
   \   00000046   0x2501             MOVS     R5,#+1
    193                      break;
   \   00000048   0xE7EC             B.N      ??DisplayPage_2_0
    194                      //Â∑¶ÈîÆÂêëÂâçÁøªÈ°µ
    195                  case BT_LE_PRESS:
    196                      if (gs_u8ImageLineDelayControlFlag == 1)
   \                     ??DisplayPage_2_4: (+1)
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   0000004E   0x7800             LDRB     R0,[R0, #+0]
   \   00000050   0x2801             CMP      R0,#+1
   \   00000052   0xD10C             BNE.N    ??DisplayPage_2_8
    197                      {
    198                          g_u8DigitalCameraThreshold--;
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000058   0x7800             LDRB     R0,[R0, #+0]
   \   0000005A   0x1E40             SUBS     R0,R0,#+1
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   00000060   0x7008             STRB     R0,[R1, #+0]
    199                          SCCB_WriteByte(OV7725_CNST, g_u8DigitalCameraThreshold);
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000066   0x7801             LDRB     R1,[R0, #+0]
   \   00000068   0x209C             MOVS     R0,#+156
   \   0000006A   0x.... 0x....      BL       SCCB_WriteByte
    200                      }
    201                      
    202                      if ((gs_u8ImageLineDelayControlFlag == 0) )
   \                     ??DisplayPage_2_8: (+1)
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   00000072   0x7800             LDRB     R0,[R0, #+0]
   \   00000074   0x2800             CMP      R0,#+0
   \   00000076   0xD106             BNE.N    ??DisplayPage_2_9
    203                      {
    204                          if(page_num > DISPLAY_PAGE_MIN)
   \   00000078   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007A   0x2C02             CMP      R4,#+2
   \   0000007C   0xDB01             BLT.N    ??DisplayPage_2_10
    205                          {
    206                              page_num--;
   \   0000007E   0x1E64             SUBS     R4,R4,#+1
   \   00000080   0xE000             B.N      ??DisplayPage_2_11
    207                          }
    208                          //ÂΩìÂâçÈ°µÊòØÊúÄÂâç‰∏ÄÈ°µÔºåÁøªËá≥ÊúÄÂêé‰∏ÄÈ°µ
    209                          else
    210                          {
    211                              page_num = DISPLAY_PAGE_MAX;
   \                     ??DisplayPage_2_10: (+1)
   \   00000082   0x2405             MOVS     R4,#+5
    212                          }
    213                          //ÈÄÄÂá∫Ê†áÂøó‰ΩçÁΩÆ‰Ωç
    214                          exit_flag = 1;                
   \                     ??DisplayPage_2_11: (+1)
   \   00000084   0x2501             MOVS     R5,#+1
    215                      }
    216          
    217                      break;
   \                     ??DisplayPage_2_9: (+1)
   \   00000086   0xE7CD             B.N      ??DisplayPage_2_0
    218                      //Âè≥ÈîÆÂêëÂêéÁøªÈ°µ
    219                  case BT_RI_PRESS:
    220                      
    221                      if (gs_u8ImageLineDelayControlFlag == 1)
   \                     ??DisplayPage_2_7: (+1)
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   0000008C   0x7800             LDRB     R0,[R0, #+0]
   \   0000008E   0x2801             CMP      R0,#+1
   \   00000090   0xD10B             BNE.N    ??DisplayPage_2_12
    222                      {
    223                          g_u8DigitalCameraThreshold++;
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   00000096   0x7800             LDRB     R0,[R0, #+0]
   \   00000098   0x1C40             ADDS     R0,R0,#+1
   \   0000009A   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   0000009E   0x7008             STRB     R0,[R1, #+0]
    224                          SCCB_WriteByte(OV7725_CNST, g_u8DigitalCameraThreshold);
   \   000000A0   0x....             LDR.N    R0,??DataTable5_2
   \   000000A2   0x7801             LDRB     R1,[R0, #+0]
   \   000000A4   0x209C             MOVS     R0,#+156
   \   000000A6   0x.... 0x....      BL       SCCB_WriteByte
    225                      }
    226                      
    227                      
    228                      if ((gs_u8ImageLineDelayControlFlag == 0) )//&& (g_carInfo.u8RoadParameterFlag == 0))
   \                     ??DisplayPage_2_12: (+1)
   \   000000AA   0x....             LDR.N    R0,??DataTable5_1
   \   000000AC   0x7800             LDRB     R0,[R0, #+0]
   \   000000AE   0x2800             CMP      R0,#+0
   \   000000B0   0xD106             BNE.N    ??DisplayPage_2_13
    229                      {
    230                          if(page_num < DISPLAY_PAGE_MAX)
   \   000000B2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000B4   0x2C05             CMP      R4,#+5
   \   000000B6   0xDA01             BGE.N    ??DisplayPage_2_14
    231                          {
    232                              page_num++;
   \   000000B8   0x1C64             ADDS     R4,R4,#+1
   \   000000BA   0xE000             B.N      ??DisplayPage_2_15
    233                          }
    234                          //ÂΩìÂâçÈ°µÊòØÊúÄÂêé‰∏ÄÈ°µÔºåÂè≥ÈîÆÊåâ‰∏ãÁøªËá≥ÊúÄÂâç‰∏ÄÈ°µ
    235                          else
    236                          {
    237                              page_num = DISPLAY_PAGE_MIN;
   \                     ??DisplayPage_2_14: (+1)
   \   000000BC   0x2401             MOVS     R4,#+1
    238                          }
    239                          //ÈÄÄÂá∫Ê†áÂøó‰ΩçÁΩÆ‰Ωç
    240                          exit_flag = 1;           
   \                     ??DisplayPage_2_15: (+1)
   \   000000BE   0x2501             MOVS     R5,#+1
    241                      }            
    242          
    243                      break;
   \                     ??DisplayPage_2_13: (+1)
   \   000000C0   0xE7B0             B.N      ??DisplayPage_2_0
    244                  case BT_OK_PRESS:
    245                      break;
   \                     ??DisplayPage_2_6: (+1)
   \   000000C2   0xE7AF             B.N      ??DisplayPage_2_0
    246                  default:
    247                      break;
   \                     ??DisplayPage_2_3: (+1)
   \   000000C4   0xE7AE             B.N      ??DisplayPage_2_0
    248                  }
    249              }
    250          
    251              return page_num;
   \                     ??DisplayPage_2_2: (+1)
   \   000000C6   0x0020             MOVS     R0,R4
   \   000000C8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CA   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    252          }
    253          
    254          /*******************************************************
    255          	ÂáΩÊï∞Âêç: DisplayPage_3                                                  
    256          	Âäü  ËÉΩ: ÊòæÁ§∫È°µ                                                
    257          	ÂèÇ  Êï∞: Êó†                                                                      
    258          	Ëøî  Âõû: ‰∏ã‰∏ÄÈ°µÈ°µÁ†Å                                                          
    259          *********************************************************/

   \                                 In section .text, align 2, keep-with-next
    260          uint8  DisplayPage_3()
    261          {
   \                     DisplayPage_3: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    262          	uint8 page_num = 3;
   \   00000002   0x2403             MOVS     R4,#+3
    263              int8  exit_flag = 0;
   \   00000004   0x2500             MOVS     R5,#+0
    264              uint8 button_value = 0;
   \   00000006   0x2000             MOVS     R0,#+0
    265          	
    266              
    267          	oled_fill(0x00);
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       oled_fill
    268              oled_display_6x8str(0*OLED_CHAR_WIDTH, 0, "p3:");
   \   0000000E   0x....             ADR.N    R2,??DataTable4  ;; "p3:"
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       oled_display_6x8str
    269          	Delay_ms(DISPLAY_IMAGE_DELAY);
   \   00000018   0x2064             MOVS     R0,#+100
   \   0000001A   0x.... 0x....      BL       Delay_ms
   \   0000001E   0xE001             B.N      ??DisplayPage_3_0
    270          
    271              while(exit_flag == 0)
    272              {
    273                  //ËØªÂèñÊåâÈîÆÂÄº
    274                          button_value=button_scan();
    275                  
    276          #ifdef USE_INFR 
    277                  if (button_value == FIVE_DIR_NULL)//Êó†‰∫îÂêëÊåâÈîÆÊåâ‰∏ãÂàôÂà§Êñ≠Á∫¢Â§ñ
    278                  {
    279                      button_value = get_infrared_command();
    280                      reset_infrared();
    281                      
    282                      switch(button_value)
    283                      {
    284                          case COMMAND_UP:
    285                              button_value = FIVE_DIR_UP;
    286                              break;
    287                          case COMMAND_DOWN:
    288                              button_value = FIVE_DIR_DOWN;
    289                              break;                    
    290                          case COMMAND_LEFT:
    291                              button_value = FIVE_DIR_LEFT;
    292                              break;                    
    293                          case COMMAND_RIGHT:
    294                              button_value = FIVE_DIR_RIGHT;
    295                              break;
    296                          case COMMAND_OK:
    297                              button_value = FIVE_DIR_OK;
    298                              break;     
    299                          default:
    300                              button_value = FIVE_DIR_NULL;//ËØÜÂà´‰∏çÂá∫ÂàôËÆ§‰∏∫Ê≤°Êåâ‰∏ã
    301                              break;                                    
    302                      }
    303                  }
    304          #endif   
    305          
    306                  switch(button_value)
    307                  {
    308                  case BT_UP_PRESS:
    309                      page_num = page_num + SPECIAL_PAGE_OFFSET;
   \                     ??DisplayPage_3_1: (+1)
   \   00000020   0x341E             ADDS     R4,R4,#+30
    310                      exit_flag = 1;
   \   00000022   0x2501             MOVS     R5,#+1
    311                      break;
   \                     ??DisplayPage_3_0: (+1)
   \   00000024   0xB26D             SXTB     R5,R5            ;; SignExt  R5,R5,#+24,#+24
   \   00000026   0x2D00             CMP      R5,#+0
   \   00000028   0xD145             BNE.N    ??DisplayPage_3_2
   \   0000002A   0x.... 0x....      BL       button_scan
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x2801             CMP      R0,#+1
   \   00000032   0xD0F5             BEQ.N    ??DisplayPage_3_1
   \   00000034   0xD33E             BCC.N    ??DisplayPage_3_3
   \   00000036   0x2803             CMP      R0,#+3
   \   00000038   0xD007             BEQ.N    ??DisplayPage_3_4
   \   0000003A   0xD303             BCC.N    ??DisplayPage_3_5
   \   0000003C   0x2805             CMP      R0,#+5
   \   0000003E   0xD038             BEQ.N    ??DisplayPage_3_6
   \   00000040   0xD31D             BCC.N    ??DisplayPage_3_7
   \   00000042   0xE037             B.N      ??DisplayPage_3_3
    312                  case BT_DN_PRESS:
    313                      page_num = page_num + SPECIAL_PAGE_OFFSET;
   \                     ??DisplayPage_3_5: (+1)
   \   00000044   0x341E             ADDS     R4,R4,#+30
    314                      exit_flag = 1;                                  
   \   00000046   0x2501             MOVS     R5,#+1
    315                      break;
   \   00000048   0xE7EC             B.N      ??DisplayPage_3_0
    316                      //Â∑¶ÈîÆÂêëÂâçÁøªÈ°µ
    317                  case BT_LE_PRESS:
    318                      if (gs_u8ImageLineDelayControlFlag == 1)
   \                     ??DisplayPage_3_4: (+1)
   \   0000004A   0x....             LDR.N    R0,??DataTable5_1
   \   0000004C   0x7800             LDRB     R0,[R0, #+0]
   \   0000004E   0x2801             CMP      R0,#+1
   \   00000050   0xD109             BNE.N    ??DisplayPage_3_8
    319                      {
    320                          g_u8DigitalCameraThreshold--;
   \   00000052   0x....             LDR.N    R0,??DataTable5_2
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x1E40             SUBS     R0,R0,#+1
   \   00000058   0x....             LDR.N    R1,??DataTable5_2
   \   0000005A   0x7008             STRB     R0,[R1, #+0]
    321                          SCCB_WriteByte(OV7725_CNST, g_u8DigitalCameraThreshold);
   \   0000005C   0x....             LDR.N    R0,??DataTable5_2
   \   0000005E   0x7801             LDRB     R1,[R0, #+0]
   \   00000060   0x209C             MOVS     R0,#+156
   \   00000062   0x.... 0x....      BL       SCCB_WriteByte
    322                      }
    323                      
    324                      if ((gs_u8ImageLineDelayControlFlag == 0) )//&& (g_carInfo.u8RoadParameterFlag == 0))
   \                     ??DisplayPage_3_8: (+1)
   \   00000066   0x....             LDR.N    R0,??DataTable5_1
   \   00000068   0x7800             LDRB     R0,[R0, #+0]
   \   0000006A   0x2800             CMP      R0,#+0
   \   0000006C   0xD106             BNE.N    ??DisplayPage_3_9
    325                      {
    326                          if(page_num > DISPLAY_PAGE_MIN)
   \   0000006E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000070   0x2C02             CMP      R4,#+2
   \   00000072   0xDB01             BLT.N    ??DisplayPage_3_10
    327                          {
    328                              page_num--;
   \   00000074   0x1E64             SUBS     R4,R4,#+1
   \   00000076   0xE000             B.N      ??DisplayPage_3_11
    329                          }
    330                          //ÂΩìÂâçÈ°µÊòØÊúÄÂâç‰∏ÄÈ°µÔºåÁøªËá≥ÊúÄÂêé‰∏ÄÈ°µ
    331                          else
    332                          {
    333                              page_num = DISPLAY_PAGE_MAX;
   \                     ??DisplayPage_3_10: (+1)
   \   00000078   0x2405             MOVS     R4,#+5
    334                          }
    335                          //ÈÄÄÂá∫Ê†áÂøó‰ΩçÁΩÆ‰Ωç
    336                          exit_flag = 1;                
   \                     ??DisplayPage_3_11: (+1)
   \   0000007A   0x2501             MOVS     R5,#+1
    337                      }
    338          
    339                      break;
   \                     ??DisplayPage_3_9: (+1)
   \   0000007C   0xE7D2             B.N      ??DisplayPage_3_0
    340                      //Âè≥ÈîÆÂêëÂêéÁøªÈ°µ
    341                  case BT_RI_PRESS:
    342                      
    343                      if (gs_u8ImageLineDelayControlFlag == 1)
   \                     ??DisplayPage_3_7: (+1)
   \   0000007E   0x....             LDR.N    R0,??DataTable5_1
   \   00000080   0x7800             LDRB     R0,[R0, #+0]
   \   00000082   0x2801             CMP      R0,#+1
   \   00000084   0xD109             BNE.N    ??DisplayPage_3_12
    344                      {
    345                          g_u8DigitalCameraThreshold++;
   \   00000086   0x....             LDR.N    R0,??DataTable5_2
   \   00000088   0x7800             LDRB     R0,[R0, #+0]
   \   0000008A   0x1C40             ADDS     R0,R0,#+1
   \   0000008C   0x....             LDR.N    R1,??DataTable5_2
   \   0000008E   0x7008             STRB     R0,[R1, #+0]
    346                          SCCB_WriteByte(OV7725_CNST, g_u8DigitalCameraThreshold);
   \   00000090   0x....             LDR.N    R0,??DataTable5_2
   \   00000092   0x7801             LDRB     R1,[R0, #+0]
   \   00000094   0x209C             MOVS     R0,#+156
   \   00000096   0x.... 0x....      BL       SCCB_WriteByte
    347                      }
    348                      
    349                      if (gs_u8ImageLineDelayControlFlag == 0)
   \                     ??DisplayPage_3_12: (+1)
   \   0000009A   0x....             LDR.N    R0,??DataTable5_1
   \   0000009C   0x7800             LDRB     R0,[R0, #+0]
   \   0000009E   0x2800             CMP      R0,#+0
   \   000000A0   0xD106             BNE.N    ??DisplayPage_3_13
    350                      {
    351                          if(page_num < DISPLAY_PAGE_MAX)
   \   000000A2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A4   0x2C05             CMP      R4,#+5
   \   000000A6   0xDA01             BGE.N    ??DisplayPage_3_14
    352                          {
    353                              page_num++;
   \   000000A8   0x1C64             ADDS     R4,R4,#+1
   \   000000AA   0xE000             B.N      ??DisplayPage_3_15
    354                          }
    355                          //ÂΩìÂâçÈ°µÊòØÊúÄÂêé‰∏ÄÈ°µÔºåÂè≥ÈîÆÊåâ‰∏ãÁøªËá≥ÊúÄÂâç‰∏ÄÈ°µ
    356                          else
    357                          {
    358                              page_num = DISPLAY_PAGE_MIN;
   \                     ??DisplayPage_3_14: (+1)
   \   000000AC   0x2401             MOVS     R4,#+1
    359                          }
    360                          //ÈÄÄÂá∫Ê†áÂøó‰ΩçÁΩÆ‰Ωç
    361                          exit_flag = 1;           
   \                     ??DisplayPage_3_15: (+1)
   \   000000AE   0x2501             MOVS     R5,#+1
    362                      }            
    363          
    364                      break;
   \                     ??DisplayPage_3_13: (+1)
   \   000000B0   0xE7B8             B.N      ??DisplayPage_3_0
    365                  case BT_OK_PRESS:
    366                      break;
   \                     ??DisplayPage_3_6: (+1)
   \   000000B2   0xE7B7             B.N      ??DisplayPage_3_0
    367                  default:
    368                      break;
   \                     ??DisplayPage_3_3: (+1)
   \   000000B4   0xE7B6             B.N      ??DisplayPage_3_0
    369                  }
    370              }
    371          
    372              return page_num;
   \                     ??DisplayPage_3_2: (+1)
   \   000000B6   0x0020             MOVS     R0,R4
   \   000000B8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000BA   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    373          }
    374          
    375          /*******************************************************
    376          	ÂáΩÊï∞Âêç: DisplayPage_4                                                  
    377          	Âäü  ËÉΩ: ÊòæÁ§∫È°µ                                                
    378          	ÂèÇ  Êï∞: Êó†                                                                      
    379          	Ëøî  Âõû: ‰∏ã‰∏ÄÈ°µÈ°µÁ†Å                                                          
    380          *********************************************************/

   \                                 In section .text, align 2, keep-with-next
    381          uint8  DisplayPage_4()
    382          {
   \                     DisplayPage_4: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    383          	uint8 page_num = 4;
   \   00000002   0x2404             MOVS     R4,#+4
    384              int8  exit_flag = 0;
   \   00000004   0x2500             MOVS     R5,#+0
    385              uint8 button_value = 0;
   \   00000006   0x2000             MOVS     R0,#+0
    386          	
    387          	oled_fill(0x00);
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       oled_fill
    388              oled_display_6x8str(0*OLED_CHAR_WIDTH, 0, "p4:");
   \   0000000E   0x....             ADR.N    R2,??DataTable5  ;; "p4:"
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       oled_display_6x8str
    389          	Delay_ms(DISPLAY_IMAGE_DELAY);
   \   00000018   0x2064             MOVS     R0,#+100
   \   0000001A   0x.... 0x....      BL       Delay_ms
   \   0000001E   0xE001             B.N      ??DisplayPage_4_0
    390          
    391              while(exit_flag == 0)
    392              {
    393                  //ËØªÂèñÊåâÈîÆÂÄº
    394                          button_value=button_scan();
    395                  
    396          #ifdef USE_INFR 
    397                  if (button_value == FIVE_DIR_NULL)//Êó†‰∫îÂêëÊåâÈîÆÊåâ‰∏ãÂàôÂà§Êñ≠Á∫¢Â§ñ
    398                  {
    399                      button_value = get_infrared_command();
    400                      reset_infrared();
    401                      
    402                      switch(button_value)
    403                      {
    404                          case COMMAND_UP:
    405                              button_value = FIVE_DIR_UP;
    406                              break;
    407                          case COMMAND_DOWN:
    408                              button_value = FIVE_DIR_DOWN;
    409                              break;                    
    410                          case COMMAND_LEFT:
    411                              button_value = FIVE_DIR_LEFT;
    412                              break;                    
    413                          case COMMAND_RIGHT:
    414                              button_value = FIVE_DIR_RIGHT;
    415                              break;
    416                          case COMMAND_OK:
    417                              button_value = FIVE_DIR_OK;
    418                              break;     
    419                          default:
    420                              button_value = FIVE_DIR_NULL;//ËØÜÂà´‰∏çÂá∫ÂàôËÆ§‰∏∫Ê≤°Êåâ‰∏ã
    421                              break;                                    
    422                      }
    423                  }
    424          #endif   
    425          
    426                  switch(button_value)
    427                  {
    428                  case BT_UP_PRESS:
    429                      page_num = page_num + SPECIAL_PAGE_OFFSET;
   \                     ??DisplayPage_4_1: (+1)
   \   00000020   0x341E             ADDS     R4,R4,#+30
    430                      exit_flag = 1;
   \   00000022   0x2501             MOVS     R5,#+1
    431                      break;
   \                     ??DisplayPage_4_0: (+1)
   \   00000024   0xB26D             SXTB     R5,R5            ;; SignExt  R5,R5,#+24,#+24
   \   00000026   0x2D00             CMP      R5,#+0
   \   00000028   0xD145             BNE.N    ??DisplayPage_4_2
   \   0000002A   0x.... 0x....      BL       button_scan
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x2801             CMP      R0,#+1
   \   00000032   0xD0F5             BEQ.N    ??DisplayPage_4_1
   \   00000034   0xD33E             BCC.N    ??DisplayPage_4_3
   \   00000036   0x2803             CMP      R0,#+3
   \   00000038   0xD007             BEQ.N    ??DisplayPage_4_4
   \   0000003A   0xD303             BCC.N    ??DisplayPage_4_5
   \   0000003C   0x2805             CMP      R0,#+5
   \   0000003E   0xD038             BEQ.N    ??DisplayPage_4_6
   \   00000040   0xD31D             BCC.N    ??DisplayPage_4_7
   \   00000042   0xE037             B.N      ??DisplayPage_4_3
    432                  case BT_DN_PRESS:
    433                      page_num = page_num + SPECIAL_PAGE_OFFSET;
   \                     ??DisplayPage_4_5: (+1)
   \   00000044   0x341E             ADDS     R4,R4,#+30
    434                      exit_flag = 1;                                  
   \   00000046   0x2501             MOVS     R5,#+1
    435                      break;
   \   00000048   0xE7EC             B.N      ??DisplayPage_4_0
    436                      //Â∑¶ÈîÆÂêëÂâçÁøªÈ°µ
    437                  case BT_LE_PRESS:
    438                      if (gs_u8ImageLineDelayControlFlag == 1)
   \                     ??DisplayPage_4_4: (+1)
   \   0000004A   0x....             LDR.N    R0,??DataTable5_1
   \   0000004C   0x7800             LDRB     R0,[R0, #+0]
   \   0000004E   0x2801             CMP      R0,#+1
   \   00000050   0xD109             BNE.N    ??DisplayPage_4_8
    439                      {
    440                          g_u8DigitalCameraThreshold--;
   \   00000052   0x....             LDR.N    R0,??DataTable5_2
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x1E40             SUBS     R0,R0,#+1
   \   00000058   0x....             LDR.N    R1,??DataTable5_2
   \   0000005A   0x7008             STRB     R0,[R1, #+0]
    441                          SCCB_WriteByte(OV7725_CNST, g_u8DigitalCameraThreshold);
   \   0000005C   0x....             LDR.N    R0,??DataTable5_2
   \   0000005E   0x7801             LDRB     R1,[R0, #+0]
   \   00000060   0x209C             MOVS     R0,#+156
   \   00000062   0x.... 0x....      BL       SCCB_WriteByte
    442                      }
    443                      
    444                      if (gs_u8ImageLineDelayControlFlag == 0)
   \                     ??DisplayPage_4_8: (+1)
   \   00000066   0x....             LDR.N    R0,??DataTable5_1
   \   00000068   0x7800             LDRB     R0,[R0, #+0]
   \   0000006A   0x2800             CMP      R0,#+0
   \   0000006C   0xD106             BNE.N    ??DisplayPage_4_9
    445                      {
    446                          if(page_num > DISPLAY_PAGE_MIN)
   \   0000006E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000070   0x2C02             CMP      R4,#+2
   \   00000072   0xDB01             BLT.N    ??DisplayPage_4_10
    447                          {
    448                              page_num--;
   \   00000074   0x1E64             SUBS     R4,R4,#+1
   \   00000076   0xE000             B.N      ??DisplayPage_4_11
    449                          }
    450                          //ÂΩìÂâçÈ°µÊòØÊúÄÂâç‰∏ÄÈ°µÔºåÁøªËá≥ÊúÄÂêé‰∏ÄÈ°µ
    451                          else
    452                          {
    453                              page_num = DISPLAY_PAGE_MAX;
   \                     ??DisplayPage_4_10: (+1)
   \   00000078   0x2405             MOVS     R4,#+5
    454                          }
    455                          //ÈÄÄÂá∫Ê†áÂøó‰ΩçÁΩÆ‰Ωç
    456                          exit_flag = 1;                
   \                     ??DisplayPage_4_11: (+1)
   \   0000007A   0x2501             MOVS     R5,#+1
    457                      }
    458          
    459                      break;
   \                     ??DisplayPage_4_9: (+1)
   \   0000007C   0xE7D2             B.N      ??DisplayPage_4_0
    460                      //Âè≥ÈîÆÂêëÂêéÁøªÈ°µ
    461                  case BT_RI_PRESS:
    462                      
    463                      if (gs_u8ImageLineDelayControlFlag == 1)
   \                     ??DisplayPage_4_7: (+1)
   \   0000007E   0x....             LDR.N    R0,??DataTable5_1
   \   00000080   0x7800             LDRB     R0,[R0, #+0]
   \   00000082   0x2801             CMP      R0,#+1
   \   00000084   0xD109             BNE.N    ??DisplayPage_4_12
    464                      {
    465                          g_u8DigitalCameraThreshold++;
   \   00000086   0x....             LDR.N    R0,??DataTable5_2
   \   00000088   0x7800             LDRB     R0,[R0, #+0]
   \   0000008A   0x1C40             ADDS     R0,R0,#+1
   \   0000008C   0x....             LDR.N    R1,??DataTable5_2
   \   0000008E   0x7008             STRB     R0,[R1, #+0]
    466                          SCCB_WriteByte(OV7725_CNST, g_u8DigitalCameraThreshold);
   \   00000090   0x....             LDR.N    R0,??DataTable5_2
   \   00000092   0x7801             LDRB     R1,[R0, #+0]
   \   00000094   0x209C             MOVS     R0,#+156
   \   00000096   0x.... 0x....      BL       SCCB_WriteByte
    467                      }
    468                      
    469                      if (gs_u8ImageLineDelayControlFlag == 0)
   \                     ??DisplayPage_4_12: (+1)
   \   0000009A   0x....             LDR.N    R0,??DataTable5_1
   \   0000009C   0x7800             LDRB     R0,[R0, #+0]
   \   0000009E   0x2800             CMP      R0,#+0
   \   000000A0   0xD106             BNE.N    ??DisplayPage_4_13
    470                      {
    471                          if(page_num < DISPLAY_PAGE_MAX)
   \   000000A2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A4   0x2C05             CMP      R4,#+5
   \   000000A6   0xDA01             BGE.N    ??DisplayPage_4_14
    472                          {
    473                              page_num++;
   \   000000A8   0x1C64             ADDS     R4,R4,#+1
   \   000000AA   0xE000             B.N      ??DisplayPage_4_15
    474                          }
    475                          //ÂΩìÂâçÈ°µÊòØÊúÄÂêé‰∏ÄÈ°µÔºåÂè≥ÈîÆÊåâ‰∏ãÁøªËá≥ÊúÄÂâç‰∏ÄÈ°µ
    476                          else
    477                          {
    478                              page_num = DISPLAY_PAGE_MIN;
   \                     ??DisplayPage_4_14: (+1)
   \   000000AC   0x2401             MOVS     R4,#+1
    479                          }
    480                          //ÈÄÄÂá∫Ê†áÂøó‰ΩçÁΩÆ‰Ωç
    481                          exit_flag = 1;           
   \                     ??DisplayPage_4_15: (+1)
   \   000000AE   0x2501             MOVS     R5,#+1
    482                      }            
    483          
    484                      break;
   \                     ??DisplayPage_4_13: (+1)
   \   000000B0   0xE7B8             B.N      ??DisplayPage_4_0
    485                  case BT_OK_PRESS:
    486                      break;
   \                     ??DisplayPage_4_6: (+1)
   \   000000B2   0xE7B7             B.N      ??DisplayPage_4_0
    487                  default:
    488                      break;
   \                     ??DisplayPage_4_3: (+1)
   \   000000B4   0xE7B6             B.N      ??DisplayPage_4_0
    489                  }
    490              }
    491          
    492              return page_num;
   \                     ??DisplayPage_4_2: (+1)
   \   000000B6   0x0020             MOVS     R0,R4
   \   000000B8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000BA   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    493          }
    494          
    495          
    496          /*******************************************************
    497          	ÂáΩÊï∞Âêç: SpecialPage                                                  
    498          	Âäü  ËÉΩ: ÁâπÊÆäÈ°µ                                                
    499              ÂèÇ  Êï∞: ÁºñÁ†ÅÂêéÁöÑ‰∏ä‰∏ÄÈ°µÈ°µÁ†Å                                                                      
    500          	Ëøî  Âõû: ‰∏ã‰∏ÄÈ°µÈ°µÁ†Å                                                          
    501          *********************************************************/

   \                                 In section .text, align 2, keep-with-next
    502          uint8 SpecialPage(uint8 page_num)
    503          {
   \                     SpecialPage: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    504              int8  exit_flag = 0;
   \   00000004   0x2500             MOVS     R5,#+0
    505              uint8 button_value = 0;
   \   00000006   0x2000             MOVS     R0,#+0
    506              
    507              
    508          	
    509          	oled_fill(0x00);
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       oled_fill
    510          
    511          
    512              oled_display_6x8str_hl(0*OLED_CHAR_WIDTH, 0, "ThresholdCtrl:");
   \   0000000E   0x....             LDR.N    R2,??DataTable5_3
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       oled_display_6x8str_hl
    513              oled_display_6x8str(0*OLED_CHAR_WIDTH, 1, "Threshold:");
   \   00000018   0x....             LDR.N    R2,??DataTable5_4
   \   0000001A   0x2101             MOVS     R1,#+1
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x.... 0x....      BL       oled_display_6x8str
   \   00000022   0xE001             B.N      ??SpecialPage_0
    514          
    515              while(exit_flag == 0)
    516              {       
    517                  oled_display_boolean(15*OLED_CHAR_WIDTH, 0, gs_u8ImageLineDelayControlFlag);	 
    518                  
    519                  oled_print_short(15*OLED_CHAR_WIDTH, 1, g_u8DigitalCameraThreshold);
    520                  
    521                  
    522                  //ËØªÂèñÊåâÈîÆÂÄº
    523                          button_value=button_scan();
    524                  
    525          #ifdef USE_INFR 
    526                  if (button_value == FIVE_DIR_NULL)//Êó†‰∫îÂêëÊåâÈîÆÊåâ‰∏ãÂàôÂà§Êñ≠Á∫¢Â§ñ
    527                  {
    528                      button_value = get_infrared_command();
    529                      reset_infrared();
    530                      
    531                      switch(button_value)
    532                      {
    533                          case COMMAND_UP:
    534                              button_value = FIVE_DIR_UP;
    535                              break;
    536                          case COMMAND_DOWN:
    537                              button_value = FIVE_DIR_DOWN;
    538                              break;                    
    539                          case COMMAND_LEFT:
    540                              button_value = FIVE_DIR_LEFT;
    541                              break;                    
    542                          case COMMAND_RIGHT:
    543                              button_value = FIVE_DIR_RIGHT;
    544                              break;
    545                          case COMMAND_OK:
    546                              button_value = FIVE_DIR_OK;
    547                              break;     
    548                          default:
    549                              button_value = FIVE_DIR_NULL;//ËØÜÂà´‰∏çÂá∫ÂàôËÆ§‰∏∫Ê≤°Êåâ‰∏ã
    550                              break;                                    
    551                      }
    552                  }
    553          #endif   
    554          
    555                  switch(button_value)
    556                  {
    557                  case BT_UP_PRESS:
    558                      page_num = page_num - SPECIAL_PAGE_OFFSET;
   \                     ??SpecialPage_1: (+1)
   \   00000024   0x3C1E             SUBS     R4,R4,#+30
    559                      
    560                      exit_flag = 1;
   \   00000026   0x2501             MOVS     R5,#+1
    561                      
    562                      break;
   \                     ??SpecialPage_0: (+1)
   \   00000028   0xB26D             SXTB     R5,R5            ;; SignExt  R5,R5,#+24,#+24
   \   0000002A   0x2D00             CMP      R5,#+0
   \   0000002C   0xD148             BNE.N    ??SpecialPage_2
   \   0000002E   0x....             LDR.N    R0,??DataTable5_1
   \   00000030   0x7802             LDRB     R2,[R0, #+0]
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x205A             MOVS     R0,#+90
   \   00000036   0x.... 0x....      BL       oled_display_boolean
   \   0000003A   0x....             LDR.N    R0,??DataTable5_2
   \   0000003C   0x7800             LDRB     R0,[R0, #+0]
   \   0000003E   0x0002             MOVS     R2,R0
   \   00000040   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000042   0x2101             MOVS     R1,#+1
   \   00000044   0x205A             MOVS     R0,#+90
   \   00000046   0x.... 0x....      BL       oled_print_short
   \   0000004A   0x.... 0x....      BL       button_scan
   \   0000004E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000050   0x2801             CMP      R0,#+1
   \   00000052   0xD0E7             BEQ.N    ??SpecialPage_1
   \   00000054   0xD333             BCC.N    ??SpecialPage_3
   \   00000056   0x2803             CMP      R0,#+3
   \   00000058   0xD007             BEQ.N    ??SpecialPage_4
   \   0000005A   0xD303             BCC.N    ??SpecialPage_5
   \   0000005C   0x2805             CMP      R0,#+5
   \   0000005E   0xD022             BEQ.N    ??SpecialPage_6
   \   00000060   0xD312             BCC.N    ??SpecialPage_7
   \   00000062   0xE02C             B.N      ??SpecialPage_3
    563                  case BT_DN_PRESS:
    564                      
    565                      page_num = page_num - SPECIAL_PAGE_OFFSET;
   \                     ??SpecialPage_5: (+1)
   \   00000064   0x3C1E             SUBS     R4,R4,#+30
    566                      
    567                      exit_flag = 1;            
   \   00000066   0x2501             MOVS     R5,#+1
    568          
    569                      break;
   \   00000068   0xE7DE             B.N      ??SpecialPage_0
    570          
    571                  case BT_LE_PRESS:
    572                      if (gs_u8ImageLineDelayControlFlag == 1)
   \                     ??SpecialPage_4: (+1)
   \   0000006A   0x....             LDR.N    R0,??DataTable5_1
   \   0000006C   0x7800             LDRB     R0,[R0, #+0]
   \   0000006E   0x2801             CMP      R0,#+1
   \   00000070   0xD109             BNE.N    ??SpecialPage_8
    573                      {
    574                          g_u8DigitalCameraThreshold--;
   \   00000072   0x....             LDR.N    R0,??DataTable5_2
   \   00000074   0x7800             LDRB     R0,[R0, #+0]
   \   00000076   0x1E40             SUBS     R0,R0,#+1
   \   00000078   0x....             LDR.N    R1,??DataTable5_2
   \   0000007A   0x7008             STRB     R0,[R1, #+0]
    575                          SCCB_WriteByte(OV7725_CNST, g_u8DigitalCameraThreshold);
   \   0000007C   0x....             LDR.N    R0,??DataTable5_2
   \   0000007E   0x7801             LDRB     R1,[R0, #+0]
   \   00000080   0x209C             MOVS     R0,#+156
   \   00000082   0x.... 0x....      BL       SCCB_WriteByte
    576                      }
    577          
    578                      break;
   \                     ??SpecialPage_8: (+1)
   \   00000086   0xE7CF             B.N      ??SpecialPage_0
    579          
    580                  case BT_RI_PRESS:
    581                      if (gs_u8ImageLineDelayControlFlag == 1)
   \                     ??SpecialPage_7: (+1)
   \   00000088   0x....             LDR.N    R0,??DataTable5_1
   \   0000008A   0x7800             LDRB     R0,[R0, #+0]
   \   0000008C   0x2801             CMP      R0,#+1
   \   0000008E   0xD109             BNE.N    ??SpecialPage_9
    582                      {
    583                          g_u8DigitalCameraThreshold++;
   \   00000090   0x....             LDR.N    R0,??DataTable5_2
   \   00000092   0x7800             LDRB     R0,[R0, #+0]
   \   00000094   0x1C40             ADDS     R0,R0,#+1
   \   00000096   0x....             LDR.N    R1,??DataTable5_2
   \   00000098   0x7008             STRB     R0,[R1, #+0]
    584                          SCCB_WriteByte(OV7725_CNST, g_u8DigitalCameraThreshold);
   \   0000009A   0x....             LDR.N    R0,??DataTable5_2
   \   0000009C   0x7801             LDRB     R1,[R0, #+0]
   \   0000009E   0x209C             MOVS     R0,#+156
   \   000000A0   0x.... 0x....      BL       SCCB_WriteByte
    585                      }
    586                      
    587                      break;
   \                     ??SpecialPage_9: (+1)
   \   000000A4   0xE7C0             B.N      ??SpecialPage_0
    588                  case BT_OK_PRESS:           
    589                      gs_u8ImageLineDelayControlFlag = !gs_u8ImageLineDelayControlFlag;            
   \                     ??SpecialPage_6: (+1)
   \   000000A6   0x....             LDR.N    R0,??DataTable5_1
   \   000000A8   0x7800             LDRB     R0,[R0, #+0]
   \   000000AA   0x2800             CMP      R0,#+0
   \   000000AC   0xD103             BNE.N    ??SpecialPage_10
   \   000000AE   0x2001             MOVS     R0,#+1
   \   000000B0   0x....             LDR.N    R1,??DataTable5_1
   \   000000B2   0x7008             STRB     R0,[R1, #+0]
   \   000000B4   0xE002             B.N      ??SpecialPage_11
   \                     ??SpecialPage_10: (+1)
   \   000000B6   0x2000             MOVS     R0,#+0
   \   000000B8   0x....             LDR.N    R1,??DataTable5_1
   \   000000BA   0x7008             STRB     R0,[R1, #+0]
    590                      
    591                      break;
   \                     ??SpecialPage_11: (+1)
   \   000000BC   0xE7B4             B.N      ??SpecialPage_0
    592                  default:
    593                      break;
   \                     ??SpecialPage_3: (+1)
   \   000000BE   0xE7B3             B.N      ??SpecialPage_0
    594                  }
    595              }
    596          
    597              return page_num;
   \                     ??SpecialPage_2: (+1)
   \   000000C0   0x0020             MOVS     R0,R4
   \   000000C2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C4   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    598          }
    599          
    600          
    601          /*******************************************************
    602          	ÂáΩÊï∞Âêç: display_exit                                                   
    603          	Âäü  ËÉΩ: ÈÄÄÂá∫È°µ                                                
    604          	ÂèÇ  Êï∞: Êú¨È°µÈ°µÁ†Å                                                                      
    605          	Ëøî  Âõû: ‰∏ã‰∏ÄÈ°µÈ°µÁ†Å                                                    
    606          *********************************************************/

   \                                 In section .text, align 2, keep-with-next
    607          uint8 display_exit(uint8 page_num)
    608          {
   \                     display_exit: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    609              int8  exit_flag = 0;
   \   00000004   0x2500             MOVS     R5,#+0
    610              uint8 button_value = 0;
   \   00000006   0x2000             MOVS     R0,#+0
    611          
    612              
    613              //ÊòæÁ§∫‰ø°ÊÅØ
    614              oled_fill(0x00);
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       oled_fill
    615              oled_display_6x8str(10,2,"Exit display image?");
   \   0000000E   0x....             LDR.N    R2,??DataTable5_5
   \   00000010   0x2102             MOVS     R1,#+2
   \   00000012   0x200A             MOVS     R0,#+10
   \   00000014   0x.... 0x....      BL       oled_display_6x8str
   \   00000018   0xE7FF             B.N      ??display_exit_0
    616          
    617              while(!exit_flag)
    618              {
    619                  //ËØªÂèñÊåâÈîÆÁä∂ÊÄÅ
    620                          button_value=button_scan();
    621                  
    622          #ifdef USE_INFR 
    623                  if (button_value == FIVE_DIR_NULL)//Êó†‰∫îÂêëÊåâÈîÆÊåâ‰∏ãÂàôÂà§Êñ≠Á∫¢Â§ñ
    624                  {
    625                      button_value = get_infrared_command();
    626                      reset_infrared();
    627                      
    628                      switch(button_value)
    629                      {
    630                          case COMMAND_UP:
    631                              button_value = FIVE_DIR_UP;
    632                              break;
    633                          case COMMAND_DOWN:
    634                              button_value = FIVE_DIR_DOWN;
    635                              break;                    
    636                          case COMMAND_LEFT:
    637                              button_value = FIVE_DIR_LEFT;
    638                              break;                    
    639                          case COMMAND_RIGHT:
    640                              button_value = FIVE_DIR_RIGHT;
    641                              break;
    642                          case COMMAND_OK:
    643                              button_value = FIVE_DIR_OK;
    644                              break;     
    645                          default:
    646                              button_value = FIVE_DIR_NULL;//ËØÜÂà´‰∏çÂá∫ÂàôËÆ§‰∏∫Ê≤°Êåâ‰∏ã
    647                              break;                                    
    648                      }
    649                  }
    650          #endif   
    651          
    652                  switch(button_value)
    653                  {
    654                  case BT_UP_PRESS:
    655                      break;
   \                     ??display_exit_1: (+1)
   \                     ??display_exit_0: (+1)
   \   0000001A   0xB26D             SXTB     R5,R5            ;; SignExt  R5,R5,#+24,#+24
   \   0000001C   0x2D00             CMP      R5,#+0
   \   0000001E   0xD123             BNE.N    ??display_exit_2
   \   00000020   0x.... 0x....      BL       button_scan
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x2801             CMP      R0,#+1
   \   00000028   0xD0F7             BEQ.N    ??display_exit_1
   \   0000002A   0xD31C             BCC.N    ??display_exit_3
   \   0000002C   0x2803             CMP      R0,#+3
   \   0000002E   0xD005             BEQ.N    ??display_exit_4
   \   00000030   0xD303             BCC.N    ??display_exit_5
   \   00000032   0x2805             CMP      R0,#+5
   \   00000034   0xD012             BEQ.N    ??display_exit_6
   \   00000036   0xD309             BCC.N    ??display_exit_7
   \   00000038   0xE015             B.N      ??display_exit_3
    656                  case BT_DN_PRESS:
    657                      break;
   \                     ??display_exit_5: (+1)
   \   0000003A   0xE7EE             B.N      ??display_exit_0
    658                      //Â∑¶ÈîÆÂêëÂâçÁøªÈ°µ
    659                  case BT_LE_PRESS:
    660                      if(page_num > DISPLAY_PAGE_MIN)
   \                     ??display_exit_4: (+1)
   \   0000003C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003E   0x2C02             CMP      R4,#+2
   \   00000040   0xDB01             BLT.N    ??display_exit_8
    661                      {
    662                          page_num--;
   \   00000042   0x1E64             SUBS     R4,R4,#+1
   \   00000044   0xE000             B.N      ??display_exit_9
    663                      }
    664                      //Â¶ÇÊûúÂΩìÂâçÈ°µÊòØÊúÄÂâçÈ°µÔºåÁøªËá≥ÊúÄÂêéÈ°µ
    665                      else
    666                      {
    667                          page_num = DISPLAY_PAGE_MAX;
   \                     ??display_exit_8: (+1)
   \   00000046   0x2405             MOVS     R4,#+5
    668                      }
    669                      //ÈÄÄÂá∫Ê†áÂøó‰ΩçÁΩÆ‰Ωç
    670                      exit_flag = 1;
   \                     ??display_exit_9: (+1)
   \   00000048   0x2501             MOVS     R5,#+1
    671                      break;
   \   0000004A   0xE7E6             B.N      ??display_exit_0
    672                      //Âè≥ÈîÆÂêëÂêéÁøªÈ°µ
    673                  case BT_RI_PRESS:
    674                      if(page_num < DISPLAY_PAGE_MAX)
   \                     ??display_exit_7: (+1)
   \   0000004C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004E   0x2C05             CMP      R4,#+5
   \   00000050   0xDA01             BGE.N    ??display_exit_10
    675                      {
    676                          page_num++;
   \   00000052   0x1C64             ADDS     R4,R4,#+1
   \   00000054   0xE000             B.N      ??display_exit_11
    677                      }
    678                      //Â¶ÇÊûúÂΩìÂâçÈ°µÊòØÊúÄÂêé‰∏ÄÈ°µÔºåÂàôÁøªËá≥ÊúÄÂâçÈ°µ
    679                      else
    680                      {
    681                          page_num = DISPLAY_PAGE_MIN;
   \                     ??display_exit_10: (+1)
   \   00000056   0x2401             MOVS     R4,#+1
    682                      }
    683                      //ÈÄÄÂá∫Ê†áÂøó‰ΩçÁΩÆ‰Ωç
    684                      exit_flag = 1;
   \                     ??display_exit_11: (+1)
   \   00000058   0x2501             MOVS     R5,#+1
    685                      break;
   \   0000005A   0xE7DE             B.N      ??display_exit_0
    686                      //Á°ÆËÆ§ÈîÆÊåâ‰∏ãÔºåÈÄÄÂá∫ÊµãËØïÁ®ãÂ∫è
    687                  case BT_OK_PRESS:
    688                      //ÈÄÄÂá∫Ê†áÂøó‰ΩçÁΩÆ‰Ωç
    689                      exit_flag = 1;
   \                     ??display_exit_6: (+1)
   \   0000005C   0x2501             MOVS     R5,#+1
    690                      gs_u8ExitDisplayFlag = FLAG_ON;
   \   0000005E   0x2001             MOVS     R0,#+1
   \   00000060   0x....             LDR.N    R1,??DataTable5_6
   \   00000062   0x7008             STRB     R0,[R1, #+0]
    691                      break;
   \   00000064   0xE7D9             B.N      ??display_exit_0
    692                  default:
    693                      break;
   \                     ??display_exit_3: (+1)
   \   00000066   0xE7D8             B.N      ??display_exit_0
    694          
    695                  }
    696              }
    697          	
    698              return page_num;
   \                     ??display_exit_2: (+1)
   \   00000068   0x0020             MOVS     R0,R4
   \   0000006A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    699          }
    700          
    701          /*******************************************************
    702          	ÂáΩÊï∞Âêç: DisplayImage                                                   
    703          	Âäü  ËÉΩ: ÂõæÂÉèÊòæÁ§∫                                                
    704          	ÂèÇ  Êï∞: Êó†                                                                      
    705          	Ëøî  Âõû: Êó†                                                    
    706          *********************************************************/

   \                                 In section .text, align 2, keep-with-next
    707          void Display_Image()
    708          {
   \                     Display_Image: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    709              while(1)
    710              {
    711               oled_print_std_image(0);
   \                     ??Display_Image_0: (+1)
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       oled_print_std_image
   \   00000008   0xE7FB             B.N      ??Display_Image_0
    712              }//while
    713          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x70 0x31          DC8      "p1:"
   \              0x3A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x70 0x32          DC8      "p2:"
   \              0x3A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x70 0x33          DC8      "p3:"
   \              0x3A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x70 0x34          DC8      "p4:"
   \              0x3A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     gs_u8ImageLineDelayControlFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     g_u8DigitalCameraThreshold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x........         DC32     gs_u8ExitDisplayFlag

   \                                 In section .rodata, align 4
   \   00000000   0x70 0x31          DC8 "p1:"
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x70 0x32          DC8 "p2:"
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x70 0x33          DC8 "p3:"
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x70 0x34          DC8 "p4:"
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x54 0x68          DC8 "ThresholdCtrl:"
   \              0x72 0x65    
   \              0x73 0x68    
   \              0x6F 0x6C    
   \              0x64 0x43    
   \              0x74 0x72    
   \              0x6C 0x3A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x54 0x68          DC8 "Threshold:"
   \              0x72 0x65    
   \              0x73 0x68    
   \              0x6F 0x6C    
   \              0x64 0x3A    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x45 0x78          DC8 "Exit display image?"
   \              0x69 0x74    
   \              0x20 0x64    
   \              0x69 0x73    
   \              0x70 0x6C    
   \              0x61 0x79    
   \              0x20 0x69    
   \              0x6D 0x61    
   \              0x67 0x65    
   \              0x3F 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   DisplayPage_1
        16   -> Delay_ms
        16   -> SCCB_WriteByte
        16   -> button_scan
        16   -> oled_display_6x8str
        16   -> oled_fill
        16   -> oled_print_std_image
      16   DisplayPage_2
        16   -> Delay_ms
        16   -> SCCB_WriteByte
        16   -> button_scan
        16   -> oled_display_6x8str
        16   -> oled_fill
      16   DisplayPage_3
        16   -> Delay_ms
        16   -> SCCB_WriteByte
        16   -> button_scan
        16   -> oled_display_6x8str
        16   -> oled_fill
      16   DisplayPage_4
        16   -> Delay_ms
        16   -> SCCB_WriteByte
        16   -> button_scan
        16   -> oled_display_6x8str
        16   -> oled_fill
       8   Display_Image
         8   -> oled_print_std_image
      16   SpecialPage
        16   -> SCCB_WriteByte
        16   -> button_scan
        16   -> oled_display_6x8str
        16   -> oled_display_6x8str_hl
        16   -> oled_display_boolean
        16   -> oled_fill
        16   -> oled_print_short
      16   display_exit
        16   -> button_scan
        16   -> oled_display_6x8str
        16   -> oled_fill


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable3
       4  ??DataTable4
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ?_0
       4  ?_1
       4  ?_2
       4  ?_3
      16  ?_4
      12  ?_5
      20  ?_6
     214  DisplayPage_1
     204  DisplayPage_2
     188  DisplayPage_3
     188  DisplayPage_4
      10  Display_Image
     198  SpecialPage
     110  display_exit
       1  gs_u8ExitDisplayFlag
       1  gs_u8ImageLineDelayControlFlag

 
     2 bytes in section .bss
    64 bytes in section .rodata
 1 152 bytes in section .text
 
 1 152 bytes of CODE  memory
    64 bytes of CONST memory
     2 bytes of DATA  memory

Errors: none
Warnings: 1
