###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       27/Jul/2018  20:43:45
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\Beacon_XBY.c
#    Command line =  
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\Beacon_XBY.c"
#        -D LPLD_K60 -lCN "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\List" -lB
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\FLASH\List"
#        -o "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\CPU\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\HW\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\DEV\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\option\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\driver\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\descriptor\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\class\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\FUNC\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\driver\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\driver\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\control\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\control\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\debug\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\debug\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\device\src\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\device\inc\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\signal\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\signal\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\system\" -Ol
#        -I "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\List\Beacon_XBY.lst
#    Object file  =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\Obj\Beacon_XBY.o
#
###############################################################################

D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\Beacon_XBY.c
      1          /*
      2           * --------------信标C车最终版（Beacon_XBY）-----------------
      3           * @file Beacon_XBY.c
      4           * @date 2018-7-16
      5           */
      6          
      7          #include "include.h"
      8          #include "common.h"
      9          
     10          #define NONE_MODE               0
     11          
     12          
     13          uint8 Select_Mode();
     14          
     15          

   \                                 In section .text, align 2, keep-with-next
     16          void main (void)
     17          {
   \                     main: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     18              uint8 mode = 0;
   \   00000002   0x2000             MOVS     R0,#+0
     19              uint8 button_value = 0;
   \   00000004   0x2000             MOVS     R0,#+0
     20              uint8 exit_flag = FLAG_OFF;
   \   00000006   0x2400             MOVS     R4,#+0
     21          
     22              Init_All();//初始化
   \   00000008   0x.... 0x....      BL       Init_All
   \   0000000C   0xE002             B.N      ??main_0
     23          
     24          //    while(1)
     25          //    {
     26          ////      Get_Ultrasonic_Value_Ave();
     27          ////      oled_print_std_image(0);
     28          ////      Change_PWM_Servo(580);
     29          //      Change_PWM_Motor_Right(2500);
     30          //      Change_PWM_Motor_Left(2500);
     31          ////      Get_Car_Speed();
     32          ////      UART_Sendchar('a');
     33          ////      Show_Time();
     34          ////      oled_print_short(0, 1,gi_tele_barrier_distance);
     35          ////      Set_Motor_PWM(1000, LEFT_MOTOR);            
     36          ////      Set_Motor_PWM(2500, RIGHT_MOTOR); 
     37          ////      guc_car_run_flag = CAR_RUN; 
     38          ////      gl_pwm_out = 3000;
     39          ////      Sevro_Output(-75);
     40          ////      Motor_Output(); 
     41          ////      Infrared_Value_Get();
     42          //        Get_Car_Condition();
     43          //        oled_print_short(80, 1,(int16)(gl_car_running_distance/10));
     44          //        oled_print_short(80, 2,(int16)(gl_car_speed));
     45          //        oled_print_short(80, 3,gi_left_speed);
     46          //        oled_print_short(80, 4,gi_right_speed);
     47          //        oled_print_short(80, 5,(int16)gl_left_encoder_count);
     48          //        oled_print_short(80, 6,(int16)gl_right_encoder_count);
     49          //        oled_print_short(80, 7,(int16)gl_pwm_out);
     50          //    }
     51          
     52              while(exit_flag == FLAG_OFF)
     53              {
     54                  button_value=button_scan();
     55              
     56                  if(button_value == FIVE_DIR_DOWN)
     57                  {
     58                      mode = Select_Mode();
     59                      
     60                      switch(mode)
     61                      {
     62                          case SET_PARAM:
     63                            Param_Set();
     64                              break;
     65                          case HARDWARE_TEST:
     66                            Smartcar_Test();
     67                              break;
     68                          case DISPLAY_IMAGE:
     69                            Display_Image();
     70                              break;
     71                          case CAR_RUNNING:
     72                            {
     73                                exit_flag = FLAG_ON;
     74                                PIT_ONE_Enable(PIT_1);
     75                            }
     76                              break;
     77                          default:
     78                                break;
     79                      }
     80                      oled_fill(0);
   \                     ??main_1: (+1)
   \                     ??main_2: (+1)
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      BL       oled_fill
   \                     ??main_0: (+1)
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0x2C00             CMP      R4,#+0
   \   00000018   0xD11E             BNE.N    ??main_3
   \   0000001A   0x.... 0x....      BL       button_scan
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0x2802             CMP      R0,#+2
   \   00000022   0xD1F7             BNE.N    ??main_0
   \   00000024   0x.... 0x....      BL       Select_Mode
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x2802             CMP      R0,#+2
   \   0000002C   0xD006             BEQ.N    ??main_4
   \   0000002E   0xD3EE             BCC.N    ??main_1
   \   00000030   0x2804             CMP      R0,#+4
   \   00000032   0xD009             BEQ.N    ??main_5
   \   00000034   0xD305             BCC.N    ??main_6
   \   00000036   0x2805             CMP      R0,#+5
   \   00000038   0xD009             BEQ.N    ??main_7
   \   0000003A   0xE7E8             B.N      ??main_1
   \                     ??main_4: (+1)
   \   0000003C   0x.... 0x....      BL       Param_Set
   \   00000040   0xE7E5             B.N      ??main_2
   \                     ??main_6: (+1)
   \   00000042   0x.... 0x....      BL       Smartcar_Test
   \   00000046   0xE7E2             B.N      ??main_2
   \                     ??main_5: (+1)
   \   00000048   0x.... 0x....      BL       Display_Image
   \   0000004C   0xE7DF             B.N      ??main_2
   \                     ??main_7: (+1)
   \   0000004E   0x2401             MOVS     R4,#+1
   \   00000050   0x2001             MOVS     R0,#+1
   \   00000052   0x.... 0x....      BL       PIT_ONE_Enable
   \   00000056   0xE7DA             B.N      ??main_2
     81                  }
     82              }
     83              
     84              
     85              Wait_Beacon();//等待发车
   \                     ??main_3: (+1)
   \   00000058   0x.... 0x....      BL       Wait_Beacon
     86              while(1)
     87              {
     88                  Smartcar_Running();
   \                     ??main_8: (+1)
   \   0000005C   0x.... 0x....      BL       Smartcar_Running
   \   00000060   0xE7FC             B.N      ??main_8
     89              }
     90          }
     91          
     92          
     93          

   \                                 In section .text, align 2, keep-with-next
     94          uint8 Select_Mode()
     95          {
   \                     Select_Mode: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     96          	uint8 mode = 3;
   \   00000002   0x2403             MOVS     R4,#+3
     97          	uint8 exit_flag = FLAG_OFF;
   \   00000004   0x2500             MOVS     R5,#+0
     98                  uint8 button_value = 0;
   \   00000006   0x2000             MOVS     R0,#+0
     99          	static uint8 head_num = 1;		//既指示当前行又指示要显示的汉字串
    100          
    101          	//选择模式下关闭所有控制
    102          
    103          	//显示可选模式
    104          	oled_display_chinese(0, 0, SET_PARAM, LOW_LIGHT_MODE);//参数整定
   \   00000008   0x2300             MOVS     R3,#+0
   \   0000000A   0x2202             MOVS     R2,#+2
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      BL       oled_display_chinese
    105          	oled_display_chinese(0, 2, HARDWARE_TEST, LOW_LIGHT_MODE);//硬件测试
   \   00000014   0x2300             MOVS     R3,#+0
   \   00000016   0x2203             MOVS     R2,#+3
   \   00000018   0x2102             MOVS     R1,#+2
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x.... 0x....      BL       oled_display_chinese
    106          	oled_display_chinese(0, 4, DISPLAY_IMAGE, LOW_LIGHT_MODE);//
   \   00000020   0x2300             MOVS     R3,#+0
   \   00000022   0x2204             MOVS     R2,#+4
   \   00000024   0x2104             MOVS     R1,#+4
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x.... 0x....      BL       oled_display_chinese
    107          	oled_display_chinese(0, 6, CAR_RUNNING, LOW_LIGHT_MODE);//
   \   0000002C   0x2300             MOVS     R3,#+0
   \   0000002E   0x2205             MOVS     R2,#+5
   \   00000030   0x2106             MOVS     R1,#+6
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x.... 0x....      BL       oled_display_chinese
    108          	oled_display_chinese(0, (uint8)(2*(head_num-1)), head_num+1, HIGH_LIGHT_MODE);
   \   00000038   0x2301             MOVS     R3,#+1
   \   0000003A   0x....             LDR.N    R0,??DataTable0
   \   0000003C   0x7800             LDRB     R0,[R0, #+0]
   \   0000003E   0x1C42             ADDS     R2,R0,#+1
   \   00000040   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000042   0x....             LDR.N    R0,??DataTable0
   \   00000044   0x7800             LDRB     R0,[R0, #+0]
   \   00000046   0x1E40             SUBS     R0,R0,#+1
   \   00000048   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004A   0x0041             LSLS     R1,R0,#+1
   \   0000004C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x.... 0x....      BL       oled_display_chinese
   \   00000054   0xE010             B.N      ??Select_Mode_0
    109          
    110          	while (exit_flag == FLAG_OFF)	//选择是否退出当前页
    111          	{
    112                      button_value=button_scan();
    113          #ifdef USE_INFR 
    114                      if (button_value == FIVE_DIR_NULL)//无五向按键按下则判断红外
    115                      {
    116                          button_value = get_infrared_command();
    117                          reset_infrared();
    118                          
    119                          switch(button_value)
    120                          {
    121                              case COMMAND_UP:
    122                                  button_value = FIVE_DIR_UP;
    123                                  break;
    124                              case COMMAND_DOWN:
    125                                  button_value = FIVE_DIR_DOWN;
    126                                  break;                    
    127                              case COMMAND_LEFT:
    128                                  button_value = FIVE_DIR_LEFT;
    129                                  break;                    
    130                              case COMMAND_RIGHT:
    131                                  button_value = FIVE_DIR_RIGHT;
    132                                  break;
    133                              case COMMAND_OK:
    134                                  button_value = FIVE_DIR_OK;
    135                                  break;     
    136                              default:
    137                                  button_value = FIVE_DIR_NULL;//识别不出则认为没按下
    138                                  break;                                    
    139                          }
    140                      }
    141          #endif           
    142                      switch (button_value)
    143                      {
    144                          case FIVE_DIR_UP:
    145                              //上次选中菜单去掉反白显示
    146                              oled_display_chinese(0, (uint8)(2*(head_num-1)), head_num+1, LOW_LIGHT_MODE);
    147                              if(head_num > 1)
    148                              {
    149                                      head_num--;			//如果不是第一行则向上移动
    150                              }
    151                              else
    152                              {
    153                                      head_num = 4;		//如果是第一行则移动到最后一行
   \                     ??Select_Mode_1: (+1)
   \   00000056   0x2004             MOVS     R0,#+4
   \   00000058   0x....             LDR.N    R1,??DataTable0
   \   0000005A   0x7008             STRB     R0,[R1, #+0]
    154                              }
    155                              //本次选中菜单添加反白显示
    156                              oled_display_chinese(0, (uint8)(2*(head_num-1)), head_num+1, HIGH_LIGHT_MODE);
   \                     ??Select_Mode_2: (+1)
   \   0000005C   0x2301             MOVS     R3,#+1
   \   0000005E   0x....             LDR.N    R0,??DataTable0
   \   00000060   0x7800             LDRB     R0,[R0, #+0]
   \   00000062   0x1C42             ADDS     R2,R0,#+1
   \   00000064   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000066   0x....             LDR.N    R0,??DataTable0
   \   00000068   0x7800             LDRB     R0,[R0, #+0]
   \   0000006A   0x1E40             SUBS     R0,R0,#+1
   \   0000006C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006E   0x0041             LSLS     R1,R0,#+1
   \   00000070   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x.... 0x....      BL       oled_display_chinese
    157                              break;
   \                     ??Select_Mode_0: (+1)
   \   00000078   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000007A   0x2D00             CMP      R5,#+0
   \   0000007C   0xD156             BNE.N    ??Select_Mode_3
   \   0000007E   0x.... 0x....      BL       button_scan
   \   00000082   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000084   0x2801             CMP      R0,#+1
   \   00000086   0xD007             BEQ.N    ??Select_Mode_4
   \   00000088   0xD34F             BCC.N    ??Select_Mode_5
   \   0000008A   0x2803             CMP      R0,#+3
   \   0000008C   0xD046             BEQ.N    ??Select_Mode_6
   \   0000008E   0xD31B             BCC.N    ??Select_Mode_7
   \   00000090   0x2805             CMP      R0,#+5
   \   00000092   0xD045             BEQ.N    ??Select_Mode_8
   \   00000094   0xD343             BCC.N    ??Select_Mode_9
   \   00000096   0xE048             B.N      ??Select_Mode_5
   \                     ??Select_Mode_4: (+1)
   \   00000098   0x2300             MOVS     R3,#+0
   \   0000009A   0x....             LDR.N    R0,??DataTable0
   \   0000009C   0x7800             LDRB     R0,[R0, #+0]
   \   0000009E   0x1C42             ADDS     R2,R0,#+1
   \   000000A0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000A2   0x....             LDR.N    R0,??DataTable0
   \   000000A4   0x7800             LDRB     R0,[R0, #+0]
   \   000000A6   0x1E40             SUBS     R0,R0,#+1
   \   000000A8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AA   0x0041             LSLS     R1,R0,#+1
   \   000000AC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000AE   0x2000             MOVS     R0,#+0
   \   000000B0   0x.... 0x....      BL       oled_display_chinese
   \   000000B4   0x....             LDR.N    R0,??DataTable0
   \   000000B6   0x7800             LDRB     R0,[R0, #+0]
   \   000000B8   0x2802             CMP      R0,#+2
   \   000000BA   0xDBCC             BLT.N    ??Select_Mode_1
   \   000000BC   0x....             LDR.N    R0,??DataTable0
   \   000000BE   0x7800             LDRB     R0,[R0, #+0]
   \   000000C0   0x1E40             SUBS     R0,R0,#+1
   \   000000C2   0x....             LDR.N    R1,??DataTable0
   \   000000C4   0x7008             STRB     R0,[R1, #+0]
   \   000000C6   0xE7C9             B.N      ??Select_Mode_2
    158          
    159                          case FIVE_DIR_DOWN:
    160                              //上次选中菜单去掉反白显示
    161                              oled_display_chinese(0, (uint8)(2*(head_num-1)), head_num+1, LOW_LIGHT_MODE);
   \                     ??Select_Mode_7: (+1)
   \   000000C8   0x2300             MOVS     R3,#+0
   \   000000CA   0x....             LDR.N    R0,??DataTable0
   \   000000CC   0x7800             LDRB     R0,[R0, #+0]
   \   000000CE   0x1C42             ADDS     R2,R0,#+1
   \   000000D0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000D2   0x....             LDR.N    R0,??DataTable0
   \   000000D4   0x7800             LDRB     R0,[R0, #+0]
   \   000000D6   0x1E40             SUBS     R0,R0,#+1
   \   000000D8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000DA   0x0041             LSLS     R1,R0,#+1
   \   000000DC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000DE   0x2000             MOVS     R0,#+0
   \   000000E0   0x.... 0x....      BL       oled_display_chinese
    162                              if(head_num < 4)
   \   000000E4   0x....             LDR.N    R0,??DataTable0
   \   000000E6   0x7800             LDRB     R0,[R0, #+0]
   \   000000E8   0x2804             CMP      R0,#+4
   \   000000EA   0xDA05             BGE.N    ??Select_Mode_10
    163                              {
    164                                      head_num++;			//如果不是最后一行则向下移动
   \   000000EC   0x....             LDR.N    R0,??DataTable0
   \   000000EE   0x7800             LDRB     R0,[R0, #+0]
   \   000000F0   0x1C40             ADDS     R0,R0,#+1
   \   000000F2   0x....             LDR.N    R1,??DataTable0
   \   000000F4   0x7008             STRB     R0,[R1, #+0]
   \   000000F6   0xE002             B.N      ??Select_Mode_11
    165                              }
    166                              else
    167                              {
    168                                      head_num = 1;		//如果是最后一行则移动到第一行
   \                     ??Select_Mode_10: (+1)
   \   000000F8   0x2001             MOVS     R0,#+1
   \   000000FA   0x....             LDR.N    R1,??DataTable0
   \   000000FC   0x7008             STRB     R0,[R1, #+0]
    169                              }
    170                              //本次选中菜单添加反白显示
    171                              oled_display_chinese(0, (uint8)(2*(head_num-1)), head_num+1, HIGH_LIGHT_MODE);
   \                     ??Select_Mode_11: (+1)
   \   000000FE   0x2301             MOVS     R3,#+1
   \   00000100   0x....             LDR.N    R0,??DataTable0
   \   00000102   0x7800             LDRB     R0,[R0, #+0]
   \   00000104   0x1C42             ADDS     R2,R0,#+1
   \   00000106   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000108   0x....             LDR.N    R0,??DataTable0
   \   0000010A   0x7800             LDRB     R0,[R0, #+0]
   \   0000010C   0x1E40             SUBS     R0,R0,#+1
   \   0000010E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000110   0x0041             LSLS     R1,R0,#+1
   \   00000112   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000114   0x2000             MOVS     R0,#+0
   \   00000116   0x.... 0x....      BL       oled_display_chinese
    172                              break;
   \   0000011A   0xE7AD             B.N      ??Select_Mode_0
    173          
    174                          case FIVE_DIR_LEFT:
    175                              break;
   \                     ??Select_Mode_6: (+1)
   \   0000011C   0xE7AC             B.N      ??Select_Mode_0
    176          
    177                          case FIVE_DIR_RIGHT:
    178                              break;
   \                     ??Select_Mode_9: (+1)
   \   0000011E   0xE7AB             B.N      ??Select_Mode_0
    179          
    180                          case FIVE_DIR_OK:
    181                              //选定模式，退出当前页面
    182                              mode = head_num + 1;
   \                     ??Select_Mode_8: (+1)
   \   00000120   0x....             LDR.N    R0,??DataTable0
   \   00000122   0x7800             LDRB     R0,[R0, #+0]
   \   00000124   0x1C44             ADDS     R4,R0,#+1
    183                              exit_flag = FLAG_ON;
   \   00000126   0x2501             MOVS     R5,#+1
    184                              break;
   \   00000128   0xE7A6             B.N      ??Select_Mode_0
    185          
    186                          default:
    187                              break;
   \                     ??Select_Mode_5: (+1)
   \   0000012A   0xE7A5             B.N      ??Select_Mode_0
    188                          }
    189                  }
    190          
    191          	return mode;
   \                     ??Select_Mode_3: (+1)
   \   0000012C   0x0020             MOVS     R0,R4
   \   0000012E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000130   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    192          }

   \                                 In section .data, align 1
   \                     `Select_Mode::head_num`:
   \   00000000   0x01               DC8 1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     `Select_Mode::head_num`

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   Select_Mode
        16   -> button_scan
        16   -> oled_display_chinese
       8   main
         8   -> Display_Image
         8   -> Init_All
         8   -> PIT_ONE_Enable
         8   -> Param_Set
         8   -> Select_Mode
         8   -> Smartcar_Running
         8   -> Smartcar_Test
         8   -> Wait_Beacon
         8   -> button_scan
         8   -> oled_fill


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
     306  Select_Mode
       1  head_num
      98  main

 
   1 byte  in section .data
 408 bytes in section .text
 
 408 bytes of CODE memory
   1 byte  of DATA memory

Errors: none
Warnings: none
