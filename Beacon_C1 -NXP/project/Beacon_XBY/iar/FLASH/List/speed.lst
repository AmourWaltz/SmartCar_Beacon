###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       25/Jul/2018  00:36:09
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\control\src\speed.c
#    Command line =  
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\control\src\speed.c" -D LPLD_K60 -lCN
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\FLASH\List"
#        -lB "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\List" -o
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\iar\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Normal.h" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\app\" -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\CPU\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\HW\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\DEV\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\FatFs\option\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\common\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\driver\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\descriptor\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\USB\class\" -I
#        "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\..\..\..\lib\LPLD\FUNC\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\driver\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\driver\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\control\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\control\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\debug\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\debug\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\device\src\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\device\inc\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\signal\inc\"
#        -I "D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\app\signal\src\" -I
#        "D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\system\" -Ol
#        -I "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    Locale       =  Chinese (Simplified)_China.936
#    List file    =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\List\speed.lst
#    Object file  =  
#        D:\Freescale\信标\Beacon_C1
#        -NXP\project\Beacon_XBY\iar\FLASH\Obj\speed.o
#
###############################################################################

D:\Freescale\信标\Beacon_C1 -NXP\project\Beacon_XBY\app\control\src\speed.c
      1          /*=============================================
      2              @file         speed.c
      3              @brief        速度控制
      4              @programmer   XBY
      5          =============================================*/
      6          #include "speedfast.h"
      7           
      8          /*===============================================================
      9          	@brief     速度控制函数
     10          	@function  增量式PI控制速度输出（未加编码器，暂为开环控制）
     11          	@note      加入编码器后改为闭环控制
     12          ==================================================================*/
     13          

   \                                 In section .text, align 2, keep-with-next
     14          void Speed_Control()
     15          {
   \                     Speed_Control: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     16            static int16 car_speed = 0;
     17          //  static int16 prev_error = 0;
     18            static int16 last_error = 0;
     19            static int16 error_delta = 0;
     20            static int16 speed_error;
     21            static int16 last_pwm_out;
     22          //  static int8 last_err_flag = 0;
     23          
     24             car_speed = gl_speed_set;
   \   00000002   0x....             LDR.N    R0,??DataTable4
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x....             LDR.N    R1,??DataTable4_1
   \   00000008   0x8008             STRH     R0,[R1, #+0]
     25          
     26             car_speed -= Set_Image_Speed();
   \   0000000A   0x....             LDR.N    R0,??DataTable4_1
   \   0000000C   0x8804             LDRH     R4,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       Set_Image_Speed
   \   00000012   0x1A20             SUBS     R0,R4,R0
   \   00000014   0x....             LDR.N    R1,??DataTable4_1
   \   00000016   0x8008             STRH     R0,[R1, #+0]
     27             car_speed -= Set_Angle_Speed();
   \   00000018   0x....             LDR.N    R0,??DataTable4_1
   \   0000001A   0x8804             LDRH     R4,[R0, #+0]
   \   0000001C   0x.... 0x....      BL       Set_Angle_Speed
   \   00000020   0x1A20             SUBS     R0,R4,R0
   \   00000022   0x....             LDR.N    R1,??DataTable4_1
   \   00000024   0x8008             STRH     R0,[R1, #+0]
     28             
     29             Get_Car_Condition();
   \   00000026   0x.... 0x....      BL       Get_Car_Condition
     30             
     31             if(gl_car_speed < 150)
   \   0000002A   0x....             LDR.N    R0,??DataTable4_2
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x2896             CMP      R0,#+150
   \   00000030   0xDA02             BGE.N    ??Speed_Control_0
     32             {
     33                car_speed = 150;
   \   00000032   0x2096             MOVS     R0,#+150
   \   00000034   0x....             LDR.N    R1,??DataTable4_1
   \   00000036   0x8008             STRH     R0,[R1, #+0]
     34             }
     35          
     36             speed_error = (int16)(car_speed - gl_car_speed);//给定速度-实际速度
   \                     ??Speed_Control_0: (+1)
   \   00000038   0x....             LDR.N    R0,??DataTable4_1
   \   0000003A   0x8800             LDRH     R0,[R0, #+0]
   \   0000003C   0x....             LDR.N    R1,??DataTable4_2
   \   0000003E   0x6809             LDR      R1,[R1, #+0]
   \   00000040   0x1A40             SUBS     R0,R0,R1
   \   00000042   0x....             LDR.N    R1,??DataTable4_3
   \   00000044   0x8008             STRH     R0,[R1, #+0]
     37             
     38          //   if(last_err_flag == 0)
     39          //   {
     40          //      error_delta = 0;
     41          //      last_err_flag = 1;
     42          //   }
     43          //   else
     44          //   {
     45          //      error_delta = speed_error - last_error;
     46          //   }
     47             error_delta = speed_error - last_error;
   \   00000046   0x....             LDR.N    R0,??DataTable4_3
   \   00000048   0x8800             LDRH     R0,[R0, #+0]
   \   0000004A   0x....             LDR.N    R1,??DataTable4_4
   \   0000004C   0x8809             LDRH     R1,[R1, #+0]
   \   0000004E   0x1A40             SUBS     R0,R0,R1
   \   00000050   0x....             LDR.N    R1,??DataTable4_5
   \   00000052   0x8008             STRH     R0,[R1, #+0]
     48          
     49             last_pwm_out = (int32)(gf_speed_p * speed_error / 100 + gf_speed_i * error_delta / 100);
   \   00000054   0x....             LDR.N    R0,??DataTable4_3
   \   00000056   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000005A   0x.... 0x....      BL       __aeabi_i2f
   \   0000005E   0x....             LDR.N    R1,??DataTable4_6
   \   00000060   0x6809             LDR      R1,[R1, #+0]
   \   00000062   0x.... 0x....      BL       __aeabi_fmul
   \   00000066   0x....             LDR.N    R1,??DataTable4_7  ;; 0x42c80000
   \   00000068   0x.... 0x....      BL       __aeabi_fdiv
   \   0000006C   0x0004             MOVS     R4,R0
   \   0000006E   0x....             LDR.N    R0,??DataTable4_5
   \   00000070   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000074   0x.... 0x....      BL       __aeabi_i2f
   \   00000078   0x....             LDR.N    R1,??DataTable4_8
   \   0000007A   0x6809             LDR      R1,[R1, #+0]
   \   0000007C   0x.... 0x....      BL       __aeabi_fmul
   \   00000080   0x....             LDR.N    R1,??DataTable4_7  ;; 0x42c80000
   \   00000082   0x.... 0x....      BL       __aeabi_fdiv
   \   00000086   0x0021             MOVS     R1,R4
   \   00000088   0x.... 0x....      BL       __aeabi_fadd
   \   0000008C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000090   0x....             LDR.N    R1,??DataTable4_9
   \   00000092   0x8008             STRH     R0,[R1, #+0]
     50             
     51             gl_pwm_out = (int32)(gl_pwm_out + last_pwm_out);
   \   00000094   0x....             LDR.N    R0,??DataTable4_10
   \   00000096   0x6800             LDR      R0,[R0, #+0]
   \   00000098   0x....             LDR.N    R1,??DataTable4_9
   \   0000009A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000009E   0x1840             ADDS     R0,R0,R1
   \   000000A0   0x....             LDR.N    R1,??DataTable4_10
   \   000000A2   0x6008             STR      R0,[R1, #+0]
     52             
     53             if(gl_pwm_out > 10000)
   \   000000A4   0x....             LDR.N    R0,??DataTable4_10
   \   000000A6   0x6800             LDR      R0,[R0, #+0]
   \   000000A8   0xF242 0x7111      MOVW     R1,#+10001
   \   000000AC   0x4288             CMP      R0,R1
   \   000000AE   0xDB04             BLT.N    ??Speed_Control_1
     54               gl_pwm_out = 10000;
   \   000000B0   0xF242 0x7010      MOVW     R0,#+10000
   \   000000B4   0x....             LDR.N    R1,??DataTable4_10
   \   000000B6   0x6008             STR      R0,[R1, #+0]
   \   000000B8   0xE007             B.N      ??Speed_Control_2
     55             else if(gl_pwm_out < -2000)
   \                     ??Speed_Control_1: (+1)
   \   000000BA   0x....             LDR.N    R0,??DataTable4_10
   \   000000BC   0x6800             LDR      R0,[R0, #+0]
   \   000000BE   0xF510 0x6FFA      CMN      R0,#+2000
   \   000000C2   0xDA02             BGE.N    ??Speed_Control_2
     56               gl_pwm_out = -2000;
   \   000000C4   0x....             LDR.N    R0,??DataTable4_11  ;; 0xfffff830
   \   000000C6   0x....             LDR.N    R1,??DataTable4_10
   \   000000C8   0x6008             STR      R0,[R1, #+0]
     57             
     58             //存储误差，用于下次计算
     59          //   prev_error=last_error;
     60             last_error = speed_error;
   \                     ??Speed_Control_2: (+1)
   \   000000CA   0x....             LDR.N    R0,??DataTable4_3
   \   000000CC   0x8800             LDRH     R0,[R0, #+0]
   \   000000CE   0x....             LDR.N    R1,??DataTable4_4
   \   000000D0   0x8008             STRH     R0,[R1, #+0]
     61              
     62             Motor_Output();
   \   000000D2   0x.... 0x....      BL       Motor_Output
     63          }
   \   000000D6   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 2
   \                     `Speed_Control::car_speed`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     `Speed_Control::last_error`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     `Speed_Control::error_delta`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     `Speed_Control::speed_error`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     `Speed_Control::last_pwm_out`:
   \   00000000                      DS8 2
     64          
     65          /*===============================================================
     66          	@brief     设定图像速度值
     67          	@function  根据图像大小间接反映距离信标灯距离改变速度，设定一阈值，达到后减速
     68          	@return    改变后的速度值
     69          	@note      阈值不确定，通过建模软件分析二次函数关系确定阈值
     70          ==================================================================*/
     71          

   \                                 In section .text, align 2, keep-with-next
     72          int Set_Image_Speed()
     73          {
   \                     Set_Image_Speed: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     74            uint32 area_temp;
     75          //  static float acce_kp = 0.2;
     76          //  static float dece_kp = 0.1;//升级为全局变量
     77            
     78            int img_speed_delta = 0;//根据图像距离设定速度变化量
   \   00000002   0x2000             MOVS     R0,#+0
     79            
     80            area_temp = gi_image_area_ave;
   \   00000004   0x....             LDR.N    R1,??DataTable4_12
   \   00000006   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
     81            
     82            if((area_temp >= AREA_THRESHOLD1)&&(area_temp <= AREA_THRESHOLD2))
   \   0000000A   0xF1B1 0x0246      SUBS     R2,R1,#+70
   \   0000000E   0x2A51             CMP      R2,#+81
   \   00000010   0xD20D             BCS.N    ??Set_Image_Speed_0
     83              img_speed_delta = (int)((area_temp - AREA_THRESHOLD1) *gf_dece_kp/80);
   \   00000012   0xF1B1 0x0046      SUBS     R0,R1,#+70
   \   00000016   0x.... 0x....      BL       __aeabi_ui2f
   \   0000001A   0x....             LDR.N    R1,??DataTable4_13
   \   0000001C   0x6809             LDR      R1,[R1, #+0]
   \   0000001E   0x.... 0x....      BL       __aeabi_fmul
   \   00000022   0x....             LDR.N    R1,??DataTable4_14  ;; 0x42a00000
   \   00000024   0x.... 0x....      BL       __aeabi_fdiv
   \   00000028   0x.... 0x....      BL       __aeabi_f2iz
   \   0000002C   0xE020             B.N      ??Set_Image_Speed_1
     84            else if(area_temp > AREA_THRESHOLD2)
   \                     ??Set_Image_Speed_0: (+1)
   \   0000002E   0x2997             CMP      R1,#+151
   \   00000030   0xD30D             BCC.N    ??Set_Image_Speed_2
     85              img_speed_delta = (int)((area_temp - AREA_THRESHOLD1) *gf_dece_kp/100);
   \   00000032   0xF1B1 0x0046      SUBS     R0,R1,#+70
   \   00000036   0x.... 0x....      BL       __aeabi_ui2f
   \   0000003A   0x....             LDR.N    R1,??DataTable4_13
   \   0000003C   0x6809             LDR      R1,[R1, #+0]
   \   0000003E   0x.... 0x....      BL       __aeabi_fmul
   \   00000042   0x....             LDR.N    R1,??DataTable4_7  ;; 0x42c80000
   \   00000044   0x.... 0x....      BL       __aeabi_fdiv
   \   00000048   0x.... 0x....      BL       __aeabi_f2iz
   \   0000004C   0xE010             B.N      ??Set_Image_Speed_1
     86            else if((area_temp < AREA_THRESHOLD1)&&(area_temp > 0))
   \                     ??Set_Image_Speed_2: (+1)
   \   0000004E   0x2946             CMP      R1,#+70
   \   00000050   0xD20E             BCS.N    ??Set_Image_Speed_1
   \   00000052   0x2900             CMP      R1,#+0
   \   00000054   0xD00C             BEQ.N    ??Set_Image_Speed_1
     87              img_speed_delta = (int)((area_temp - AREA_THRESHOLD1) *gf_acce_kp/100);
   \   00000056   0xF1B1 0x0046      SUBS     R0,R1,#+70
   \   0000005A   0x.... 0x....      BL       __aeabi_ui2f
   \   0000005E   0x....             LDR.N    R1,??DataTable4_15
   \   00000060   0x6809             LDR      R1,[R1, #+0]
   \   00000062   0x.... 0x....      BL       __aeabi_fmul
   \   00000066   0x....             LDR.N    R1,??DataTable4_7  ;; 0x42c80000
   \   00000068   0x.... 0x....      BL       __aeabi_fdiv
   \   0000006C   0x.... 0x....      BL       __aeabi_f2iz
     88            
     89            return img_speed_delta;
   \                     ??Set_Image_Speed_1: (+1)
   \   00000070   0xBD02             POP      {R1,PC}          ;; return
     90          }
     91          
     92          /*===============================================================
     93          	@brief     弯道减速
     94          	@function  根据舵机打角程度将速度减小至某一值   
     95          	@return    改变后的速度值
     96          	@note      只为初期预判值，后期需精调
     97          ==================================================================*/
     98          

   \                                 In section .text, align 2, keep-with-next
     99          int Set_Angle_Speed()
    100          {   
   \                     Set_Angle_Speed: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    101            int32 servo_output;
    102            int servo_angle;
    103            int angle_speed_delta;
    104          //  static float angle_speed_kp = 0.7;//升级为全局变量
    105            
    106            servo_output = gl_servo_pwm;
   \   00000002   0x....             LDR.N    R0,??DataTable4_16
   \   00000004   0x6800             LDR      R0,[R0, #+0]
    107            //servo_angle = Servo_Angle(servo_output);
    108            servo_angle = gl_direction_set;
   \   00000006   0x....             LDR.N    R0,??DataTable4_17
   \   00000008   0x6804             LDR      R4,[R0, #+0]
    109            
    110            if(servo_angle < 0)
   \   0000000A   0x2C00             CMP      R4,#+0
   \   0000000C   0xD500             BPL.N    ??Set_Angle_Speed_0
    111              servo_angle = -servo_angle;
   \   0000000E   0x4264             RSBS     R4,R4,#+0
    112            
    113            angle_speed_delta = (int)((gf_angle_speed_kp/1000) * servo_angle);
   \                     ??Set_Angle_Speed_0: (+1)
   \   00000010   0x....             LDR.N    R0,??DataTable4_18
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x....             LDR.N    R1,??DataTable4_19  ;; 0x447a0000
   \   00000016   0x.... 0x....      BL       __aeabi_fdiv
   \   0000001A   0x0005             MOVS     R5,R0
   \   0000001C   0x0020             MOVS     R0,R4
   \   0000001E   0x.... 0x....      BL       __aeabi_i2f
   \   00000022   0x0029             MOVS     R1,R5
   \   00000024   0x.... 0x....      BL       __aeabi_fmul
   \   00000028   0x.... 0x....      BL       __aeabi_f2iz
    114            
    115            return angle_speed_delta;
   \   0000002C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    116          }
    117          
    118          /*===============================================================
    119          	@brief     获取小车速度及路程
    120          ==================================================================*/
    121          

   \                                 In section .text, align 2, keep-with-next
    122          void Get_Car_Condition()
    123          {
   \                     Get_Car_Condition: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    124              static int16 si_car_speed = 0;
    125              
    126              gi_left_speed = (int16)(Get_Left_Speed());
   \   00000002   0x.... 0x....      BL       Get_Left_Speed
   \   00000006   0x.... 0x....      BL       __aeabi_f2iz
   \   0000000A   0x....             LDR.N    R1,??DataTable4_20
   \   0000000C   0x8008             STRH     R0,[R1, #+0]
    127              gi_right_speed = (int16)(Get_Right_Speed());
   \   0000000E   0x.... 0x....      BL       Get_Right_Speed
   \   00000012   0x.... 0x....      BL       __aeabi_f2iz
   \   00000016   0x....             LDR.N    R1,??DataTable4_21
   \   00000018   0x8008             STRH     R0,[R1, #+0]
    128              
    129              si_car_speed = (int16)((gi_left_speed + gi_right_speed)/2);
   \   0000001A   0x....             LDR.N    R0,??DataTable4_20
   \   0000001C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000020   0x....             LDR.N    R1,??DataTable4_21
   \   00000022   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000026   0x1808             ADDS     R0,R1,R0
   \   00000028   0x2102             MOVS     R1,#+2
   \   0000002A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000002E   0x....             LDR.N    R1,??DataTable4_22
   \   00000030   0x8008             STRH     R0,[R1, #+0]
    130              
    131              gl_car_speed = si_car_speed;
   \   00000032   0x....             LDR.N    R0,??DataTable4_22
   \   00000034   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000038   0x....             LDR.N    R1,??DataTable4_2
   \   0000003A   0x6008             STR      R0,[R1, #+0]
    132              
    133              gl_car_running_distance += (int32)(si_car_speed * 0.5);
   \   0000003C   0x....             LDR.N    R0,??DataTable4_23
   \   0000003E   0x6804             LDR      R4,[R0, #+0]
   \   00000040   0x....             LDR.N    R0,??DataTable4_22
   \   00000042   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000046   0x.... 0x....      BL       __aeabi_i2d
   \   0000004A   0x2200             MOVS     R2,#+0
   \   0000004C   0x....             LDR.N    R3,??DataTable4_24  ;; 0x3fe00000
   \   0000004E   0x.... 0x....      BL       __aeabi_dmul
   \   00000052   0x.... 0x....      BL       __aeabi_d2iz
   \   00000056   0x1900             ADDS     R0,R0,R4
   \   00000058   0x....             LDR.N    R1,??DataTable4_23
   \   0000005A   0x6008             STR      R0,[R1, #+0]
    134          }
   \   0000005C   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 2
   \                     `Get_Car_Condition::si_car_speed`:
   \   00000000                      DS8 2
    135          
    136          /*===============================================================
    137          	@brief     利用舵机增量计算左右轮差速
    138          ==================================================================*/
    139          

   \                                 In section .text, align 2, keep-with-next
    140          void Speed_PWM_Delta(int16 *left_expect_speed, int16 *right_expect_speed, int32 center_expect_speed)
    141          { 
   \                     Speed_PWM_Delta: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x4681             MOV      R9,R0
   \   00000006   0x000C             MOVS     R4,R1
   \   00000008   0x0015             MOVS     R5,R2
    142                  static int PWM_delta[16] = {0, 8, 15, 23,
    143                                               28, 35, 39, 44, 
    144                                               48, 52, 56, 60, 
    145                                               64, 68, 72, 75};
    146          
    147                  static float Speed_Inside[16] = {0.9261,0.9161,0.9061,0.8961,
    148                                                    0.8861,0.8761,0.8661,0.8561,
    149                                                    0.8411,0.8311,0.8211,0.8111,
    150                                                    0.8011,0.7861,0.7711,0.7561};
    151          	static float Speed_Outside[16] ={1.0739,1.0839,1.0939,1.1039,
    152                                                    1.1139,1.1239,1.1339,1.1439,
    153                                                    1.1589,1.1689,1.1789,1.1889,
    154                                                    1.1989,1.2139,1.2289,1.2439};
    155          
    156          	int flag = 0, i = 0;
   \   0000000A   0x2600             MOVS     R6,#+0
   \   0000000C   0x2100             MOVS     R1,#+0
    157          	int16  speed_left_temp = 0, speed_right_temp = 0;
   \   0000000E   0x2700             MOVS     R7,#+0
   \   00000010   0xF05F 0x0800      MOVS     R8,#+0
    158                  int16 servo_PWM_delta = 0; 
   \   00000014   0x2000             MOVS     R0,#+0
    159                  servo_PWM_delta = Get_Servo_PWM_Delta();
   \   00000016   0x.... 0x....      BL       Get_Servo_PWM_Delta
    160                  
    161                  if (center_expect_speed == 0)
   \   0000001A   0x2D00             CMP      R5,#+0
   \   0000001C   0xD103             BNE.N    ??Speed_PWM_Delta_0
    162                  {
    163             		speed_left_temp = 0;
   \   0000001E   0x2700             MOVS     R7,#+0
    164          		speed_right_temp = 0;     
   \   00000020   0xF05F 0x0800      MOVS     R8,#+0
   \   00000024   0xE08E             B.N      ??Speed_PWM_Delta_1
    165                  }
    166                  else if (servo_PWM_delta >= -10 && servo_PWM_delta <= 10)
   \                     ??Speed_PWM_Delta_0: (+1)
   \   00000026   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000028   0xF110 0x010A      ADDS     R1,R0,#+10
   \   0000002C   0x2915             CMP      R1,#+21
   \   0000002E   0xD202             BCS.N    ??Speed_PWM_Delta_2
    167                  {
    168                      speed_left_temp = center_expect_speed;
   \   00000030   0x002F             MOVS     R7,R5
    169                      speed_right_temp = center_expect_speed;  
   \   00000032   0x46A8             MOV      R8,R5
   \   00000034   0xE086             B.N      ??Speed_PWM_Delta_1
    170                  }
    171                  else if (servo_PWM_delta < -10)//向右转
   \                     ??Speed_PWM_Delta_2: (+1)
   \   00000036   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000038   0xF110 0x0F0A      CMN      R0,#+10
   \   0000003C   0xDA42             BGE.N    ??Speed_PWM_Delta_3
    172                  {
    173                       servo_PWM_delta = -servo_PWM_delta;
   \   0000003E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000040   0x4240             RSBS     R0,R0,#+0
    174                       for(i = 0; i <= 14; i++)
   \   00000042   0x2100             MOVS     R1,#+0
   \   00000044   0xE000             B.N      ??Speed_PWM_Delta_4
   \                     ??Speed_PWM_Delta_5: (+1)
   \   00000046   0x1C49             ADDS     R1,R1,#+1
   \                     ??Speed_PWM_Delta_4: (+1)
   \   00000048   0x290F             CMP      R1,#+15
   \   0000004A   0xDA0D             BGE.N    ??Speed_PWM_Delta_6
    175                       {
    176                          if (servo_PWM_delta > PWM_delta[i] && servo_PWM_delta <= PWM_delta[i+1])
   \   0000004C   0x....             LDR.N    R2,??DataTable4_25
   \   0000004E   0xF852 0x2021      LDR      R2,[R2, R1, LSL #+2]
   \   00000052   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000054   0x4282             CMP      R2,R0
   \   00000056   0xDAF6             BGE.N    ??Speed_PWM_Delta_5
   \   00000058   0x....             LDR.N    R2,??DataTable4_25
   \   0000005A   0xEB02 0x0281      ADD      R2,R2,R1, LSL #+2
   \   0000005E   0x6852             LDR      R2,[R2, #+4]
   \   00000060   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000062   0x4282             CMP      R2,R0
   \   00000064   0xDBEF             BLT.N    ??Speed_PWM_Delta_5
    177                          {
    178                              flag = i+1;
   \   00000066   0x1C4E             ADDS     R6,R1,#+1
    179                              break;
    180                          }
    181                       }
    182                       
    183                      if(i >= 15)
   \                     ??Speed_PWM_Delta_6: (+1)
   \   00000068   0x290F             CMP      R1,#+15
   \   0000006A   0xDB00             BLT.N    ??Speed_PWM_Delta_7
    184                      {
    185                           flag = 15;
   \   0000006C   0x260F             MOVS     R6,#+15
    186                      }
    187                       
    188                      speed_left_temp = (int16)(center_expect_speed * (Speed_Outside[flag]+0.035));
   \                     ??Speed_PWM_Delta_7: (+1)
   \   0000006E   0x0028             MOVS     R0,R5
   \   00000070   0x.... 0x....      BL       __aeabi_i2d
   \   00000074   0x4682             MOV      R10,R0
   \   00000076   0x468B             MOV      R11,R1
   \   00000078   0x....             LDR.N    R0,??DataTable4_26
   \   0000007A   0xF850 0x0026      LDR      R0,[R0, R6, LSL #+2]
   \   0000007E   0x.... 0x....      BL       __aeabi_f2d
   \   00000082   0x....             LDR.N    R2,??DataTable4_27  ;; 0x1eb851ec
   \   00000084   0x....             LDR.N    R3,??DataTable4_28  ;; 0x3fa1eb85
   \   00000086   0x.... 0x....      BL       __aeabi_dadd
   \   0000008A   0x4652             MOV      R2,R10
   \   0000008C   0x465B             MOV      R3,R11
   \   0000008E   0x.... 0x....      BL       __aeabi_dmul
   \   00000092   0x.... 0x....      BL       __aeabi_d2iz
   \   00000096   0x0007             MOVS     R7,R0
    189                      speed_right_temp = (int16)(center_expect_speed *(Speed_Inside[flag]-0.012));
   \   00000098   0x0028             MOVS     R0,R5
   \   0000009A   0x.... 0x....      BL       __aeabi_i2d
   \   0000009E   0x4682             MOV      R10,R0
   \   000000A0   0x468B             MOV      R11,R1
   \   000000A2   0x....             LDR.N    R0,??DataTable4_29
   \   000000A4   0xF850 0x0026      LDR      R0,[R0, R6, LSL #+2]
   \   000000A8   0x.... 0x....      BL       __aeabi_f2d
   \   000000AC   0x....             LDR.N    R2,??DataTable4_30  ;; 0xbc6a7efa
   \   000000AE   0x....             LDR.N    R3,??DataTable4_31  ;; 0xbf889374
   \   000000B0   0x.... 0x....      BL       __aeabi_dadd
   \   000000B4   0x4652             MOV      R2,R10
   \   000000B6   0x465B             MOV      R3,R11
   \   000000B8   0x.... 0x....      BL       __aeabi_dmul
   \   000000BC   0x.... 0x....      BL       __aeabi_d2iz
   \   000000C0   0x4680             MOV      R8,R0
   \   000000C2   0xE03F             B.N      ??Speed_PWM_Delta_1
    190                  }
    191                  else
    192                  {
    193                       for(i = 0; i <= 14; i++)
   \                     ??Speed_PWM_Delta_3: (+1)
   \   000000C4   0x2100             MOVS     R1,#+0
   \   000000C6   0xE000             B.N      ??Speed_PWM_Delta_8
   \                     ??Speed_PWM_Delta_9: (+1)
   \   000000C8   0x1C49             ADDS     R1,R1,#+1
   \                     ??Speed_PWM_Delta_8: (+1)
   \   000000CA   0x290F             CMP      R1,#+15
   \   000000CC   0xDA0D             BGE.N    ??Speed_PWM_Delta_10
    194                       {
    195                          if (servo_PWM_delta > PWM_delta[i] && servo_PWM_delta <= PWM_delta[i+1])
   \   000000CE   0x....             LDR.N    R2,??DataTable4_25
   \   000000D0   0xF852 0x2021      LDR      R2,[R2, R1, LSL #+2]
   \   000000D4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000D6   0x4282             CMP      R2,R0
   \   000000D8   0xDAF6             BGE.N    ??Speed_PWM_Delta_9
   \   000000DA   0x....             LDR.N    R2,??DataTable4_25
   \   000000DC   0xEB02 0x0281      ADD      R2,R2,R1, LSL #+2
   \   000000E0   0x6852             LDR      R2,[R2, #+4]
   \   000000E2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000E4   0x4282             CMP      R2,R0
   \   000000E6   0xDBEF             BLT.N    ??Speed_PWM_Delta_9
    196                          {
    197                              flag = i+1;
   \   000000E8   0x1C4E             ADDS     R6,R1,#+1
    198                              break;
    199                          }
    200                       }
    201          
    202                      if(i >= 15)
   \                     ??Speed_PWM_Delta_10: (+1)
   \   000000EA   0x290F             CMP      R1,#+15
   \   000000EC   0xDB00             BLT.N    ??Speed_PWM_Delta_11
    203                      {
    204                           flag = 15;
   \   000000EE   0x260F             MOVS     R6,#+15
    205                      }
    206          
    207                      speed_right_temp = (int16)(center_expect_speed * (Speed_Outside[flag]+0.035));
   \                     ??Speed_PWM_Delta_11: (+1)
   \   000000F0   0x0028             MOVS     R0,R5
   \   000000F2   0x.... 0x....      BL       __aeabi_i2d
   \   000000F6   0x4682             MOV      R10,R0
   \   000000F8   0x468B             MOV      R11,R1
   \   000000FA   0x....             LDR.N    R0,??DataTable4_26
   \   000000FC   0xF850 0x0026      LDR      R0,[R0, R6, LSL #+2]
   \   00000100   0x.... 0x....      BL       __aeabi_f2d
   \   00000104   0x....             LDR.N    R2,??DataTable4_27  ;; 0x1eb851ec
   \   00000106   0x....             LDR.N    R3,??DataTable4_28  ;; 0x3fa1eb85
   \   00000108   0x.... 0x....      BL       __aeabi_dadd
   \   0000010C   0x4652             MOV      R2,R10
   \   0000010E   0x465B             MOV      R3,R11
   \   00000110   0x.... 0x....      BL       __aeabi_dmul
   \   00000114   0x.... 0x....      BL       __aeabi_d2iz
   \   00000118   0x4680             MOV      R8,R0
    208                      speed_left_temp = (int16)(center_expect_speed *(Speed_Inside[flag]-0.012));
   \   0000011A   0x0028             MOVS     R0,R5
   \   0000011C   0x.... 0x....      BL       __aeabi_i2d
   \   00000120   0x4682             MOV      R10,R0
   \   00000122   0x468B             MOV      R11,R1
   \   00000124   0x....             LDR.N    R0,??DataTable4_29
   \   00000126   0xF850 0x0026      LDR      R0,[R0, R6, LSL #+2]
   \   0000012A   0x.... 0x....      BL       __aeabi_f2d
   \   0000012E   0x....             LDR.N    R2,??DataTable4_30  ;; 0xbc6a7efa
   \   00000130   0x....             LDR.N    R3,??DataTable4_31  ;; 0xbf889374
   \   00000132   0x.... 0x....      BL       __aeabi_dadd
   \   00000136   0x4652             MOV      R2,R10
   \   00000138   0x465B             MOV      R3,R11
   \   0000013A   0x.... 0x....      BL       __aeabi_dmul
   \   0000013E   0x.... 0x....      BL       __aeabi_d2iz
   \   00000142   0x0007             MOVS     R7,R0
    209                  }
    210          
    211          	*left_expect_speed = speed_left_temp;
   \                     ??Speed_PWM_Delta_1: (+1)
   \   00000144   0xF8A9 0x7000      STRH     R7,[R9, #+0]
    212          	*right_expect_speed = speed_right_temp;
   \   00000148   0xF8A4 0x8000      STRH     R8,[R4, #+0]
    213          }
   \   0000014C   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return

   \                                 In section .data, align 4
   \                     `Speed_PWM_Delta::PWM_delta`:
   \   00000000   0x00000000         DC32 0, 8, 15, 23, 28, 35, 39, 44, 48, 52, 56, 60, 64, 68, 72, 75
   \              0x00000008   
   \              0x0000000F   
   \              0x00000017   
   \              0x0000001C   
   \              0x00000023   
   \              0x00000027   
   \              0x0000002C   
   \              0x00000030   
   \              0x00000034   
   \              0x00000038   
   \              0x0000003C   
   \              0x00000040   
   \              0x00000044   
   \              0x00000048   
   \              0x0000004B   

   \                                 In section .data, align 4
   \                     `Speed_PWM_Delta::Speed_Inside`:
   \   00000000   0x3F6D14E4         DC32 3F6D14E4H, 3F6A8588H, 3F67F62BH, 3F6566CFH, 3F62D773H, 3F604817H
   \              0x3F6A8588   
   \              0x3F67F62B   
   \              0x3F6566CF   
   \              0x3F62D773   
   \              0x3F604817   
   \   00000018   0x3F5DB8BB         DC32 3F5DB8BBH, 3F5B295FH, 3F575254H, 3F54C2F8H, 3F52339CH, 3F4FA440H
   \              0x3F5B295F   
   \              0x3F575254   
   \              0x3F54C2F8   
   \              0x3F52339C   
   \              0x3F4FA440   
   \   00000030   0x3F4D14E4         DC32 3F4D14E4H, 3F493DD9H, 3F4566CFH, 3F418FC5H
   \              0x3F493DD9   
   \              0x3F4566CF   
   \              0x3F418FC5   

   \                                 In section .data, align 4
   \                     `Speed_PWM_Delta::Speed_Outside`:
   \   00000000   0x3F89758E         DC32 3F89758EH, 3F8ABD3CH, 3F8C04EAH, 3F8D4C98H, 3F8E9446H, 3F8FDBF5H
   \              0x3F8ABD3C   
   \              0x3F8C04EA   
   \              0x3F8D4C98   
   \              0x3F8E9446   
   \              0x3F8FDBF5   
   \   00000018   0x3F9123A3         DC32 3F9123A3H, 3F926B51H, 3F9456D6H, 3F959E84H, 3F96E632H, 3F982DE0H
   \              0x3F926B51   
   \              0x3F9456D6   
   \              0x3F959E84   
   \              0x3F96E632   
   \              0x3F982DE0   
   \   00000030   0x3F99758E         DC32 3F99758EH, 3F9B6113H, 3F9D4C98H, 3F9F381DH
   \              0x3F9B6113   
   \              0x3F9D4C98   
   \              0x3F9F381D   

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     gl_speed_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     `Speed_Control::car_speed`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     gl_car_speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     `Speed_Control::speed_error`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     `Speed_Control::last_error`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     `Speed_Control::error_delta`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     gf_speed_p

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     gf_speed_i

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     `Speed_Control::last_pwm_out`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     gl_pwm_out

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0xFFFFF830         DC32     0xfffff830

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x........         DC32     gi_image_area_ave

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0x........         DC32     gf_dece_kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \   00000000   0x42A00000         DC32     0x42a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \   00000000   0x........         DC32     gf_acce_kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_16:
   \   00000000   0x........         DC32     gl_servo_pwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_17:
   \   00000000   0x........         DC32     gl_direction_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_18:
   \   00000000   0x........         DC32     gf_angle_speed_kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_19:
   \   00000000   0x447A0000         DC32     0x447a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_20:
   \   00000000   0x........         DC32     gi_left_speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_21:
   \   00000000   0x........         DC32     gi_right_speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_22:
   \   00000000   0x........         DC32     `Get_Car_Condition::si_car_speed`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_23:
   \   00000000   0x........         DC32     gl_car_running_distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_24:
   \   00000000   0x3FE00000         DC32     0x3fe00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_25:
   \   00000000   0x........         DC32     `Speed_PWM_Delta::PWM_delta`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_26:
   \   00000000   0x........         DC32     `Speed_PWM_Delta::Speed_Outside`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_27:
   \   00000000   0x1EB851EC         DC32     0x1eb851ec

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_28:
   \   00000000   0x3FA1EB85         DC32     0x3fa1eb85

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_29:
   \   00000000   0x........         DC32     `Speed_PWM_Delta::Speed_Inside`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_30:
   \   00000000   0xBC6A7EFA         DC32     0xbc6a7efa

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_31:
   \   00000000   0xBF889374         DC32     0xbf889374

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Get_Car_Condition
         8   -> Get_Left_Speed
         8   -> Get_Right_Speed
         8   -> __aeabi_d2iz
         8   -> __aeabi_dmul
         8   -> __aeabi_f2iz
         8   -> __aeabi_i2d
      16   Set_Angle_Speed
        16   -> __aeabi_f2iz
        16   -> __aeabi_fdiv
        16   -> __aeabi_fmul
        16   -> __aeabi_i2f
       8   Set_Image_Speed
         8   -> __aeabi_f2iz
         8   -> __aeabi_fdiv
         8   -> __aeabi_fmul
         8   -> __aeabi_ui2f
       8   Speed_Control
         8   -> Get_Car_Condition
         8   -> Motor_Output
         8   -> Set_Angle_Speed
         8   -> Set_Image_Speed
         8   -> __aeabi_f2iz
         8   -> __aeabi_fadd
         8   -> __aeabi_fdiv
         8   -> __aeabi_fmul
         8   -> __aeabi_i2f
      40   Speed_PWM_Delta
        40   -> Get_Servo_PWM_Delta
        40   -> __aeabi_d2iz
        40   -> __aeabi_dadd
        40   -> __aeabi_dmul
        40   -> __aeabi_f2d
        40   -> __aeabi_i2d


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_16
       4  ??DataTable4_17
       4  ??DataTable4_18
       4  ??DataTable4_19
       4  ??DataTable4_2
       4  ??DataTable4_20
       4  ??DataTable4_21
       4  ??DataTable4_22
       4  ??DataTable4_23
       4  ??DataTable4_24
       4  ??DataTable4_25
       4  ??DataTable4_26
       4  ??DataTable4_27
       4  ??DataTable4_28
       4  ??DataTable4_29
       4  ??DataTable4_3
       4  ??DataTable4_30
       4  ??DataTable4_31
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      94  Get_Car_Condition
      64  PWM_delta
      46  Set_Angle_Speed
     114  Set_Image_Speed
     216  Speed_Control
      64  Speed_Inside
      64  Speed_Outside
     336  Speed_PWM_Delta
       2  car_speed
       2  error_delta
       2  last_error
       2  last_pwm_out
       2  si_car_speed
       2  speed_error

 
  12 bytes in section .bss
 192 bytes in section .data
 934 bytes in section .text
 
 934 bytes of CODE memory
 204 bytes of DATA memory

Errors: none
Warnings: 1
